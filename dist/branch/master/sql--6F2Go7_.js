function isUndefined(e){return void 0===e||void 0===e}function isString(e){return"string"==typeof e}function isNumber(e){return"number"==typeof e}function isBoolean(e){return"boolean"==typeof e}function isNull(e){return null===e}function isDate(e){return e instanceof Date}function isBigInt(e){return"bigint"==typeof e}function isBuffer(e){return"undefined"!=typeof Buffer&&Buffer.isBuffer(e)}function isFunction(e){return"function"==typeof e}function isObject(e){return"object"==typeof e&&null!==e}function isPlainObject(e){return isObject(e)&&!Array.isArray(e)&&!isDate(e)&&!isBuffer(e)&&!function isArrayBufferOrView(e){return e instanceof ArrayBuffer||ArrayBuffer.isView(e)}(e)}function getLast(e){return e[e.length-1]}function freeze(e){return Object.freeze(e)}function asArray(e){return isReadonlyArray(e)?e:[e]}function isReadonlyArray(e){return Array.isArray(e)}function noop(e){return e}function compare(e,r){return isReadonlyArray(e)&&isReadonlyArray(r)?function compareArrays(e,r){if(e.length!==r.length)return!1;for(let t=0;t<e.length;++t)if(!compare(e[t],r[t]))return!1;return!0}(e,r):isObject(e)&&isObject(r)?function compareObjects(e,r){if(isBuffer(e)&&isBuffer(r))return function compareBuffers(e,r){return 0===Buffer.compare(e,r)}(e,r);if(isDate(e)&&isDate(r))return function compareDates(e,r){return e.getTime()===r.getTime()}(e,r);return function compareGenericObjects(e,r){const t=Object.keys(e),n=Object.keys(r);if(t.length!==n.length)return!1;for(const n of t)if(!compare(e[n],r[n]))return!1;return!0}(e,r)}(e,r):e===r}const e=freeze({is:e=>"IdentifierNode"===e.kind,create:e=>freeze({kind:"IdentifierNode",name:e})}),r=freeze({is:e=>"SchemableIdentifierNode"===e.kind,create:r=>freeze({kind:"SchemableIdentifierNode",identifier:e.create(r)}),createWithSchema:(r,t)=>freeze({kind:"SchemableIdentifierNode",schema:e.create(r),identifier:e.create(t)})}),t=freeze({is:e=>"AliasNode"===e.kind,create:(e,r)=>freeze({kind:"AliasNode",node:e,alias:r})}),n=freeze({is:e=>"TableNode"===e.kind,create:e=>freeze({kind:"TableNode",table:r.create(e)}),createWithSchema:(e,t)=>freeze({kind:"TableNode",table:r.createWithSchema(e,t)})});function isOperationNodeSource(e){return isObject(e)&&isFunction(e.toOperationNode)}function isExpression(e){return isObject(e)&&"expressionType"in e&&isOperationNodeSource(e)}function isAliasedExpression(e){return isObject(e)&&"expression"in e&&isString(e.alias)&&isOperationNodeSource(e)}const i=freeze({is:e=>"SelectModifierNode"===e.kind,create:(e,r)=>freeze({kind:"SelectModifierNode",modifier:e,of:r}),createWithExpression:e=>freeze({kind:"SelectModifierNode",rawModifier:e})}),o=freeze({is:e=>"AndNode"===e.kind,create:(e,r)=>freeze({kind:"AndNode",left:e,right:r})}),s=freeze({is:e=>"OrNode"===e.kind,create:(e,r)=>freeze({kind:"OrNode",left:e,right:r})}),a=freeze({is:e=>"OnNode"===e.kind,create:e=>freeze({kind:"OnNode",on:e}),cloneWithOperation:(e,r,t)=>freeze({...e,on:"And"===r?o.create(e.on,t):s.create(e.on,t)})}),d=freeze({is:e=>"JoinNode"===e.kind,create:(e,r)=>freeze({kind:"JoinNode",joinType:e,table:r,on:void 0}),createWithOn:(e,r,t)=>freeze({kind:"JoinNode",joinType:e,table:r,on:a.create(t)}),cloneWithOn:(e,r)=>freeze({...e,on:e.on?a.cloneWithOperation(e.on,"And",r):a.create(r)})}),u=freeze({is:e=>"BinaryOperationNode"===e.kind,create:(e,r,t)=>freeze({kind:"BinaryOperationNode",leftOperand:e,operator:r,rightOperand:t})}),p=["=","==","!=","<>",">",">=","<","<=","in","not in","is","is not","like","not like","match","ilike","not ilike","@>","<@","&&","?","?&","!<","!>","<=>","!~","~","~*","!~*","@@","@@@","!!","<->","regexp","is distinct from","is not distinct from"],l=["+","-","*","/","%","^","&","|","#","<<",">>"],c=["->","->>"],h=[...p,...l,"&&","||"],f=["exists","not exists"],m=["not","-",...f],N=[...h,...c,...m,"between","between symmetric"],y=freeze({is:e=>"OperatorNode"===e.kind,create:e=>freeze({kind:"OperatorNode",operator:e})});function isOperator(e){return isString(e)&&N.includes(e)}function isBinaryOperator(e){return isString(e)&&h.includes(e)}function isComparisonOperator(e){return isString(e)&&p.includes(e)}function isArithmeticOperator(e){return isString(e)&&l.includes(e)}function isJSONOperator(e){return isString(e)&&c.includes(e)}const w=freeze({is:e=>"ColumnNode"===e.kind,create:r=>freeze({kind:"ColumnNode",column:e.create(r)})}),g=freeze({is:e=>"SelectAllNode"===e.kind,create:()=>freeze({kind:"SelectAllNode"})}),O=freeze({is:e=>"ReferenceNode"===e.kind,create:(e,r)=>freeze({kind:"ReferenceNode",table:r,column:e}),createSelectAll:e=>freeze({kind:"ReferenceNode",table:e,column:g.create()})});class DynamicReferenceBuilder{#e;get dynamicReference(){return this.#e}get refType(){}constructor(e){this.#e=e}toOperationNode(){return parseSimpleReferenceExpression(this.#e)}}function isDynamicReferenceBuilder(e){return isObject(e)&&isOperationNodeSource(e)&&isString(e.dynamicReference)}const B=freeze({is:e=>"OrderByItemNode"===e.kind,create:(e,r)=>freeze({kind:"OrderByItemNode",orderBy:e,direction:r})}),x=freeze({is:e=>"RawNode"===e.kind,create:(e,r)=>freeze({kind:"RawNode",sqlFragments:freeze(e),parameters:freeze(r)}),createWithSql:e=>x.create([e],[]),createWithChild:e=>x.create(["",""],[e]),createWithChildren:e=>x.create(new Array(e.length+1).fill(""),e)});function isOrderByDirection(e){return"asc"===e||"desc"===e}function parseOrderBy(e){if(2===e.length)return[parseOrderByItem(e[0],e[1])];if(1===e.length){const[r]=e;return Array.isArray(r)?r.map((e=>parseOrderByItem(e))):[parseOrderByItem(r)]}throw new Error(`Invalid number of arguments at order by! expected 1-2, received ${e.length}`)}function parseOrderByItem(e,r){const t=function parseOrderByExpression(e){if(isExpressionOrFactory(e))return parseExpression(e);if(isDynamicReferenceBuilder(e))return e.toOperationNode();const[r,t]=e.split(" ");if(t){if(!isOrderByDirection(t))throw new Error(`Invalid order by direction: ${t}`);return B.create(parseStringReference(r),parseOrderByDirectionExpression(t))}return parseStringReference(e)}(e);if(B.is(t)){if(r)throw new Error("Cannot specify direction twice!");return t}return B.create(t,parseOrderByDirectionExpression(r))}function parseOrderByDirectionExpression(e){if(e)return"asc"===e||"desc"===e?x.createWithSql(e):e.toOperationNode()}const b=freeze({is:e=>"JSONReferenceNode"===e.kind,create:(e,r)=>freeze({kind:"JSONReferenceNode",reference:e,traversal:r}),cloneWithTraversal:(e,r)=>freeze({...e,traversal:r})}),W=freeze({is:e=>"JSONOperatorChainNode"===e.kind,create:e=>freeze({kind:"JSONOperatorChainNode",operator:e,values:freeze([])}),cloneWithValue:(e,r)=>freeze({...e,values:freeze([...e.values,r])})}),S=freeze({is:e=>"JSONPathNode"===e.kind,create:e=>freeze({kind:"JSONPathNode",inOperator:e,pathLegs:freeze([])}),cloneWithLeg:(e,r)=>freeze({...e,pathLegs:freeze([...e.pathLegs,r])})});function parseSimpleReferenceExpression(e){return isString(e)?parseStringReference(e):e.toOperationNode()}function parseReferenceExpressionOrList(e){return isReadonlyArray(e)?e.map((e=>parseReferenceExpression(e))):[parseReferenceExpression(e)]}function parseReferenceExpression(e){return isExpressionOrFactory(e)?parseExpression(e):parseSimpleReferenceExpression(e)}function parseStringReference(e){if(!e.includes("."))return O.create(w.create(e));const r=e.split(".").map(trim$1);if(3===r.length)return function parseStringReferenceWithTableAndSchema(e){const[r,t,i]=e;return O.create(w.create(i),n.createWithSchema(r,t))}(r);if(2===r.length)return function parseStringReferenceWithTable(e){const[r,t]=e;return O.create(w.create(t),n.create(r))}(r);throw new Error(`invalid column reference ${e}`)}function parseColumnName(e){return w.create(e)}function parseOrderedColumnName(e){if(e.includes(" ")){const[r,t]=e.split(" ").map(trim$1);if(!isOrderByDirection(t))throw new Error(`invalid order direction "${t}" next to "${r}"`);return parseOrderBy([r,t])[0]}return parseColumnName(e)}function trim$1(e){return e.trim()}const I=freeze({is:e=>"PrimitiveValueListNode"===e.kind,create:e=>freeze({kind:"PrimitiveValueListNode",values:freeze([...e])})}),z=freeze({is:e=>"ValueListNode"===e.kind,create:e=>freeze({kind:"ValueListNode",values:freeze(e)})}),E=freeze({is:e=>"ValueNode"===e.kind,create:e=>freeze({kind:"ValueNode",value:e}),createImmediate:e=>freeze({kind:"ValueNode",value:e,immediate:!0})});function parseValueExpressionOrList(e){return isReadonlyArray(e)?function parseValueExpressionList(e){if(e.some(isExpressionOrFactory))return z.create(e.map((e=>parseValueExpression(e))));return I.create(e)}(e):parseValueExpression(e)}function parseValueExpression(e){return isExpressionOrFactory(e)?parseExpression(e):E.create(e)}function isSafeImmediateValue(e){return isNumber(e)||isBoolean(e)||isNull(e)}function parseSafeImmediateValue(e){if(!isSafeImmediateValue(e))throw new Error(`unsafe immediate value ${JSON.stringify(e)}`);return E.createImmediate(e)}const k=freeze({is:e=>"ParensNode"===e.kind,create:e=>freeze({kind:"ParensNode",node:e})});function parseValueBinaryOperationOrExpression(e){if(3===e.length)return parseValueBinaryOperation(e[0],e[1],e[2]);if(1===e.length)return parseValueExpression(e[0]);throw new Error(`invalid arguments: ${JSON.stringify(e)}`)}function parseValueBinaryOperation(e,r,t){return function isIsOperator(e){return"is"===e||"is not"===e}(r)&&needsIsOperator(t)?u.create(parseReferenceExpression(e),parseOperator(r),E.createImmediate(t)):u.create(parseReferenceExpression(e),parseOperator(r),parseValueExpressionOrList(t))}function parseReferentialBinaryOperation(e,r,t){return u.create(parseReferenceExpression(e),parseOperator(r),parseReferenceExpression(t))}function parseFilterObject(e,r){return parseFilterList(Object.entries(e).filter((([,e])=>!isUndefined(e))).map((([e,r])=>parseValueBinaryOperation(e,needsIsOperator(r)?"is":"=",r))),r)}function parseFilterList(e,r,t=!0){const n="and"===r?o.create:s.create;if(0===e.length)return u.create(E.createImmediate(1),y.create("="),E.createImmediate("and"===r?1:0));let i=toOperationNode(e[0]);for(let r=1;r<e.length;++r)i=n(i,toOperationNode(e[r]));return e.length>1&&t?k.create(i):i}function needsIsOperator(e){return isNull(e)||isBoolean(e)}function parseOperator(e){if(isString(e)&&N.includes(e))return y.create(e);if(isOperationNodeSource(e))return e.toOperationNode();throw new Error(`invalid operator ${JSON.stringify(e)}`)}function toOperationNode(e){return isOperationNodeSource(e)?e.toOperationNode():e}const q=freeze({is:e=>"OrderByNode"===e.kind,create:e=>freeze({kind:"OrderByNode",items:freeze([...e])}),cloneWithItems:(e,r)=>freeze({...e,items:freeze([...e.items,...r])})}),C=freeze({is:e=>"PartitionByNode"===e.kind,create:e=>freeze({kind:"PartitionByNode",items:freeze(e)}),cloneWithItems:(e,r)=>freeze({...e,items:freeze([...e.items,...r])})}),Q=freeze({is:e=>"OverNode"===e.kind,create:()=>freeze({kind:"OverNode"}),cloneWithOrderByItems:(e,r)=>freeze({...e,orderBy:e.orderBy?q.cloneWithItems(e.orderBy,r):q.create(r)}),cloneWithPartitionByItems:(e,r)=>freeze({...e,partitionBy:e.partitionBy?C.cloneWithItems(e.partitionBy,r):C.create(r)})}),T=freeze({is:e=>"FromNode"===e.kind,create:e=>freeze({kind:"FromNode",froms:freeze(e)}),cloneWithFroms:(e,r)=>freeze({...e,froms:freeze([...e.froms,...r])})}),A=freeze({is:e=>"GroupByNode"===e.kind,create:e=>freeze({kind:"GroupByNode",items:freeze(e)}),cloneWithItems:(e,r)=>freeze({...e,items:freeze([...e.items,...r])})}),R=freeze({is:e=>"HavingNode"===e.kind,create:e=>freeze({kind:"HavingNode",having:e}),cloneWithOperation:(e,r,t)=>freeze({...e,having:"And"===r?o.create(e.having,t):s.create(e.having,t)})}),v=freeze({is:e=>"SelectQueryNode"===e.kind,create:e=>freeze({kind:"SelectQueryNode",...e&&{with:e}}),createFrom:(e,r)=>freeze({kind:"SelectQueryNode",from:T.create(e),...r&&{with:r}}),cloneWithSelections:(e,r)=>freeze({...e,selections:e.selections?freeze([...e.selections,...r]):freeze(r)}),cloneWithDistinctOn:(e,r)=>freeze({...e,distinctOn:e.distinctOn?freeze([...e.distinctOn,...r]):freeze(r)}),cloneWithFrontModifier:(e,r)=>freeze({...e,frontModifiers:e.frontModifiers?freeze([...e.frontModifiers,r]):freeze([r])}),cloneWithEndModifier:(e,r)=>freeze({...e,endModifiers:e.endModifiers?freeze([...e.endModifiers,r]):freeze([r])}),cloneWithOrderByItems:(e,r)=>freeze({...e,orderBy:e.orderBy?q.cloneWithItems(e.orderBy,r):q.create(r)}),cloneWithGroupByItems:(e,r)=>freeze({...e,groupBy:e.groupBy?A.cloneWithItems(e.groupBy,r):A.create(r)}),cloneWithLimit:(e,r)=>freeze({...e,limit:r}),cloneWithOffset:(e,r)=>freeze({...e,offset:r}),cloneWithHaving:(e,r)=>freeze({...e,having:e.having?R.cloneWithOperation(e.having,"And",r):R.create(r)}),cloneWithSetOperations:(e,r)=>freeze({...e,setOperations:e.setOperations?freeze([...e.setOperations,...r]):freeze([...r])}),cloneWithoutSelections:e=>freeze({...e,selections:[]}),cloneWithoutLimit:e=>freeze({...e,limit:void 0}),cloneWithoutOffset:e=>freeze({...e,offset:void 0}),cloneWithoutOrderBy:e=>freeze({...e,orderBy:void 0})});function preventAwait(e,r){Object.defineProperties(e.prototype,{then:{enumerable:!1,value:()=>{throw new Error(r)}}})}class JoinBuilder{#r;constructor(e){this.#r=freeze(e)}on(...e){return new JoinBuilder({...this.#r,joinNode:d.cloneWithOn(this.#r.joinNode,parseValueBinaryOperationOrExpression(e))})}onRef(e,r,t){return new JoinBuilder({...this.#r,joinNode:d.cloneWithOn(this.#r.joinNode,parseReferentialBinaryOperation(e,r,t))})}onTrue(){return new JoinBuilder({...this.#r,joinNode:d.cloneWithOn(this.#r.joinNode,x.createWithSql("true"))})}$call(e){return e(this)}toOperationNode(){return this.#r.joinNode}}preventAwait(JoinBuilder,"don't await JoinBuilder instances. They are never executed directly and are always just a part of a query.");const D=freeze({is:e=>"PartitionByItemNode"===e.kind,create:e=>freeze({kind:"PartitionByItemNode",partitionBy:e})});function parsePartitionBy(e){return parseReferenceExpressionOrList(e).map(D.create)}class OverBuilder{#r;constructor(e){this.#r=freeze(e)}orderBy(e,r){return new OverBuilder({overNode:Q.cloneWithOrderByItems(this.#r.overNode,parseOrderBy([e,r]))})}partitionBy(e){return new OverBuilder({overNode:Q.cloneWithPartitionByItems(this.#r.overNode,parsePartitionBy(e))})}$call(e){return e(this)}toOperationNode(){return this.#r.overNode}}preventAwait(OverBuilder,"don't await OverBuilder instances. They are never executed directly and are always just a part of a query.");const F=freeze({is:e=>"SelectionNode"===e.kind,create:e=>freeze({kind:"SelectionNode",selection:e}),createSelectAll:()=>freeze({kind:"SelectionNode",selection:g.create()}),createSelectAllFromTable:e=>freeze({kind:"SelectionNode",selection:O.createSelectAll(e)})});function parseSelectArg(e){return isFunction(e)?parseSelectArg(e(expressionBuilder())):isReadonlyArray(e)?e.map((e=>parseSelectExpression(e))):[parseSelectExpression(e)]}function parseSelectExpression(r){return isString(r)?F.create(function parseAliasedStringReference(r){const n=" as ";if(r.includes(n)){const[i,o]=r.split(n).map(trim$1);return t.create(parseStringReference(i),e.create(o))}return parseStringReference(r)}(r)):isDynamicReferenceBuilder(r)?F.create(r.toOperationNode()):F.create(parseAliasedExpression(r))}function parseSelectAll(e){return e?Array.isArray(e)?e.map(parseSelectAllArg):[parseSelectAllArg(e)]:[F.createSelectAll()]}function parseSelectAllArg(e){if(isString(e))return F.createSelectAllFromTable(parseTable(e));throw new Error(`invalid value selectAll expression: ${JSON.stringify(e)}`)}const M=freeze({is:e=>"ValuesNode"===e.kind,create:e=>freeze({kind:"ValuesNode",values:freeze(e)})}),L=freeze({is:e=>"DefaultInsertValueNode"===e.kind,create:()=>freeze({kind:"DefaultInsertValueNode"})});function parseInsertExpression(e){const r=isFunction(e)?e(expressionBuilder()):e;return function parseInsertColumnsAndValues(e){const r=function parseColumnNamesAndIndexes(e){const r=new Map;for(const t of e){const e=Object.keys(t);for(const n of e)r.has(n)||void 0===t[n]||r.set(n,r.size)}return r}(e);return[freeze([...r.keys()].map(w.create)),M.create(e.map((e=>function parseRowValues(e,r){const t=Object.keys(e),n=Array.from({length:r.size});let i=!1;for(const o of t){const t=r.get(o);if(isUndefined(t))continue;const s=e[o];(isUndefined(s)||isExpressionOrFactory(s))&&(i=!0),n[t]=s}const o=t.length<r.size;if(o||i){const e=L.create();return z.create(n.map((r=>isUndefined(r)?e:parseValueExpression(r))))}return I.create(n)}(e,r))))]}(isReadonlyArray(r)?r:freeze([r]))}const J=freeze({is:e=>"InsertQueryNode"===e.kind,create:(e,r,t)=>freeze({kind:"InsertQueryNode",into:e,...r&&{with:r},replace:t}),createWithoutInto:()=>freeze({kind:"InsertQueryNode"}),cloneWith:(e,r)=>freeze({...e,...r})}),U=freeze({is:e=>"UpdateQueryNode"===e.kind,create:(e,r)=>freeze({kind:"UpdateQueryNode",table:e,...r&&{with:r}}),createWithoutTable:()=>freeze({kind:"UpdateQueryNode"}),cloneWithFromItems:(e,r)=>freeze({...e,from:e.from?T.cloneWithFroms(e.from,r):T.create(r)}),cloneWithUpdates:(e,r)=>freeze({...e,updates:e.updates?freeze([...e.updates,...r]):r})}),V=freeze({is:e=>"UsingNode"===e.kind,create:e=>freeze({kind:"UsingNode",tables:freeze(e)}),cloneWithTables:(e,r)=>freeze({...e,tables:freeze([...e.tables,...r])})}),P=freeze({is:e=>"DeleteQueryNode"===e.kind,create:(e,r)=>freeze({kind:"DeleteQueryNode",from:T.create(e),...r&&{with:r}}),cloneWithOrderByItems:(e,r)=>freeze({...e,orderBy:e.orderBy?q.cloneWithItems(e.orderBy,r):q.create(r)}),cloneWithLimit:(e,r)=>freeze({...e,limit:r}),cloneWithUsing:(e,r)=>freeze({...e,using:void 0!==e.using?V.cloneWithTables(e.using,r):V.create(r)})}),j=freeze({is:e=>"WhereNode"===e.kind,create:e=>freeze({kind:"WhereNode",where:e}),cloneWithOperation:(e,r,t)=>freeze({...e,where:"And"===r?o.create(e.where,t):s.create(e.where,t)})}),$=freeze({is:e=>"ReturningNode"===e.kind,create:e=>freeze({kind:"ReturningNode",selections:freeze(e)}),cloneWithSelections:(e,r)=>freeze({...e,selections:e.selections?freeze([...e.selections,...r]):freeze(r)})}),K=freeze({is:e=>"ExplainNode"===e.kind,create:(e,r)=>freeze({kind:"ExplainNode",format:e,options:r})}),G=freeze({is:e=>"WhenNode"===e.kind,create:e=>freeze({kind:"WhenNode",condition:e}),cloneWithResult:(e,r)=>freeze({...e,result:r})}),H=freeze({is:e=>"MergeQueryNode"===e.kind,create:(e,r)=>freeze({kind:"MergeQueryNode",into:e,...r&&{with:r}}),cloneWithUsing:(e,r)=>freeze({...e,using:r}),cloneWithWhen:(e,r)=>freeze({...e,whens:e.whens?freeze([...e.whens,r]):freeze([r])}),cloneWithThen:(e,r)=>freeze({...e,whens:e.whens?freeze([...e.whens.slice(0,-1),G.cloneWithResult(e.whens[e.whens.length-1],r)]):void 0})}),_=freeze({is:e=>v.is(e)||J.is(e)||U.is(e)||P.is(e)||H.is(e),cloneWithWhere:(e,r)=>freeze({...e,where:e.where?j.cloneWithOperation(e.where,"And",r):j.create(r)}),cloneWithJoin:(e,r)=>freeze({...e,joins:e.joins?freeze([...e.joins,r]):freeze([r])}),cloneWithReturning:(e,r)=>freeze({...e,returning:e.returning?$.cloneWithSelections(e.returning,r):$.create(r)}),cloneWithoutWhere:e=>freeze({...e,where:void 0}),cloneWithExplain:(e,r,t)=>freeze({...e,explain:K.create(r,t?.toOperationNode())})}),X=freeze({is:e=>"ColumnUpdateNode"===e.kind,create:(e,r)=>freeze({kind:"ColumnUpdateNode",column:e,value:r})});function parseUpdate(...e){return 2===e.length?[X.create(parseReferenceExpression(e[0]),parseValueExpression(e[1]))]:parseUpdateObjectExpression(e[0])}function parseUpdateObjectExpression(e){const r=isFunction(e)?e(expressionBuilder()):e;return Object.entries(r).filter((([e,r])=>void 0!==r)).map((([e,r])=>X.create(w.create(e),parseValueExpression(r))))}const Y=freeze({is:e=>"OnDuplicateKeyNode"===e.kind,create:e=>freeze({kind:"OnDuplicateKeyNode",updates:e})});class InsertResult{insertId;numInsertedOrUpdatedRows;constructor(e,r){this.insertId=e,this.numInsertedOrUpdatedRows=r}}class NoResultError extends Error{node;constructor(e){super("no result"),this.node=e}}function isNoResultErrorConstructor(e){return Object.prototype.hasOwnProperty.call(e,"prototype")}const Z=freeze({is:e=>"OnConflictNode"===e.kind,create:()=>freeze({kind:"OnConflictNode"}),cloneWith:(e,r)=>freeze({...e,...r}),cloneWithIndexWhere:(e,r)=>freeze({...e,indexWhere:e.indexWhere?j.cloneWithOperation(e.indexWhere,"And",r):j.create(r)}),cloneWithIndexOrWhere:(e,r)=>freeze({...e,indexWhere:e.indexWhere?j.cloneWithOperation(e.indexWhere,"Or",r):j.create(r)}),cloneWithUpdateWhere:(e,r)=>freeze({...e,updateWhere:e.updateWhere?j.cloneWithOperation(e.updateWhere,"And",r):j.create(r)}),cloneWithUpdateOrWhere:(e,r)=>freeze({...e,updateWhere:e.updateWhere?j.cloneWithOperation(e.updateWhere,"Or",r):j.create(r)}),cloneWithoutIndexWhere:e=>freeze({...e,indexWhere:void 0}),cloneWithoutUpdateWhere:e=>freeze({...e,updateWhere:void 0})});class OnConflictBuilder{#r;constructor(e){this.#r=freeze(e)}column(e){const r=w.create(e);return new OnConflictBuilder({...this.#r,onConflictNode:Z.cloneWith(this.#r.onConflictNode,{columns:this.#r.onConflictNode.columns?freeze([...this.#r.onConflictNode.columns,r]):freeze([r])})})}columns(e){const r=e.map(w.create);return new OnConflictBuilder({...this.#r,onConflictNode:Z.cloneWith(this.#r.onConflictNode,{columns:this.#r.onConflictNode.columns?freeze([...this.#r.onConflictNode.columns,...r]):freeze(r)})})}constraint(r){return new OnConflictBuilder({...this.#r,onConflictNode:Z.cloneWith(this.#r.onConflictNode,{constraint:e.create(r)})})}expression(e){return new OnConflictBuilder({...this.#r,onConflictNode:Z.cloneWith(this.#r.onConflictNode,{indexExpression:e.toOperationNode()})})}where(...e){return new OnConflictBuilder({...this.#r,onConflictNode:Z.cloneWithIndexWhere(this.#r.onConflictNode,parseValueBinaryOperationOrExpression(e))})}whereRef(e,r,t){return new OnConflictBuilder({...this.#r,onConflictNode:Z.cloneWithIndexWhere(this.#r.onConflictNode,parseReferentialBinaryOperation(e,r,t))})}clearWhere(){return new OnConflictBuilder({...this.#r,onConflictNode:Z.cloneWithoutIndexWhere(this.#r.onConflictNode)})}doNothing(){return new OnConflictDoNothingBuilder({...this.#r,onConflictNode:Z.cloneWith(this.#r.onConflictNode,{doNothing:!0})})}doUpdateSet(e){return new OnConflictUpdateBuilder({...this.#r,onConflictNode:Z.cloneWith(this.#r.onConflictNode,{updates:parseUpdateObjectExpression(e)})})}$call(e){return e(this)}}preventAwait(OnConflictBuilder,"don't await OnConflictBuilder instances.");class OnConflictDoNothingBuilder{#r;constructor(e){this.#r=freeze(e)}toOperationNode(){return this.#r.onConflictNode}}preventAwait(OnConflictDoNothingBuilder,"don't await OnConflictDoNothingBuilder instances.");class OnConflictUpdateBuilder{#r;constructor(e){this.#r=freeze(e)}where(...e){return new OnConflictUpdateBuilder({...this.#r,onConflictNode:Z.cloneWithUpdateWhere(this.#r.onConflictNode,parseValueBinaryOperationOrExpression(e))})}whereRef(e,r,t){return new OnConflictUpdateBuilder({...this.#r,onConflictNode:Z.cloneWithUpdateWhere(this.#r.onConflictNode,parseReferentialBinaryOperation(e,r,t))})}clearWhere(){return new OnConflictUpdateBuilder({...this.#r,onConflictNode:Z.cloneWithoutUpdateWhere(this.#r.onConflictNode)})}$call(e){return e(this)}toOperationNode(){return this.#r.onConflictNode}}preventAwait(OnConflictUpdateBuilder,"don't await OnConflictUpdateBuilder instances.");class InsertQueryBuilder{#r;constructor(e){this.#r=freeze(e)}values(e){const[r,t]=parseInsertExpression(e);return new InsertQueryBuilder({...this.#r,queryNode:J.cloneWith(this.#r.queryNode,{columns:r,values:t})})}columns(e){return new InsertQueryBuilder({...this.#r,queryNode:J.cloneWith(this.#r.queryNode,{columns:freeze(e.map(w.create))})})}expression(e){return new InsertQueryBuilder({...this.#r,queryNode:J.cloneWith(this.#r.queryNode,{values:parseExpression(e)})})}defaultValues(){return new InsertQueryBuilder({...this.#r,queryNode:J.cloneWith(this.#r.queryNode,{defaultValues:!0})})}ignore(){return new InsertQueryBuilder({...this.#r,queryNode:J.cloneWith(this.#r.queryNode,{ignore:!0})})}onConflict(e){return new InsertQueryBuilder({...this.#r,queryNode:J.cloneWith(this.#r.queryNode,{onConflict:e(new OnConflictBuilder({onConflictNode:Z.create()})).toOperationNode()})})}onDuplicateKeyUpdate(e){return new InsertQueryBuilder({...this.#r,queryNode:J.cloneWith(this.#r.queryNode,{onDuplicateKey:Y.create(parseUpdateObjectExpression(e))})})}returning(e){return new InsertQueryBuilder({...this.#r,queryNode:_.cloneWithReturning(this.#r.queryNode,parseSelectArg(e))})}returningAll(){return new InsertQueryBuilder({...this.#r,queryNode:_.cloneWithReturning(this.#r.queryNode,parseSelectAll())})}$call(e){return e(this)}$if(e,r){return e?r(this):new InsertQueryBuilder({...this.#r})}$castTo(){return new InsertQueryBuilder(this.#r)}$narrowType(){return new InsertQueryBuilder(this.#r)}$assertType(){return new InsertQueryBuilder(this.#r)}withPlugin(e){return new InsertQueryBuilder({...this.#r,executor:this.#r.executor.withPlugin(e)})}toOperationNode(){return this.#r.executor.transformQuery(this.#r.queryNode,this.#r.queryId)}compile(){return this.#r.executor.compileQuery(this.toOperationNode(),this.#r.queryId)}async execute(){const e=this.compile(),r=e.query,t=await this.#r.executor.executeQuery(e,this.#r.queryId);return this.#r.executor.adapter.supportsReturning&&r.returning?t.rows:[new InsertResult(t.insertId,t.numAffectedRows??t.numUpdatedOrDeletedRows)]}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#r.executor.stream(r,e,this.#r.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new InsertQueryBuilder({...this.#r,queryNode:_.cloneWithExplain(this.#r.queryNode,e,r)});return await t.execute()}}preventAwait(InsertQueryBuilder,"don't await InsertQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");class DeleteResult{numDeletedRows;constructor(e){this.numDeletedRows=e}}const ee=freeze({is:e=>"LimitNode"===e.kind,create:e=>freeze({kind:"LimitNode",limit:e})});class DeleteQueryBuilder{#r;constructor(e){this.#r=freeze(e)}where(...e){return new DeleteQueryBuilder({...this.#r,queryNode:_.cloneWithWhere(this.#r.queryNode,parseValueBinaryOperationOrExpression(e))})}whereRef(e,r,t){return new DeleteQueryBuilder({...this.#r,queryNode:_.cloneWithWhere(this.#r.queryNode,parseReferentialBinaryOperation(e,r,t))})}clearWhere(){return new DeleteQueryBuilder({...this.#r,queryNode:_.cloneWithoutWhere(this.#r.queryNode)})}using(e){return new DeleteQueryBuilder({...this.#r,queryNode:P.cloneWithUsing(this.#r.queryNode,parseTableExpressionOrList(e))})}innerJoin(...e){return new DeleteQueryBuilder({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("InnerJoin",e))})}leftJoin(...e){return new DeleteQueryBuilder({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("LeftJoin",e))})}rightJoin(...e){return new DeleteQueryBuilder({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("RightJoin",e))})}fullJoin(...e){return new DeleteQueryBuilder({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("FullJoin",e))})}returning(e){return new DeleteQueryBuilder({...this.#r,queryNode:_.cloneWithReturning(this.#r.queryNode,parseSelectArg(e))})}returningAll(e){return new DeleteQueryBuilder({...this.#r,queryNode:_.cloneWithReturning(this.#r.queryNode,parseSelectAll(e))})}orderBy(e,r){return new DeleteQueryBuilder({...this.#r,queryNode:P.cloneWithOrderByItems(this.#r.queryNode,parseOrderBy([e,r]))})}limit(e){return new DeleteQueryBuilder({...this.#r,queryNode:P.cloneWithLimit(this.#r.queryNode,ee.create(parseValueExpression(e)))})}$call(e){return e(this)}$if(e,r){return e?r(this):new DeleteQueryBuilder({...this.#r})}$castTo(){return new DeleteQueryBuilder(this.#r)}$narrowType(){return new DeleteQueryBuilder(this.#r)}$assertType(){return new DeleteQueryBuilder(this.#r)}withPlugin(e){return new DeleteQueryBuilder({...this.#r,executor:this.#r.executor.withPlugin(e)})}toOperationNode(){return this.#r.executor.transformQuery(this.#r.queryNode,this.#r.queryId)}compile(){return this.#r.executor.compileQuery(this.toOperationNode(),this.#r.queryId)}async execute(){const e=this.compile(),r=e.query,t=await this.#r.executor.executeQuery(e,this.#r.queryId);return this.#r.executor.adapter.supportsReturning&&r.returning?t.rows:[new DeleteResult(t.numAffectedRows??t.numUpdatedOrDeletedRows??BigInt(0))]}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#r.executor.stream(r,e,this.#r.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new DeleteQueryBuilder({...this.#r,queryNode:_.cloneWithExplain(this.#r.queryNode,e,r)});return await t.execute()}}preventAwait(DeleteQueryBuilder,"don't await DeleteQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");class UpdateResult{numUpdatedRows;numChangedRows;constructor(e,r){this.numUpdatedRows=e,this.numChangedRows=r}}class UpdateQueryBuilder{#r;constructor(e){this.#r=freeze(e)}where(...e){return new UpdateQueryBuilder({...this.#r,queryNode:_.cloneWithWhere(this.#r.queryNode,parseValueBinaryOperationOrExpression(e))})}whereRef(e,r,t){return new UpdateQueryBuilder({...this.#r,queryNode:_.cloneWithWhere(this.#r.queryNode,parseReferentialBinaryOperation(e,r,t))})}clearWhere(){return new UpdateQueryBuilder({...this.#r,queryNode:_.cloneWithoutWhere(this.#r.queryNode)})}from(e){return new UpdateQueryBuilder({...this.#r,queryNode:U.cloneWithFromItems(this.#r.queryNode,parseTableExpressionOrList(e))})}innerJoin(...e){return new UpdateQueryBuilder({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("InnerJoin",e))})}leftJoin(...e){return new UpdateQueryBuilder({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("LeftJoin",e))})}rightJoin(...e){return new UpdateQueryBuilder({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("RightJoin",e))})}fullJoin(...e){return new UpdateQueryBuilder({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("FullJoin",e))})}set(...e){return new UpdateQueryBuilder({...this.#r,queryNode:U.cloneWithUpdates(this.#r.queryNode,parseUpdate(...e))})}returning(e){return new UpdateQueryBuilder({...this.#r,queryNode:_.cloneWithReturning(this.#r.queryNode,parseSelectArg(e))})}returningAll(){return new UpdateQueryBuilder({...this.#r,queryNode:_.cloneWithReturning(this.#r.queryNode,parseSelectAll())})}$call(e){return e(this)}$if(e,r){return e?r(this):new UpdateQueryBuilder({...this.#r})}$castTo(){return new UpdateQueryBuilder(this.#r)}$narrowType(){return new UpdateQueryBuilder(this.#r)}$assertType(){return new UpdateQueryBuilder(this.#r)}withPlugin(e){return new UpdateQueryBuilder({...this.#r,executor:this.#r.executor.withPlugin(e)})}toOperationNode(){return this.#r.executor.transformQuery(this.#r.queryNode,this.#r.queryId)}compile(){return this.#r.executor.compileQuery(this.toOperationNode(),this.#r.queryId)}async execute(){const e=this.compile(),r=e.query,t=await this.#r.executor.executeQuery(e,this.#r.queryId);return this.#r.executor.adapter.supportsReturning&&r.returning?t.rows:[new UpdateResult(t.numAffectedRows??t.numUpdatedOrDeletedRows??BigInt(0),t.numChangedRows)]}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#r.executor.stream(r,e,this.#r.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new UpdateQueryBuilder({...this.#r,queryNode:_.cloneWithExplain(this.#r.queryNode,e,r)});return await t.execute()}}preventAwait(UpdateQueryBuilder,"don't await UpdateQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");const re=freeze({is:e=>"CommonTableExpressionNameNode"===e.kind,create:(e,r)=>freeze({kind:"CommonTableExpressionNameNode",table:n.create(e),columns:r?freeze(r.map(w.create)):void 0})}),te=freeze({is:e=>"CommonTableExpressionNode"===e.kind,create:(e,r)=>freeze({kind:"CommonTableExpressionNode",name:e,expression:r}),cloneWith:(e,r)=>freeze({...e,...r})});class CTEBuilder{#r;constructor(e){this.#r=freeze(e)}materialized(){return new CTEBuilder({...this.#r,node:te.cloneWith(this.#r.node,{materialized:!0})})}notMaterialized(){return new CTEBuilder({...this.#r,node:te.cloneWith(this.#r.node,{materialized:!1})})}toOperationNode(){return this.#r.node}}function parseCommonTableExpression(e,r){const t=r(function createQueryCreator(){return new QueryCreator({executor:ue})}()).toOperationNode();return isFunction(e)?e(function cteBuilderFactory(e){return r=>new CTEBuilder({node:te.create(parseCommonTableExpressionName(r),e)})}(t)).toOperationNode():te.create(parseCommonTableExpressionName(e),t)}function parseCommonTableExpressionName(e){if(e.includes("(")){const r=e.split(/[\(\)]/),t=r[0],n=r[1].split(",").map((e=>e.trim()));return re.create(t,n)}return re.create(e)}preventAwait(CTEBuilder,"don't await CTEBuilder instances. They are never executed directly and are always just a part of a query.");const ne=freeze({is:e=>"WithNode"===e.kind,create:(e,r)=>freeze({kind:"WithNode",expressions:freeze([e]),...r}),cloneWithExpression:(e,r)=>freeze({...e,expressions:freeze([...e.expressions,r])})}),ie=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9"];function randomString(e){let r="";for(let t=0;t<e;++t)r+=ie[~~(Math.random()*ie.length)];return r}function createQueryId(){return new LazyQueryId}class LazyQueryId{#t;get queryId(){return void 0===this.#t&&(this.#t=randomString(8)),this.#t}}class OperationNodeTransformer{nodeStack=[];#n=freeze({AliasNode:this.transformAlias.bind(this),ColumnNode:this.transformColumn.bind(this),IdentifierNode:this.transformIdentifier.bind(this),SchemableIdentifierNode:this.transformSchemableIdentifier.bind(this),RawNode:this.transformRaw.bind(this),ReferenceNode:this.transformReference.bind(this),SelectQueryNode:this.transformSelectQuery.bind(this),SelectionNode:this.transformSelection.bind(this),TableNode:this.transformTable.bind(this),FromNode:this.transformFrom.bind(this),SelectAllNode:this.transformSelectAll.bind(this),AndNode:this.transformAnd.bind(this),OrNode:this.transformOr.bind(this),ValueNode:this.transformValue.bind(this),ValueListNode:this.transformValueList.bind(this),PrimitiveValueListNode:this.transformPrimitiveValueList.bind(this),ParensNode:this.transformParens.bind(this),JoinNode:this.transformJoin.bind(this),OperatorNode:this.transformOperator.bind(this),WhereNode:this.transformWhere.bind(this),InsertQueryNode:this.transformInsertQuery.bind(this),DeleteQueryNode:this.transformDeleteQuery.bind(this),ReturningNode:this.transformReturning.bind(this),CreateTableNode:this.transformCreateTable.bind(this),AddColumnNode:this.transformAddColumn.bind(this),ColumnDefinitionNode:this.transformColumnDefinition.bind(this),DropTableNode:this.transformDropTable.bind(this),DataTypeNode:this.transformDataType.bind(this),OrderByNode:this.transformOrderBy.bind(this),OrderByItemNode:this.transformOrderByItem.bind(this),GroupByNode:this.transformGroupBy.bind(this),GroupByItemNode:this.transformGroupByItem.bind(this),UpdateQueryNode:this.transformUpdateQuery.bind(this),ColumnUpdateNode:this.transformColumnUpdate.bind(this),LimitNode:this.transformLimit.bind(this),OffsetNode:this.transformOffset.bind(this),OnConflictNode:this.transformOnConflict.bind(this),OnDuplicateKeyNode:this.transformOnDuplicateKey.bind(this),CreateIndexNode:this.transformCreateIndex.bind(this),DropIndexNode:this.transformDropIndex.bind(this),ListNode:this.transformList.bind(this),PrimaryKeyConstraintNode:this.transformPrimaryKeyConstraint.bind(this),UniqueConstraintNode:this.transformUniqueConstraint.bind(this),ReferencesNode:this.transformReferences.bind(this),CheckConstraintNode:this.transformCheckConstraint.bind(this),WithNode:this.transformWith.bind(this),CommonTableExpressionNode:this.transformCommonTableExpression.bind(this),CommonTableExpressionNameNode:this.transformCommonTableExpressionName.bind(this),HavingNode:this.transformHaving.bind(this),CreateSchemaNode:this.transformCreateSchema.bind(this),DropSchemaNode:this.transformDropSchema.bind(this),AlterTableNode:this.transformAlterTable.bind(this),DropColumnNode:this.transformDropColumn.bind(this),RenameColumnNode:this.transformRenameColumn.bind(this),AlterColumnNode:this.transformAlterColumn.bind(this),ModifyColumnNode:this.transformModifyColumn.bind(this),AddConstraintNode:this.transformAddConstraint.bind(this),DropConstraintNode:this.transformDropConstraint.bind(this),ForeignKeyConstraintNode:this.transformForeignKeyConstraint.bind(this),CreateViewNode:this.transformCreateView.bind(this),DropViewNode:this.transformDropView.bind(this),GeneratedNode:this.transformGenerated.bind(this),DefaultValueNode:this.transformDefaultValue.bind(this),OnNode:this.transformOn.bind(this),ValuesNode:this.transformValues.bind(this),SelectModifierNode:this.transformSelectModifier.bind(this),CreateTypeNode:this.transformCreateType.bind(this),DropTypeNode:this.transformDropType.bind(this),ExplainNode:this.transformExplain.bind(this),DefaultInsertValueNode:this.transformDefaultInsertValue.bind(this),AggregateFunctionNode:this.transformAggregateFunction.bind(this),OverNode:this.transformOver.bind(this),PartitionByNode:this.transformPartitionBy.bind(this),PartitionByItemNode:this.transformPartitionByItem.bind(this),SetOperationNode:this.transformSetOperation.bind(this),BinaryOperationNode:this.transformBinaryOperation.bind(this),UnaryOperationNode:this.transformUnaryOperation.bind(this),UsingNode:this.transformUsing.bind(this),FunctionNode:this.transformFunction.bind(this),CaseNode:this.transformCase.bind(this),WhenNode:this.transformWhen.bind(this),JSONReferenceNode:this.transformJSONReference.bind(this),JSONPathNode:this.transformJSONPath.bind(this),JSONPathLegNode:this.transformJSONPathLeg.bind(this),JSONOperatorChainNode:this.transformJSONOperatorChain.bind(this),TupleNode:this.transformTuple.bind(this),MergeQueryNode:this.transformMergeQuery.bind(this),MatchedNode:this.transformMatched.bind(this),AddIndexNode:this.transformAddIndex.bind(this),CastNode:this.transformCast.bind(this)});transformNode(e){if(!e)return e;this.nodeStack.push(e);const r=this.transformNodeImpl(e);return this.nodeStack.pop(),freeze(r)}transformNodeImpl(e){return this.#n[e.kind](e)}transformNodeList(e){return e?freeze(e.map((e=>this.transformNode(e)))):e}transformSelectQuery(e){return{kind:"SelectQueryNode",from:this.transformNode(e.from),selections:this.transformNodeList(e.selections),distinctOn:this.transformNodeList(e.distinctOn),joins:this.transformNodeList(e.joins),groupBy:this.transformNode(e.groupBy),orderBy:this.transformNode(e.orderBy),where:this.transformNode(e.where),frontModifiers:this.transformNodeList(e.frontModifiers),endModifiers:this.transformNodeList(e.endModifiers),limit:this.transformNode(e.limit),offset:this.transformNode(e.offset),with:this.transformNode(e.with),having:this.transformNode(e.having),explain:this.transformNode(e.explain),setOperations:this.transformNodeList(e.setOperations)}}transformSelection(e){return{kind:"SelectionNode",selection:this.transformNode(e.selection)}}transformColumn(e){return{kind:"ColumnNode",column:this.transformNode(e.column)}}transformAlias(e){return{kind:"AliasNode",node:this.transformNode(e.node),alias:this.transformNode(e.alias)}}transformTable(e){return{kind:"TableNode",table:this.transformNode(e.table)}}transformFrom(e){return{kind:"FromNode",froms:this.transformNodeList(e.froms)}}transformReference(e){return{kind:"ReferenceNode",column:this.transformNode(e.column),table:this.transformNode(e.table)}}transformAnd(e){return{kind:"AndNode",left:this.transformNode(e.left),right:this.transformNode(e.right)}}transformOr(e){return{kind:"OrNode",left:this.transformNode(e.left),right:this.transformNode(e.right)}}transformValueList(e){return{kind:"ValueListNode",values:this.transformNodeList(e.values)}}transformParens(e){return{kind:"ParensNode",node:this.transformNode(e.node)}}transformJoin(e){return{kind:"JoinNode",joinType:e.joinType,table:this.transformNode(e.table),on:this.transformNode(e.on)}}transformRaw(e){return{kind:"RawNode",sqlFragments:freeze([...e.sqlFragments]),parameters:this.transformNodeList(e.parameters)}}transformWhere(e){return{kind:"WhereNode",where:this.transformNode(e.where)}}transformInsertQuery(e){return{kind:"InsertQueryNode",into:this.transformNode(e.into),columns:this.transformNodeList(e.columns),values:this.transformNode(e.values),returning:this.transformNode(e.returning),onConflict:this.transformNode(e.onConflict),onDuplicateKey:this.transformNode(e.onDuplicateKey),with:this.transformNode(e.with),ignore:e.ignore,replace:e.replace,explain:this.transformNode(e.explain),defaultValues:e.defaultValues}}transformValues(e){return{kind:"ValuesNode",values:this.transformNodeList(e.values)}}transformDeleteQuery(e){return{kind:"DeleteQueryNode",from:this.transformNode(e.from),using:this.transformNode(e.using),joins:this.transformNodeList(e.joins),where:this.transformNode(e.where),returning:this.transformNode(e.returning),with:this.transformNode(e.with),orderBy:this.transformNode(e.orderBy),limit:this.transformNode(e.limit),explain:this.transformNode(e.explain)}}transformReturning(e){return{kind:"ReturningNode",selections:this.transformNodeList(e.selections)}}transformCreateTable(e){return{kind:"CreateTableNode",table:this.transformNode(e.table),columns:this.transformNodeList(e.columns),constraints:this.transformNodeList(e.constraints),temporary:e.temporary,ifNotExists:e.ifNotExists,onCommit:e.onCommit,frontModifiers:this.transformNodeList(e.frontModifiers),endModifiers:this.transformNodeList(e.endModifiers),selectQuery:this.transformNode(e.selectQuery)}}transformColumnDefinition(e){return{kind:"ColumnDefinitionNode",column:this.transformNode(e.column),dataType:this.transformNode(e.dataType),references:this.transformNode(e.references),primaryKey:e.primaryKey,autoIncrement:e.autoIncrement,unique:e.unique,notNull:e.notNull,unsigned:e.unsigned,defaultTo:this.transformNode(e.defaultTo),check:this.transformNode(e.check),generated:this.transformNode(e.generated),frontModifiers:this.transformNodeList(e.frontModifiers),endModifiers:this.transformNodeList(e.endModifiers),nullsNotDistinct:e.nullsNotDistinct}}transformAddColumn(e){return{kind:"AddColumnNode",column:this.transformNode(e.column)}}transformDropTable(e){return{kind:"DropTableNode",table:this.transformNode(e.table),ifExists:e.ifExists,cascade:e.cascade}}transformOrderBy(e){return{kind:"OrderByNode",items:this.transformNodeList(e.items)}}transformOrderByItem(e){return{kind:"OrderByItemNode",orderBy:this.transformNode(e.orderBy),direction:this.transformNode(e.direction)}}transformGroupBy(e){return{kind:"GroupByNode",items:this.transformNodeList(e.items)}}transformGroupByItem(e){return{kind:"GroupByItemNode",groupBy:this.transformNode(e.groupBy)}}transformUpdateQuery(e){return{kind:"UpdateQueryNode",table:this.transformNode(e.table),from:this.transformNode(e.from),joins:this.transformNodeList(e.joins),where:this.transformNode(e.where),updates:this.transformNodeList(e.updates),returning:this.transformNode(e.returning),with:this.transformNode(e.with),explain:this.transformNode(e.explain)}}transformColumnUpdate(e){return{kind:"ColumnUpdateNode",column:this.transformNode(e.column),value:this.transformNode(e.value)}}transformLimit(e){return{kind:"LimitNode",limit:this.transformNode(e.limit)}}transformOffset(e){return{kind:"OffsetNode",offset:this.transformNode(e.offset)}}transformOnConflict(e){return{kind:"OnConflictNode",columns:this.transformNodeList(e.columns),constraint:this.transformNode(e.constraint),indexExpression:this.transformNode(e.indexExpression),indexWhere:this.transformNode(e.indexWhere),updates:this.transformNodeList(e.updates),updateWhere:this.transformNode(e.updateWhere),doNothing:e.doNothing}}transformOnDuplicateKey(e){return{kind:"OnDuplicateKeyNode",updates:this.transformNodeList(e.updates)}}transformCreateIndex(e){return{kind:"CreateIndexNode",name:this.transformNode(e.name),table:this.transformNode(e.table),columns:this.transformNodeList(e.columns),unique:e.unique,using:this.transformNode(e.using),ifNotExists:e.ifNotExists,where:this.transformNode(e.where),nullsNotDistinct:e.nullsNotDistinct}}transformList(e){return{kind:"ListNode",items:this.transformNodeList(e.items)}}transformDropIndex(e){return{kind:"DropIndexNode",name:this.transformNode(e.name),table:this.transformNode(e.table),ifExists:e.ifExists,cascade:e.cascade}}transformPrimaryKeyConstraint(e){return{kind:"PrimaryKeyConstraintNode",columns:this.transformNodeList(e.columns),name:this.transformNode(e.name)}}transformUniqueConstraint(e){return{kind:"UniqueConstraintNode",columns:this.transformNodeList(e.columns),name:this.transformNode(e.name),nullsNotDistinct:e.nullsNotDistinct}}transformForeignKeyConstraint(e){return{kind:"ForeignKeyConstraintNode",columns:this.transformNodeList(e.columns),references:this.transformNode(e.references),name:this.transformNode(e.name),onDelete:e.onDelete,onUpdate:e.onUpdate}}transformSetOperation(e){return{kind:"SetOperationNode",operator:e.operator,expression:this.transformNode(e.expression),all:e.all}}transformReferences(e){return{kind:"ReferencesNode",table:this.transformNode(e.table),columns:this.transformNodeList(e.columns),onDelete:e.onDelete,onUpdate:e.onUpdate}}transformCheckConstraint(e){return{kind:"CheckConstraintNode",expression:this.transformNode(e.expression),name:this.transformNode(e.name)}}transformWith(e){return{kind:"WithNode",expressions:this.transformNodeList(e.expressions),recursive:e.recursive}}transformCommonTableExpression(e){return{kind:"CommonTableExpressionNode",name:this.transformNode(e.name),materialized:e.materialized,expression:this.transformNode(e.expression)}}transformCommonTableExpressionName(e){return{kind:"CommonTableExpressionNameNode",table:this.transformNode(e.table),columns:this.transformNodeList(e.columns)}}transformHaving(e){return{kind:"HavingNode",having:this.transformNode(e.having)}}transformCreateSchema(e){return{kind:"CreateSchemaNode",schema:this.transformNode(e.schema),ifNotExists:e.ifNotExists}}transformDropSchema(e){return{kind:"DropSchemaNode",schema:this.transformNode(e.schema),ifExists:e.ifExists,cascade:e.cascade}}transformAlterTable(e){return{kind:"AlterTableNode",table:this.transformNode(e.table),renameTo:this.transformNode(e.renameTo),setSchema:this.transformNode(e.setSchema),columnAlterations:this.transformNodeList(e.columnAlterations),addConstraint:this.transformNode(e.addConstraint),dropConstraint:this.transformNode(e.dropConstraint),addIndex:this.transformNode(e.addIndex),dropIndex:this.transformNode(e.dropIndex)}}transformDropColumn(e){return{kind:"DropColumnNode",column:this.transformNode(e.column)}}transformRenameColumn(e){return{kind:"RenameColumnNode",column:this.transformNode(e.column),renameTo:this.transformNode(e.renameTo)}}transformAlterColumn(e){return{kind:"AlterColumnNode",column:this.transformNode(e.column),dataType:this.transformNode(e.dataType),dataTypeExpression:this.transformNode(e.dataTypeExpression),setDefault:this.transformNode(e.setDefault),dropDefault:e.dropDefault,setNotNull:e.setNotNull,dropNotNull:e.dropNotNull}}transformModifyColumn(e){return{kind:"ModifyColumnNode",column:this.transformNode(e.column)}}transformAddConstraint(e){return{kind:"AddConstraintNode",constraint:this.transformNode(e.constraint)}}transformDropConstraint(e){return{kind:"DropConstraintNode",constraintName:this.transformNode(e.constraintName),ifExists:e.ifExists,modifier:e.modifier}}transformCreateView(e){return{kind:"CreateViewNode",name:this.transformNode(e.name),temporary:e.temporary,orReplace:e.orReplace,ifNotExists:e.ifNotExists,materialized:e.materialized,columns:this.transformNodeList(e.columns),as:this.transformNode(e.as)}}transformDropView(e){return{kind:"DropViewNode",name:this.transformNode(e.name),ifExists:e.ifExists,materialized:e.materialized,cascade:e.cascade}}transformGenerated(e){return{kind:"GeneratedNode",byDefault:e.byDefault,always:e.always,identity:e.identity,stored:e.stored,expression:this.transformNode(e.expression)}}transformDefaultValue(e){return{kind:"DefaultValueNode",defaultValue:this.transformNode(e.defaultValue)}}transformOn(e){return{kind:"OnNode",on:this.transformNode(e.on)}}transformSelectModifier(e){return{kind:"SelectModifierNode",modifier:e.modifier,rawModifier:this.transformNode(e.rawModifier),of:this.transformNodeList(e.of)}}transformCreateType(e){return{kind:"CreateTypeNode",name:this.transformNode(e.name),enum:this.transformNode(e.enum)}}transformDropType(e){return{kind:"DropTypeNode",name:this.transformNode(e.name),ifExists:e.ifExists}}transformExplain(e){return{kind:"ExplainNode",format:e.format,options:this.transformNode(e.options)}}transformSchemableIdentifier(e){return{kind:"SchemableIdentifierNode",schema:this.transformNode(e.schema),identifier:this.transformNode(e.identifier)}}transformAggregateFunction(e){return{kind:"AggregateFunctionNode",aggregated:this.transformNodeList(e.aggregated),distinct:e.distinct,filter:this.transformNode(e.filter),func:e.func,over:this.transformNode(e.over)}}transformOver(e){return{kind:"OverNode",orderBy:this.transformNode(e.orderBy),partitionBy:this.transformNode(e.partitionBy)}}transformPartitionBy(e){return{kind:"PartitionByNode",items:this.transformNodeList(e.items)}}transformPartitionByItem(e){return{kind:"PartitionByItemNode",partitionBy:this.transformNode(e.partitionBy)}}transformBinaryOperation(e){return{kind:"BinaryOperationNode",leftOperand:this.transformNode(e.leftOperand),operator:this.transformNode(e.operator),rightOperand:this.transformNode(e.rightOperand)}}transformUnaryOperation(e){return{kind:"UnaryOperationNode",operator:this.transformNode(e.operator),operand:this.transformNode(e.operand)}}transformUsing(e){return{kind:"UsingNode",tables:this.transformNodeList(e.tables)}}transformFunction(e){return{kind:"FunctionNode",func:e.func,arguments:this.transformNodeList(e.arguments)}}transformCase(e){return{kind:"CaseNode",value:this.transformNode(e.value),when:this.transformNodeList(e.when),else:this.transformNode(e.else),isStatement:e.isStatement}}transformWhen(e){return{kind:"WhenNode",condition:this.transformNode(e.condition),result:this.transformNode(e.result)}}transformJSONReference(e){return{kind:"JSONReferenceNode",reference:this.transformNode(e.reference),traversal:this.transformNode(e.traversal)}}transformJSONPath(e){return{kind:"JSONPathNode",inOperator:this.transformNode(e.inOperator),pathLegs:this.transformNodeList(e.pathLegs)}}transformJSONPathLeg(e){return{kind:"JSONPathLegNode",type:e.type,value:e.value}}transformJSONOperatorChain(e){return{kind:"JSONOperatorChainNode",operator:this.transformNode(e.operator),values:this.transformNodeList(e.values)}}transformTuple(e){return{kind:"TupleNode",values:this.transformNodeList(e.values)}}transformMergeQuery(e){return{kind:"MergeQueryNode",into:this.transformNode(e.into),using:this.transformNode(e.using),whens:this.transformNodeList(e.whens),with:this.transformNode(e.with)}}transformMatched(e){return{kind:"MatchedNode",not:e.not,bySource:e.bySource}}transformAddIndex(e){return{kind:"AddIndexNode",name:this.transformNode(e.name),columns:this.transformNodeList(e.columns),unique:e.unique,using:this.transformNode(e.using),ifNotExists:e.ifNotExists}}transformCast(e){return{kind:"CastNode",expression:this.transformNode(e.expression),dataType:this.transformNode(e.dataType)}}transformDataType(e){return e}transformSelectAll(e){return e}transformIdentifier(e){return e}transformValue(e){return e}transformPrimitiveValueList(e){return e}transformOperator(e){return e}transformDefaultInsertValue(e){return e}}const oe=freeze({AlterTableNode:!0,CreateIndexNode:!0,CreateSchemaNode:!0,CreateTableNode:!0,CreateTypeNode:!0,CreateViewNode:!0,DeleteQueryNode:!0,DropIndexNode:!0,DropSchemaNode:!0,DropTableNode:!0,DropTypeNode:!0,DropViewNode:!0,InsertQueryNode:!0,RawNode:!0,SelectQueryNode:!0,UpdateQueryNode:!0,MergeQueryNode:!0});class WithSchemaTransformer extends OperationNodeTransformer{#i;#o=new Set;#s=new Set;constructor(e){super(),this.#i=e}transformNodeImpl(e){if(!this.#a(e))return super.transformNodeImpl(e);const r=this.#d(e);for(const e of r)this.#s.add(e);const t=this.#u(e);for(const e of t)this.#o.add(e);const n=super.transformNodeImpl(e);for(const e of t)this.#o.delete(e);for(const e of r)this.#s.delete(e);return n}transformSchemableIdentifier(r){const t=super.transformSchemableIdentifier(r);return t.schema||!this.#o.has(r.identifier.name)?t:{...t,schema:e.create(this.#i)}}transformReferences(e){const r=super.transformReferences(e);return r.table.table.schema?r:{...r,table:n.createWithSchema(this.#i,r.table.table.identifier.name)}}#a(e){return e.kind in oe}#u(e){const t=new Set;if("name"in e&&e.name&&r.is(e.name)&&this.#p(e.name,t),"from"in e&&e.from)for(const r of e.from.froms)this.#l(r,t);if("into"in e&&e.into&&this.#l(e.into,t),"table"in e&&e.table&&this.#l(e.table,t),"joins"in e&&e.joins)for(const r of e.joins)this.#l(r.table,t);return"using"in e&&e.using&&this.#l(e.using,t),t}#d(e){const r=new Set;return"with"in e&&e.with&&this.#c(e.with,r),r}#l(e,r){const i=n.is(e)?e:t.is(e)&&n.is(e.node)?e.node:null;i&&this.#p(i.table,r)}#p(e,r){const t=e.identifier.name;this.#o.has(t)||this.#s.has(t)||r.add(t)}#c(e,r){for(const t of e.expressions){const e=t.name.table.table.identifier.name;this.#s.has(e)||r.add(e)}}}class WithSchemaPlugin{#h;constructor(e){this.#h=new WithSchemaTransformer(e)}transformQuery(e){return this.#h.transformNode(e.node)}async transformResult(e){return e.result}}const se=freeze({is:e=>"MatchedNode"===e.kind,create:(e,r=!1)=>freeze({kind:"MatchedNode",not:e,bySource:r})});function parseMergeWhen(e,r,t){return G.create(parseFilterList([se.create(!e.isMatched,e.bySource),...r&&r.length>0?[3===r.length&&t?parseReferentialBinaryOperation(r[0],r[1],r[2]):parseValueBinaryOperationOrExpression(r)]:[]],"and",!1))}function parseMergeThen(e){return isString(e)?x.create([e],[]):isOperationNodeSource(e)?e.toOperationNode():e}class Deferred{#f;#m;#N;constructor(){this.#f=new Promise(((e,r)=>{this.#N=r,this.#m=e}))}get promise(){return this.#f}resolve=e=>{this.#m&&this.#m(e)};reject=e=>{this.#N&&this.#N(e)}}const ae=new Set;function logOnce(e){ae.has(e)||(ae.add(e),console.log(e))}const de=freeze([]);class QueryExecutorBase{#y;constructor(e=de){this.#y=e}get plugins(){return this.#y}transformQuery(e,r){for(const t of this.#y){const n=t.transformQuery({node:e,queryId:r});if(n.kind!==e.kind)throw new Error(["KyselyPlugin.transformQuery must return a node","of the same kind that was given to it.",`The plugin was given a ${e.kind}`,`but it returned a ${n.kind}`].join(" "));e=n}return e}async executeQuery(e,r){return await this.provideConnection((async t=>{const n=await t.executeQuery(e),i=await this.#w(n,r);return function warnOfOutdatedDriverOrPlugins(e,r){const{numAffectedRows:t}=e;if(void 0===t&&void 0===e.numUpdatedOrDeletedRows||void 0!==t&&void 0!==r.numAffectedRows)return;logOnce("kysely:warning: outdated driver/plugin detected! QueryResult.numUpdatedOrDeletedRows is deprecated and will be removed in a future release.")}(n,i),i}))}async*stream(e,r,t){const n=new Deferred,i=new Deferred;this.provideConnection((async e=>(n.resolve(e),await i.promise))).catch((e=>n.reject(e)));const o=await n.promise;try{for await(const n of o.streamQuery(e,r))yield await this.#w(n,t)}finally{i.resolve()}}async#w(e,r){for(const t of this.#y)e=await t.transformResult({result:e,queryId:r});return e}}class NoopQueryExecutor extends QueryExecutorBase{get adapter(){throw new Error("this query cannot be compiled to SQL")}compileQuery(){throw new Error("this query cannot be compiled to SQL")}provideConnection(){throw new Error("this query cannot be executed")}withConnectionProvider(){throw new Error("this query cannot have a connection provider")}withPlugin(e){return new NoopQueryExecutor([...this.plugins,e])}withPlugins(e){return new NoopQueryExecutor([...this.plugins,...e])}withPluginAtFront(e){return new NoopQueryExecutor([e,...this.plugins])}withoutPlugins(){return new NoopQueryExecutor([])}}const ue=new NoopQueryExecutor;class MergeResult{numChangedRows;constructor(e){this.numChangedRows=e}}class MergeQueryBuilder{#r;constructor(e){this.#r=freeze(e)}using(...e){return new WheneableMergeQueryBuilder({...this.#r,queryNode:H.cloneWithUsing(this.#r.queryNode,parseJoin("Using",e))})}}preventAwait(MergeQueryBuilder,"don't await MergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");class WheneableMergeQueryBuilder{#r;constructor(e){this.#r=freeze(e)}whenMatched(){return this.#g([])}whenMatchedAnd(...e){return this.#g(e)}whenMatchedAndRef(e,r,t){return this.#g([e,r,t],!0)}#g(e,r){return new MatchedThenableMergeQueryBuilder({...this.#r,queryNode:H.cloneWithWhen(this.#r.queryNode,parseMergeWhen({isMatched:!0},e,r))})}whenNotMatched(){return this.#O([])}whenNotMatchedAnd(...e){return this.#O(e)}whenNotMatchedAndRef(e,r,t){return this.#O([e,r,t],!0)}whenNotMatchedBySource(){return this.#O([],!1,!0)}whenNotMatchedBySourceAnd(...e){return this.#O(e,!1,!0)}whenNotMatchedBySourceAndRef(e,r,t){return this.#O([e,r,t],!0,!0)}#O(e,r=!1,t=!1){const n={...this.#r,queryNode:H.cloneWithWhen(this.#r.queryNode,parseMergeWhen({isMatched:!1,bySource:t},e,r))};return new(t?MatchedThenableMergeQueryBuilder:NotMatchedThenableMergeQueryBuilder)(n)}$call(e){return e(this)}$if(e,r){return e?r(this):new WheneableMergeQueryBuilder({...this.#r})}toOperationNode(){return this.#r.executor.transformQuery(this.#r.queryNode,this.#r.queryId)}compile(){return this.#r.executor.compileQuery(this.#r.queryNode,this.#r.queryId)}async execute(){const e=this.compile(),r=await this.#r.executor.executeQuery(e,this.#r.queryId);return[new MergeResult(r.numAffectedRows)]}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}}preventAwait(WheneableMergeQueryBuilder,"don't await WheneableMergeQueryBuilder instances directly. To execute the query you need to call `execute`.");class MatchedThenableMergeQueryBuilder{#r;constructor(e){this.#r=freeze(e)}thenDelete(){return new WheneableMergeQueryBuilder({...this.#r,queryNode:H.cloneWithThen(this.#r.queryNode,parseMergeThen("delete"))})}thenDoNothing(){return new WheneableMergeQueryBuilder({...this.#r,queryNode:H.cloneWithThen(this.#r.queryNode,parseMergeThen("do nothing"))})}thenUpdate(e){return new WheneableMergeQueryBuilder({...this.#r,queryNode:H.cloneWithThen(this.#r.queryNode,parseMergeThen(e(new UpdateQueryBuilder({queryId:this.#r.queryId,executor:ue,queryNode:U.createWithoutTable()}))))})}thenUpdateSet(...e){return this.thenUpdate((r=>r.set(...e)))}}preventAwait(MatchedThenableMergeQueryBuilder,"don't await MatchedThenableMergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");class NotMatchedThenableMergeQueryBuilder{#r;constructor(e){this.#r=freeze(e)}thenDoNothing(){return new WheneableMergeQueryBuilder({...this.#r,queryNode:H.cloneWithThen(this.#r.queryNode,parseMergeThen("do nothing"))})}thenInsertValues(e){const[r,t]=parseInsertExpression(e);return new WheneableMergeQueryBuilder({...this.#r,queryNode:H.cloneWithThen(this.#r.queryNode,parseMergeThen(J.cloneWith(J.createWithoutInto(),{columns:r,values:t})))})}}preventAwait(NotMatchedThenableMergeQueryBuilder,"don't await NotMatchedThenableMergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");class QueryCreator{#r;constructor(e){this.#r=freeze(e)}selectFrom(e){return createSelectQueryBuilder({queryId:createQueryId(),executor:this.#r.executor,queryNode:v.createFrom(parseTableExpressionOrList(e),this.#r.withNode)})}selectNoFrom(e){return createSelectQueryBuilder({queryId:createQueryId(),executor:this.#r.executor,queryNode:v.cloneWithSelections(v.create(this.#r.withNode),parseSelectArg(e))})}insertInto(e){return new InsertQueryBuilder({queryId:createQueryId(),executor:this.#r.executor,queryNode:J.create(parseTable(e),this.#r.withNode)})}replaceInto(e){return new InsertQueryBuilder({queryId:createQueryId(),executor:this.#r.executor,queryNode:J.create(parseTable(e),this.#r.withNode,!0)})}deleteFrom(e){return new DeleteQueryBuilder({queryId:createQueryId(),executor:this.#r.executor,queryNode:P.create(parseTableExpressionOrList(e),this.#r.withNode)})}updateTable(e){return new UpdateQueryBuilder({queryId:createQueryId(),executor:this.#r.executor,queryNode:U.create(parseTableExpression(e),this.#r.withNode)})}mergeInto(e){return new MergeQueryBuilder({queryId:createQueryId(),executor:this.#r.executor,queryNode:H.create(parseAliasedTable(e),this.#r.withNode)})}with(e,r){const t=parseCommonTableExpression(e,r);return new QueryCreator({...this.#r,withNode:this.#r.withNode?ne.cloneWithExpression(this.#r.withNode,t):ne.create(t)})}withRecursive(e,r){const t=parseCommonTableExpression(e,r);return new QueryCreator({...this.#r,withNode:this.#r.withNode?ne.cloneWithExpression(this.#r.withNode,t):ne.create(t,{recursive:!0})})}withPlugin(e){return new QueryCreator({...this.#r,executor:this.#r.executor.withPlugin(e)})}withoutPlugins(){return new QueryCreator({...this.#r,executor:this.#r.executor.withoutPlugins()})}withSchema(e){return new QueryCreator({...this.#r,executor:this.#r.executor.withPluginAtFront(new WithSchemaPlugin(e))})}}function parseJoin(e,r){if(3===r.length)return function parseSingleOnJoin(e,r,t,n){return d.createWithOn(e,parseTableExpression(r),parseReferentialBinaryOperation(t,"=",n))}(e,r[0],r[1],r[2]);if(2===r.length)return function parseCallbackJoin(e,r,t){return t(function createJoinBuilder(e,r){return new JoinBuilder({joinNode:d.create(e,parseTableExpression(r))})}(e,r)).toOperationNode()}(e,r[0],r[1]);throw new Error("not implemented")}const pe=freeze({is:e=>"OffsetNode"===e.kind,create:e=>freeze({kind:"OffsetNode",offset:e})}),le=freeze({is:e=>"GroupByItemNode"===e.kind,create:e=>freeze({kind:"GroupByItemNode",groupBy:e})});function parseGroupBy(e){return parseReferenceExpressionOrList(e=isFunction(e)?e(expressionBuilder()):e).map(le.create)}const ce=freeze({is:e=>"SetOperationNode"===e.kind,create:(e,r,t)=>freeze({kind:"SetOperationNode",operator:e,expression:r,all:t})});function parseSetOperations(e,r,t){return isFunction(r)&&(r=r(createExpressionBuilder())),isReadonlyArray(r)||(r=[r]),r.map((r=>ce.create(e,parseExpression(r),t)))}class ExpressionWrapper{#B;constructor(e){this.#B=e}get expressionType(){}as(e){return new AliasedExpressionWrapper(this,e)}or(...e){return new OrWrapper(s.create(this.#B,parseValueBinaryOperationOrExpression(e)))}and(...e){return new AndWrapper(o.create(this.#B,parseValueBinaryOperationOrExpression(e)))}$castTo(){return new ExpressionWrapper(this.#B)}$notNull(){return new ExpressionWrapper(this.#B)}toOperationNode(){return this.#B}}class AliasedExpressionWrapper{#x;#b;constructor(e,r){this.#x=e,this.#b=r}get expression(){return this.#x}get alias(){return this.#b}toOperationNode(){return t.create(this.#x.toOperationNode(),isOperationNodeSource(this.#b)?this.#b.toOperationNode():e.create(this.#b))}}class OrWrapper{#B;constructor(e){this.#B=e}get expressionType(){}as(e){return new AliasedExpressionWrapper(this,e)}or(...e){return new OrWrapper(s.create(this.#B,parseValueBinaryOperationOrExpression(e)))}$castTo(){return new OrWrapper(this.#B)}toOperationNode(){return k.create(this.#B)}}class AndWrapper{#B;constructor(e){this.#B=e}get expressionType(){}as(e){return new AliasedExpressionWrapper(this,e)}and(...e){return new AndWrapper(o.create(this.#B,parseValueBinaryOperationOrExpression(e)))}$castTo(){return new AndWrapper(this.#B)}toOperationNode(){return k.create(this.#B)}}class SelectQueryBuilderImpl{#r;constructor(e){this.#r=freeze(e)}get expressionType(){}get isSelectQueryBuilder(){return!0}where(...e){return new SelectQueryBuilderImpl({...this.#r,queryNode:_.cloneWithWhere(this.#r.queryNode,parseValueBinaryOperationOrExpression(e))})}whereRef(e,r,t){return new SelectQueryBuilderImpl({...this.#r,queryNode:_.cloneWithWhere(this.#r.queryNode,parseReferentialBinaryOperation(e,r,t))})}having(...e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithHaving(this.#r.queryNode,parseValueBinaryOperationOrExpression(e))})}havingRef(e,r,t){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithHaving(this.#r.queryNode,parseReferentialBinaryOperation(e,r,t))})}select(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithSelections(this.#r.queryNode,parseSelectArg(e))})}distinctOn(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithDistinctOn(this.#r.queryNode,parseReferenceExpressionOrList(e))})}modifyFront(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithFrontModifier(this.#r.queryNode,i.createWithExpression(e.toOperationNode()))})}modifyEnd(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithEndModifier(this.#r.queryNode,i.createWithExpression(e.toOperationNode()))})}distinct(){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithFrontModifier(this.#r.queryNode,i.create("Distinct"))})}forUpdate(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithEndModifier(this.#r.queryNode,i.create("ForUpdate",e?asArray(e).map(parseTable):void 0))})}forShare(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithEndModifier(this.#r.queryNode,i.create("ForShare",e?asArray(e).map(parseTable):void 0))})}forKeyShare(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithEndModifier(this.#r.queryNode,i.create("ForKeyShare",e?asArray(e).map(parseTable):void 0))})}forNoKeyUpdate(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithEndModifier(this.#r.queryNode,i.create("ForNoKeyUpdate",e?asArray(e).map(parseTable):void 0))})}skipLocked(){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithEndModifier(this.#r.queryNode,i.create("SkipLocked"))})}noWait(){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithEndModifier(this.#r.queryNode,i.create("NoWait"))})}selectAll(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithSelections(this.#r.queryNode,parseSelectAll(e))})}innerJoin(...e){return new SelectQueryBuilderImpl({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("InnerJoin",e))})}leftJoin(...e){return new SelectQueryBuilderImpl({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("LeftJoin",e))})}rightJoin(...e){return new SelectQueryBuilderImpl({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("RightJoin",e))})}fullJoin(...e){return new SelectQueryBuilderImpl({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("FullJoin",e))})}innerJoinLateral(...e){return new SelectQueryBuilderImpl({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("LateralInnerJoin",e))})}leftJoinLateral(...e){return new SelectQueryBuilderImpl({...this.#r,queryNode:_.cloneWithJoin(this.#r.queryNode,parseJoin("LateralLeftJoin",e))})}orderBy(...e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithOrderByItems(this.#r.queryNode,parseOrderBy(e))})}groupBy(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithGroupByItems(this.#r.queryNode,parseGroupBy(e))})}limit(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithLimit(this.#r.queryNode,ee.create(parseValueExpression(e)))})}offset(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithOffset(this.#r.queryNode,pe.create(parseValueExpression(e)))})}union(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithSetOperations(this.#r.queryNode,parseSetOperations("union",e,!1))})}unionAll(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithSetOperations(this.#r.queryNode,parseSetOperations("union",e,!0))})}intersect(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithSetOperations(this.#r.queryNode,parseSetOperations("intersect",e,!1))})}intersectAll(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithSetOperations(this.#r.queryNode,parseSetOperations("intersect",e,!0))})}except(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithSetOperations(this.#r.queryNode,parseSetOperations("except",e,!1))})}exceptAll(e){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithSetOperations(this.#r.queryNode,parseSetOperations("except",e,!0))})}as(e){return new AliasedSelectQueryBuilderImpl(this,e)}clearSelect(){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithoutSelections(this.#r.queryNode)})}clearWhere(){return new SelectQueryBuilderImpl({...this.#r,queryNode:_.cloneWithoutWhere(this.#r.queryNode)})}clearLimit(){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithoutLimit(this.#r.queryNode)})}clearOffset(){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithoutOffset(this.#r.queryNode)})}clearOrderBy(){return new SelectQueryBuilderImpl({...this.#r,queryNode:v.cloneWithoutOrderBy(this.#r.queryNode)})}$call(e){return e(this)}$if(e,r){return e?r(this):new SelectQueryBuilderImpl({...this.#r})}$castTo(){return new SelectQueryBuilderImpl(this.#r)}$narrowType(){return new SelectQueryBuilderImpl(this.#r)}$assertType(){return new SelectQueryBuilderImpl(this.#r)}$asTuple(){return new ExpressionWrapper(this.toOperationNode())}withPlugin(e){return new SelectQueryBuilderImpl({...this.#r,executor:this.#r.executor.withPlugin(e)})}toOperationNode(){return this.#r.executor.transformQuery(this.#r.queryNode,this.#r.queryId)}compile(){return this.#r.executor.compileQuery(this.toOperationNode(),this.#r.queryId)}async execute(){const e=this.compile();return(await this.#r.executor.executeQuery(e,this.#r.queryId)).rows}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#r.executor.stream(r,e,this.#r.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new SelectQueryBuilderImpl({...this.#r,queryNode:_.cloneWithExplain(this.#r.queryNode,e,r)});return await t.execute()}}function createSelectQueryBuilder(e){return new SelectQueryBuilderImpl(e)}preventAwait(SelectQueryBuilderImpl,"don't await SelectQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");class AliasedSelectQueryBuilderImpl{#W;#b;constructor(e,r){this.#W=e,this.#b=r}get expression(){return this.#W}get alias(){return this.#b}get isAliasedSelectQueryBuilder(){return!0}toOperationNode(){return t.create(this.#W.toOperationNode(),e.create(this.#b))}}preventAwait(AliasedSelectQueryBuilderImpl,"don't await AliasedSelectQueryBuilder instances directly. AliasedSelectQueryBuilder should never be executed directly since it's always a part of another query.");const he=freeze({is:e=>"AggregateFunctionNode"===e.kind,create:(e,r=[])=>freeze({kind:"AggregateFunctionNode",func:e,aggregated:r}),cloneWithDistinct:e=>freeze({...e,distinct:!0}),cloneWithFilter:(e,r)=>freeze({...e,filter:e.filter?j.cloneWithOperation(e.filter,"And",r):j.create(r)}),cloneWithOrFilter:(e,r)=>freeze({...e,filter:e.filter?j.cloneWithOperation(e.filter,"Or",r):j.create(r)}),cloneWithOver:(e,r)=>freeze({...e,over:r})}),fe=freeze({is:e=>"FunctionNode"===e.kind,create:(e,r)=>freeze({kind:"FunctionNode",func:e,arguments:r})});class AggregateFunctionBuilder{#r;constructor(e){this.#r=freeze(e)}get expressionType(){}as(e){return new AliasedAggregateFunctionBuilder(this,e)}distinct(){return new AggregateFunctionBuilder({...this.#r,aggregateFunctionNode:he.cloneWithDistinct(this.#r.aggregateFunctionNode)})}filterWhere(...e){return new AggregateFunctionBuilder({...this.#r,aggregateFunctionNode:he.cloneWithFilter(this.#r.aggregateFunctionNode,parseValueBinaryOperationOrExpression(e))})}filterWhereRef(e,r,t){return new AggregateFunctionBuilder({...this.#r,aggregateFunctionNode:he.cloneWithFilter(this.#r.aggregateFunctionNode,parseReferentialBinaryOperation(e,r,t))})}over(e){const r=function createOverBuilder(){return new OverBuilder({overNode:Q.create()})}();return new AggregateFunctionBuilder({...this.#r,aggregateFunctionNode:he.cloneWithOver(this.#r.aggregateFunctionNode,(e?e(r):r).toOperationNode())})}$call(e){return e(this)}$castTo(){return new AggregateFunctionBuilder(this.#r)}$notNull(){return new AggregateFunctionBuilder(this.#r)}toOperationNode(){return this.#r.aggregateFunctionNode}}preventAwait(AggregateFunctionBuilder,"don't await AggregateFunctionBuilder instances. They are never executed directly and are always just a part of a query.");class AliasedAggregateFunctionBuilder{#S;#b;constructor(e,r){this.#S=e,this.#b=r}get expression(){return this.#S}get alias(){return this.#b}toOperationNode(){return t.create(this.#S.toOperationNode(),e.create(this.#b))}}function createFunctionModule(){const fn=(e,r)=>new ExpressionWrapper(fe.create(e,parseReferenceExpressionOrList(r??[]))),agg=(e,r)=>new AggregateFunctionBuilder({aggregateFunctionNode:he.create(e,r?parseReferenceExpressionOrList(r):void 0)});return Object.assign(fn,{agg:agg,avg:e=>agg("avg",[e]),coalesce:(...e)=>fn("coalesce",e),count:e=>agg("count",[e]),countAll:e=>new AggregateFunctionBuilder({aggregateFunctionNode:he.create("count",parseSelectAll(e))}),max:e=>agg("max",[e]),min:e=>agg("min",[e]),sum:e=>agg("sum",[e]),any:e=>fn("any",[e]),jsonAgg:e=>new AggregateFunctionBuilder({aggregateFunctionNode:he.create("json_agg",[isString(e)?parseTable(e):e.toOperationNode()])}),toJson:e=>new ExpressionWrapper(fe.create("to_json",[isString(e)?parseTable(e):e.toOperationNode()]))})}const me=freeze({is:e=>"UnaryOperationNode"===e.kind,create:(e,r)=>freeze({kind:"UnaryOperationNode",operator:e,operand:r})});const Ne=freeze({is:e=>"CaseNode"===e.kind,create:e=>freeze({kind:"CaseNode",value:e}),cloneWithWhen:(e,r)=>freeze({...e,when:freeze(e.when?[...e.when,r]:[r])}),cloneWithThen:(e,r)=>freeze({...e,when:e.when?freeze([...e.when.slice(0,-1),G.cloneWithResult(e.when[e.when.length-1],r)]):void 0}),cloneWith:(e,r)=>freeze({...e,...r})});class CaseBuilder{#r;constructor(e){this.#r=freeze(e)}when(...e){return new CaseThenBuilder({...this.#r,node:Ne.cloneWithWhen(this.#r.node,G.create(parseValueBinaryOperationOrExpression(e)))})}}class CaseThenBuilder{#r;constructor(e){this.#r=freeze(e)}then(e){return new CaseWhenBuilder({...this.#r,node:Ne.cloneWithThen(this.#r.node,isSafeImmediateValue(e)?parseSafeImmediateValue(e):parseValueExpression(e))})}}class CaseWhenBuilder{#r;constructor(e){this.#r=freeze(e)}when(...e){return new CaseThenBuilder({...this.#r,node:Ne.cloneWithWhen(this.#r.node,G.create(parseValueBinaryOperationOrExpression(e)))})}else(e){return new CaseEndBuilder({...this.#r,node:Ne.cloneWith(this.#r.node,{else:isSafeImmediateValue(e)?parseSafeImmediateValue(e):parseValueExpression(e)})})}end(){return new ExpressionWrapper(Ne.cloneWith(this.#r.node,{isStatement:!1}))}endCase(){return new ExpressionWrapper(Ne.cloneWith(this.#r.node,{isStatement:!0}))}}class CaseEndBuilder{#r;constructor(e){this.#r=freeze(e)}end(){return new ExpressionWrapper(Ne.cloneWith(this.#r.node,{isStatement:!1}))}endCase(){return new ExpressionWrapper(Ne.cloneWith(this.#r.node,{isStatement:!0}))}}const ye=freeze({is:e=>"JSONPathLegNode"===e.kind,create:(e,r)=>freeze({kind:"JSONPathLegNode",type:e,value:r})});class JSONPathBuilder{#B;constructor(e){this.#B=e}at(e){return this.#I("ArrayLocation",e)}key(e){return this.#I("Member",e)}#I(e,r){return b.is(this.#B)?new TraversedJSONPathBuilder(b.cloneWithTraversal(this.#B,S.is(this.#B.traversal)?S.cloneWithLeg(this.#B.traversal,ye.create(e,r)):W.cloneWithValue(this.#B.traversal,E.createImmediate(r)))):new TraversedJSONPathBuilder(S.cloneWithLeg(this.#B,ye.create(e,r)))}}class TraversedJSONPathBuilder extends JSONPathBuilder{#B;constructor(e){super(e),this.#B=e}get expressionType(){}as(e){return new AliasedJSONPathBuilder(this,e)}$castTo(){return new JSONPathBuilder(this.#B)}$notNull(){return new JSONPathBuilder(this.#B)}toOperationNode(){return this.#B}}class AliasedJSONPathBuilder{#z;#b;constructor(e,r){this.#z=e,this.#b=r}get expression(){return this.#z}get alias(){return this.#b}toOperationNode(){return t.create(this.#z.toOperationNode(),isOperationNodeSource(this.#b)?this.#b.toOperationNode():e.create(this.#b))}}const we=freeze({is:e=>"TupleNode"===e.kind,create:e=>freeze({kind:"TupleNode",values:freeze(e)})}),ge=["varchar","char","text","integer","int2","int4","int8","bigint","boolean","real","double precision","float4","float8","decimal","numeric","binary","bytea","date","datetime","time","timetz","timestamp","timestamptz","serial","bigserial","uuid","json","jsonb","blob"],Oe=[/^varchar\(\d+\)$/,/^char\(\d+\)$/,/^decimal\(\d+, \d+\)$/,/^numeric\(\d+, \d+\)$/,/^binary\(\d+\)$/,/^datetime\(\d+\)$/,/^time\(\d+\)$/,/^timez\(\d+\)$/,/^timestamp\(\d+\)$/,/^timestamptz\(\d+\)$/],Be=freeze({is:e=>"DataTypeNode"===e.kind,create:e=>freeze({kind:"DataTypeNode",dataType:e})});function isColumnDataType(e){return!!ge.includes(e)||!!Oe.some((r=>r.test(e)))}function parseDataTypeExpression(e){if(isOperationNodeSource(e))return e.toOperationNode();if(isColumnDataType(e))return Be.create(e);throw new Error(`invalid column data type ${JSON.stringify(e)}`)}const xe=freeze({is:e=>"CastNode"===e.kind,create:(e,r)=>freeze({kind:"CastNode",expression:e,dataType:r})});function createExpressionBuilder(e=ue){function unary(e,r){return new ExpressionWrapper(function parseUnaryOperation(e,r){return me.create(y.create(e),parseReferenceExpression(r))}(e,r))}const r=Object.assign((function binary(e,r,t){return new ExpressionWrapper(parseValueBinaryOperation(e,r,t))}),{fn:void 0,eb:void 0,selectFrom:r=>createSelectQueryBuilder({queryId:createQueryId(),executor:e,queryNode:v.createFrom(parseTableExpressionOrList(r))}),case:e=>new CaseBuilder({node:Ne.create(isUndefined(e)?void 0:parseReferenceExpression(e))}),ref:(e,r)=>isUndefined(r)?new ExpressionWrapper(parseStringReference(e)):new JSONPathBuilder(function parseJSONReference(e,r){const t=parseStringReference(e);if(isJSONOperator(r))return b.create(t,W.create(y.create(r)));const n=r.slice(0,-1);if(isJSONOperator(n))return b.create(t,S.create(y.create(n)));throw new Error(`Invalid JSON operator: ${r}`)}(e,r)),jsonPath:()=>new JSONPathBuilder(S.create()),table:e=>new ExpressionWrapper(parseTable(e)),val:e=>new ExpressionWrapper(parseValueExpression(e)),refTuple:(...e)=>new ExpressionWrapper(we.create(e.map(parseReferenceExpression))),tuple:(...e)=>new ExpressionWrapper(we.create(e.map(parseValueExpression))),lit:e=>new ExpressionWrapper(parseSafeImmediateValue(e)),unary:unary,not:e=>unary("not",e),exists:e=>unary("exists",e),neg:e=>unary("-",e),between:(e,r,t)=>new ExpressionWrapper(u.create(parseReferenceExpression(e),y.create("between"),o.create(parseValueExpression(r),parseValueExpression(t)))),betweenSymmetric:(e,r,t)=>new ExpressionWrapper(u.create(parseReferenceExpression(e),y.create("between symmetric"),o.create(parseValueExpression(r),parseValueExpression(t)))),and:e=>isReadonlyArray(e)?new ExpressionWrapper(parseFilterList(e,"and")):new ExpressionWrapper(parseFilterObject(e,"and")),or:e=>isReadonlyArray(e)?new ExpressionWrapper(parseFilterList(e,"or")):new ExpressionWrapper(parseFilterObject(e,"or")),parens(...e){const r=parseValueBinaryOperationOrExpression(e);return k.is(r)?new ExpressionWrapper(r):new ExpressionWrapper(k.create(r))},cast:(e,r)=>new ExpressionWrapper(xe.create(parseReferenceExpression(e),parseDataTypeExpression(r))),withSchema:r=>createExpressionBuilder(e.withPluginAtFront(new WithSchemaPlugin(r)))});return r.fn=createFunctionModule(),r.eb=r,r}function expressionBuilder(e){return createExpressionBuilder()}function parseExpression(e){if(isOperationNodeSource(e))return e.toOperationNode();if(isFunction(e))return e(expressionBuilder()).toOperationNode();throw new Error(`invalid expression: ${JSON.stringify(e)}`)}function parseAliasedExpression(e){if(isOperationNodeSource(e))return e.toOperationNode();if(isFunction(e))return e(expressionBuilder()).toOperationNode();throw new Error(`invalid aliased expression: ${JSON.stringify(e)}`)}function isExpressionOrFactory(e){return isExpression(e)||isAliasedExpression(e)||isFunction(e)}function parseTableExpressionOrList(e){return isReadonlyArray(e)?e.map((e=>parseTableExpression(e))):[parseTableExpression(e)]}function parseTableExpression(e){return isString(e)?parseAliasedTable(e):parseAliasedExpression(e)}function parseAliasedTable(r){const n=" as ";if(r.includes(n)){const[i,o]=r.split(n).map(trim);return t.create(parseTable(i),e.create(o))}return parseTable(r)}function parseTable(e){if(e.includes(".")){const[r,t]=e.split(".").map(trim);return n.createWithSchema(r,t)}return n.create(e)}function trim(e){return e.trim()}class RawBuilderImpl{#r;constructor(e){this.#r=freeze(e)}get expressionType(){}get isRawBuilder(){return!0}as(e){return new AliasedRawBuilderImpl(this,e)}$castTo(){return new RawBuilderImpl({...this.#r})}$notNull(){return new RawBuilderImpl(this.#r)}withPlugin(e){return new RawBuilderImpl({...this.#r,plugins:void 0!==this.#r.plugins?freeze([...this.#r.plugins,e]):freeze([e])})}toOperationNode(){return this.#E(this.#k())}compile(e){return this.#q(this.#k(e))}async execute(e){const r=this.#k(e);return r.executeQuery(this.#q(r),this.#r.queryId)}#k(e){const r=void 0!==e?e.getExecutor():ue;return void 0!==this.#r.plugins?r.withPlugins(this.#r.plugins):r}#E(e){return e.transformQuery(this.#r.rawNode,this.#r.queryId)}#q(e){return e.compileQuery(this.#E(e),this.#r.queryId)}}function createRawBuilder(e){return new RawBuilderImpl(e)}preventAwait(RawBuilderImpl,"don't await RawBuilder instances directly. To execute the query you need to call `execute`");class AliasedRawBuilderImpl{#C;#b;constructor(e,r){this.#C=e,this.#b=r}get expression(){return this.#C}get alias(){return this.#b}get rawBuilder(){return this.#C}toOperationNode(){return t.create(this.#C.toOperationNode(),isOperationNodeSource(this.#b)?this.#b.toOperationNode():e.create(this.#b))}}preventAwait(AliasedRawBuilderImpl,"don't await AliasedRawBuilder instances directly. AliasedRawBuilder should never be executed directly since it's always a part of another query.");const be=Object.assign(((e,...r)=>createRawBuilder({queryId:createQueryId(),rawNode:x.create(e,r?.map(parseParameter)??[])})),{ref:e=>createRawBuilder({queryId:createQueryId(),rawNode:x.createWithChild(parseStringReference(e))}),val:e=>createRawBuilder({queryId:createQueryId(),rawNode:x.createWithChild(parseValueExpression(e))}),value(e){return this.val(e)},table:e=>createRawBuilder({queryId:createQueryId(),rawNode:x.createWithChild(parseTable(e))}),id(...r){const t=new Array(r.length+1).fill(".");return t[0]="",t[t.length-1]="",createRawBuilder({queryId:createQueryId(),rawNode:x.create(t,r.map(e.create))})},lit:e=>createRawBuilder({queryId:createQueryId(),rawNode:x.createWithChild(E.createImmediate(e))}),literal(e){return this.lit(e)},raw:e=>createRawBuilder({queryId:createQueryId(),rawNode:x.createWithSql(e)}),join(e,r=be`, `){const t=new Array(2*e.length-1),n=r.toOperationNode();for(let r=0;r<e.length;++r)t[2*r]=parseParameter(e[r]),r!==e.length-1&&(t[2*r+1]=n);return createRawBuilder({queryId:createQueryId(),rawNode:x.createWithChildren(t)})}});function parseParameter(e){return isOperationNodeSource(e)?e.toOperationNode():parseValueExpression(e)}export{isAliasedExpression as $,y as A,isNumber as B,w as C,DynamicReferenceBuilder as D,isNull as E,isDate as F,isBigInt as G,v as H,e as I,getLast as J,be as K,randomString as L,H as M,Deferred as N,OperationNodeTransformer as O,k as P,_ as Q,x as R,r as S,isBuffer as T,isPlainObject as U,E as V,WithSchemaPlugin as W,compare as X,expressionBuilder as Y,logOnce as Z,isExpression as _,parseStringReference as a,s as a$,ExpressionWrapper as a0,AliasedExpressionWrapper as a1,OrWrapper as a2,AndWrapper as a3,createSelectQueryBuilder as a4,InsertQueryBuilder as a5,UpdateQueryBuilder as a6,DeleteQueryBuilder as a7,NoResultError as a8,isNoResultErrorConstructor as a9,te as aA,re as aB,Be as aC,isColumnDataType as aD,P as aE,T as aF,le as aG,A as aH,R as aI,d as aJ,ee as aK,pe as aL,Z as aM,Y as aN,a as aO,p as aP,l as aQ,c as aR,h as aS,f as aT,m as aU,N as aV,isOperator as aW,isBinaryOperator as aX,isComparisonOperator as aY,isArithmeticOperator as aZ,isJSONOperator as a_,JoinBuilder as aa,InsertResult as ab,DeleteResult as ac,UpdateResult as ad,OnConflictBuilder as ae,OnConflictDoNothingBuilder as af,OnConflictUpdateBuilder as ag,AggregateFunctionBuilder as ah,AliasedAggregateFunctionBuilder as ai,CaseThenBuilder as aj,CaseWhenBuilder as ak,CaseEndBuilder as al,JSONPathBuilder as am,TraversedJSONPathBuilder as an,AliasedJSONPathBuilder as ao,MergeQueryBuilder as ap,WheneableMergeQueryBuilder as aq,MatchedThenableMergeQueryBuilder as ar,NotMatchedThenableMergeQueryBuilder as as,MergeResult as at,createRawBuilder as au,NoopQueryExecutor as av,ue as aw,t as ax,o as ay,X as az,g as b,B as b0,q as b1,I as b2,O as b3,$ as b4,F as b5,n as b6,U as b7,M as b8,G as b9,j as ba,ne as bb,K as bc,L as bd,he as be,Q as bf,C as bg,D as bh,u as bi,me as bj,V as bk,b as bl,ye as bm,S as bn,W as bo,we as bp,se as bq,parseDataTypeExpression as c,parseOrderedColumnName as d,parseTable as e,freeze as f,parseValueBinaryOperationOrExpression as g,parseExpression as h,isOperationNodeSource as i,parseColumnName as j,z as k,createQueryId as l,QueryExecutorBase as m,noop as n,isFunction as o,preventAwait as p,isObject as q,QueryCreator as r,CaseBuilder as s,Ne as t,isUndefined as u,createFunctionModule as v,J as w,ce as x,isString as y,isBoolean as z};
