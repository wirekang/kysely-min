function isUndefined(e){return void 0===e||void 0===e}function isString(e){return"string"==typeof e}function isNumber(e){return"number"==typeof e}function isBoolean(e){return"boolean"==typeof e}function isNull(e){return null===e}function isDate(e){return e instanceof Date}function isBigInt(e){return"bigint"==typeof e}function isBuffer(e){return"undefined"!=typeof Buffer&&Buffer.isBuffer(e)}function isFunction(e){return"function"==typeof e}function isObject(e){return"object"==typeof e&&null!==e}function isArrayBufferOrView(e){return e instanceof ArrayBuffer||ArrayBuffer.isView(e)}function getLast(e){return e[e.length-1]}function freeze(e){return Object.freeze(e)}function isReadonlyArray(e){return Array.isArray(e)}function noop(e){return e}function compare(e,r){return isReadonlyArray(e)&&isReadonlyArray(r)?function compareArrays(e,r){if(e.length!==r.length)return!1;for(let t=0;t<e.length;++t)if(!compare(e[t],r[t]))return!1;return!0}(e,r):isObject(e)&&isObject(r)?function compareObjects(e,r){if(isBuffer(e)&&isBuffer(r))return function compareBuffers(e,r){return 0===Buffer.compare(e,r)}(e,r);if(isDate(e)&&isDate(r))return function compareDates(e,r){return e.getTime()===r.getTime()}(e,r);return function compareGenericObjects(e,r){const t=Object.keys(e),n=Object.keys(r);if(t.length!==n.length)return!1;for(const n of t)if(!compare(e[n],r[n]))return!1;return!0}(e,r)}(e,r):e===r}const e=freeze({is:e=>"IdentifierNode"===e.kind,create:e=>freeze({kind:"IdentifierNode",name:e})}),r=freeze({is:e=>"SchemableIdentifierNode"===e.kind,create:r=>freeze({kind:"SchemableIdentifierNode",identifier:e.create(r)}),createWithSchema:(r,t)=>freeze({kind:"SchemableIdentifierNode",schema:e.create(r),identifier:e.create(t)})}),t=freeze({is:e=>"AliasNode"===e.kind,create:(e,r)=>freeze({kind:"AliasNode",node:e,alias:r})}),n=freeze({is:e=>"TableNode"===e.kind,create:e=>freeze({kind:"TableNode",table:r.create(e)}),createWithSchema:(e,t)=>freeze({kind:"TableNode",table:r.createWithSchema(e,t)})});function isOperationNodeSource(e){return isObject(e)&&isFunction(e.toOperationNode)}function isExpression(e){return isObject(e)&&"expressionType"in e&&isOperationNodeSource(e)}function isAliasedExpression(e){return isObject(e)&&"expression"in e&&isString(e.alias)&&isOperationNodeSource(e)}const o=freeze({is:e=>"SelectModifierNode"===e.kind,create:e=>freeze({kind:"SelectModifierNode",modifier:e}),createWithExpression:e=>freeze({kind:"SelectModifierNode",rawModifier:e})}),i=freeze({is:e=>"AndNode"===e.kind,create:(e,r)=>freeze({kind:"AndNode",left:e,right:r})}),s=freeze({is:e=>"OrNode"===e.kind,create:(e,r)=>freeze({kind:"OrNode",left:e,right:r})}),a=freeze({is:e=>"OnNode"===e.kind,create:e=>freeze({kind:"OnNode",on:e}),cloneWithOperation:(e,r,t)=>freeze({...e,on:"And"===r?i.create(e.on,t):s.create(e.on,t)})}),d=freeze({is:e=>"JoinNode"===e.kind,create:(e,r)=>freeze({kind:"JoinNode",joinType:e,table:r,on:void 0}),createWithOn:(e,r,t)=>freeze({kind:"JoinNode",joinType:e,table:r,on:a.create(t)}),cloneWithOn:(e,r)=>freeze({...e,on:e.on?a.cloneWithOperation(e.on,"And",r):a.create(r)})}),u=freeze({is:e=>"BinaryOperationNode"===e.kind,create:(e,r,t)=>freeze({kind:"BinaryOperationNode",leftOperand:e,operator:r,rightOperand:t})}),p=["=","==","!=","<>",">",">=","<","<=","in","not in","is","is not","like","not like","match","ilike","not ilike","@>","<@","?","?&","!<","!>","<=>","!~","~","~*","!~*","@@","@@@","!!","<->","regexp"],c=["+","-","*","/","%","^","&","|","#","<<",">>"],l=["->","->>"],h=[...p,...c,"&&","||"],f=["exists","not exists"],m=["not","-",...f],N=[...h,...l,...m],y=freeze({is:e=>"OperatorNode"===e.kind,create:e=>freeze({kind:"OperatorNode",operator:e})});function isOperator(e){return isString(e)&&N.includes(e)}function isBinaryOperator(e){return isString(e)&&h.includes(e)}function isComparisonOperator(e){return isString(e)&&p.includes(e)}function isArithmeticOperator(e){return isString(e)&&c.includes(e)}function isJSONOperator(e){return isString(e)&&l.includes(e)}const w=freeze({is:e=>"ColumnNode"===e.kind,create:r=>freeze({kind:"ColumnNode",column:e.create(r)})}),O=freeze({is:e=>"SelectAllNode"===e.kind,create:()=>freeze({kind:"SelectAllNode"})}),g=freeze({is:e=>"ReferenceNode"===e.kind,create:(e,r)=>freeze({kind:"ReferenceNode",table:r,column:e}),createSelectAll:e=>freeze({kind:"ReferenceNode",table:e,column:O.create()})}),x=freeze({is:e=>"OrderByItemNode"===e.kind,create:(e,r)=>freeze({kind:"OrderByItemNode",orderBy:e,direction:r})}),B=freeze({is:e=>"RawNode"===e.kind,create:(e,r)=>freeze({kind:"RawNode",sqlFragments:freeze(e),parameters:freeze(r)}),createWithSql:e=>B.create([e],[]),createWithChild:e=>B.create(["",""],[e]),createWithChildren:e=>B.create(new Array(e.length+1).fill(""),e)});function parseOrderBy(e,r){return x.create(function parseOrderByExpression(e){return parseReferenceExpression(e)}(e),function parseOrderByDirectionExpression(e){if(!e)return;return"asc"===e||"desc"===e?B.createWithSql(e):e.toOperationNode()}(r))}const W=freeze({is:e=>"JSONReferenceNode"===e.kind,create:(e,r)=>freeze({kind:"JSONReferenceNode",reference:e,traversal:r}),cloneWithTraversal:(e,r)=>freeze({...e,traversal:r})}),S=freeze({is:e=>"JSONOperatorChainNode"===e.kind,create:e=>freeze({kind:"JSONOperatorChainNode",operator:e,values:freeze([])}),cloneWithValue:(e,r)=>freeze({...e,values:freeze([...e.values,r])})}),b=freeze({is:e=>"JSONPathNode"===e.kind,create:e=>freeze({kind:"JSONPathNode",inOperator:e,pathLegs:freeze([])}),cloneWithLeg:(e,r)=>freeze({...e,pathLegs:freeze([...e.pathLegs,r])})});function parseSimpleReferenceExpression(e){return isString(e)?parseStringReference(e):e.toOperationNode()}function parseReferenceExpressionOrList(e){return isReadonlyArray(e)?e.map((e=>parseReferenceExpression(e))):[parseReferenceExpression(e)]}function parseReferenceExpression(e){return isExpressionOrFactory(e)?parseExpression(e):parseSimpleReferenceExpression(e)}function parseStringReference(e){if(!e.includes("."))return g.create(w.create(e));const r=e.split(".").map(trim$1);if(3===r.length)return function parseStringReferenceWithTableAndSchema(e){const[r,t,o]=e;return g.create(w.create(o),n.createWithSchema(r,t))}(r);if(2===r.length)return function parseStringReferenceWithTable(e){const[r,t]=e;return g.create(w.create(t),n.create(r))}(r);throw new Error(`invalid column reference ${e}`)}function parseColumnName(e){return w.create(e)}function parseOrderedColumnName(e){if(e.includes(" ")){const[r,t]=e.split(" ").map(trim$1);if(!function isOrderByDirection(e){return"asc"===e||"desc"===e}(t))throw new Error(`invalid order direction "${t}" next to "${r}"`);return parseOrderBy(r,t)}return parseColumnName(e)}function trim$1(e){return e.trim()}const z=freeze({is:e=>"PrimitiveValueListNode"===e.kind,create:e=>freeze({kind:"PrimitiveValueListNode",values:freeze([...e])})}),C=freeze({is:e=>"ValueListNode"===e.kind,create:e=>freeze({kind:"ValueListNode",values:freeze(e)})}),k=freeze({is:e=>"ValueNode"===e.kind,create:e=>freeze({kind:"ValueNode",value:e}),createImmediate:e=>freeze({kind:"ValueNode",value:e,immediate:!0})});function parseValueExpressionOrList(e){return isReadonlyArray(e)?function parseValueExpressionList(e){if(e.some(isExpressionOrFactory))return C.create(e.map((e=>parseValueExpression(e))));return z.create(e)}(e):parseValueExpression(e)}function parseValueExpression(e){return isExpressionOrFactory(e)?parseExpression(e):k.create(e)}function parseFilter(e){if(e.length>1&&!isComparisonOperatorExpression(e[1]))throw new Error(`invalid comparison operator ${JSON.stringify(e[1])}`);return parseValueBinaryOperationOrExpression(e)}function parseValueBinaryOperationOrExpression(e){if(3===e.length)return parseValueBinaryOperation(e[0],e[1],e[2]);if(1===e.length)return function parseExpressionOrFactory(e){if(isFunction(e))return e(createExpressionBuilder()).toOperationNode();if(isOperationNodeSource(e))return e.toOperationNode();return k.create(e)}(e[0]);throw new Error(`invalid arguments: ${JSON.stringify(e)}`)}function parseValueBinaryOperation(e,r,t){if(!isBinaryOperatorExpression(r))throw new Error(`invalid binary operator ${JSON.stringify(r)}`);return function isIsOperator(e){return"is"===e||"is not"===e}(r)&&function isNullOrBoolean(e){return isNull(e)||isBoolean(e)}(t)?function parseIs(e,r,t){return u.create(parseReferenceExpression(e),parseOperator(r),k.createImmediate(t))}(e,r,t):u.create(parseReferenceExpression(e),parseOperator(r),parseValueExpressionOrList(t))}function parseReferentialComparison(e,r,t){if(!isComparisonOperatorExpression(r))throw new Error(`invalid comparison operator ${JSON.stringify(r)}`);return function parseReferentialBinaryOperation(e,r,t){if(!isBinaryOperatorExpression(r))throw new Error(`invalid binary operator ${JSON.stringify(r)}`);return u.create(parseReferenceExpression(e),parseOperator(r),parseReferenceExpression(t))}(e,r,t)}function isBinaryOperatorExpression(e){return isBinaryOperator(e)||isExpression(e)}function isComparisonOperatorExpression(e){return isComparisonOperator(e)||isExpression(e)}function parseOperator(e){if(isString(e)&&N.includes(e))return y.create(e);if(isOperationNodeSource(e))return e.toOperationNode();throw new Error(`invalid operator ${JSON.stringify(e)}`)}const E=freeze({is:e=>"OrderByNode"===e.kind,create:e=>freeze({kind:"OrderByNode",items:freeze([e])}),cloneWithItem:(e,r)=>freeze({...e,items:freeze([...e.items,r])})}),q=freeze({is:e=>"PartitionByNode"===e.kind,create:e=>freeze({kind:"PartitionByNode",items:freeze(e)}),cloneWithItems:(e,r)=>freeze({...e,items:freeze([...e.items,...r])})}),I=freeze({is:e=>"OverNode"===e.kind,create:()=>freeze({kind:"OverNode"}),cloneWithOrderByItem:(e,r)=>freeze({...e,orderBy:e.orderBy?E.cloneWithItem(e.orderBy,r):E.create(r)}),cloneWithPartitionByItems:(e,r)=>freeze({...e,partitionBy:e.partitionBy?q.cloneWithItems(e.partitionBy,r):q.create(r)})}),Q=freeze({is:e=>"FromNode"===e.kind,create:e=>freeze({kind:"FromNode",froms:freeze(e)}),cloneWithFroms:(e,r)=>freeze({...e,froms:freeze([...e.froms,...r])})}),R=freeze({is:e=>"GroupByNode"===e.kind,create:e=>freeze({kind:"GroupByNode",items:freeze(e)}),cloneWithItems:(e,r)=>freeze({...e,items:freeze([...e.items,...r])})}),T=freeze({is:e=>"HavingNode"===e.kind,create:e=>freeze({kind:"HavingNode",having:e}),cloneWithOperation:(e,r,t)=>freeze({...e,having:"And"===r?i.create(e.having,t):s.create(e.having,t)})}),v=freeze({is:e=>"SelectQueryNode"===e.kind,create:(e,r)=>freeze({kind:"SelectQueryNode",from:Q.create(e),...r&&{with:r}}),cloneWithSelections:(e,r)=>freeze({...e,selections:e.selections?freeze([...e.selections,...r]):freeze(r)}),cloneWithDistinctOn:(e,r)=>freeze({...e,distinctOn:e.distinctOn?freeze([...e.distinctOn,...r]):freeze(r)}),cloneWithFrontModifier:(e,r)=>freeze({...e,frontModifiers:e.frontModifiers?freeze([...e.frontModifiers,r]):freeze([r])}),cloneWithEndModifier:(e,r)=>freeze({...e,endModifiers:e.endModifiers?freeze([...e.endModifiers,r]):freeze([r])}),cloneWithOrderByItem:(e,r)=>freeze({...e,orderBy:e.orderBy?E.cloneWithItem(e.orderBy,r):E.create(r)}),cloneWithGroupByItems:(e,r)=>freeze({...e,groupBy:e.groupBy?R.cloneWithItems(e.groupBy,r):R.create(r)}),cloneWithLimit:(e,r)=>freeze({...e,limit:r}),cloneWithOffset:(e,r)=>freeze({...e,offset:r}),cloneWithHaving:(e,r)=>freeze({...e,having:e.having?T.cloneWithOperation(e.having,"And",r):T.create(r)}),cloneWithSetOperation:(e,r)=>freeze({...e,setOperations:e.setOperations?freeze([...e.setOperations,r]):freeze([r])}),cloneWithoutSelections:e=>freeze({...e,selections:[]}),cloneWithoutLimit:e=>freeze({...e,limit:void 0}),cloneWithoutOffset:e=>freeze({...e,offset:void 0}),cloneWithoutOrderBy:e=>freeze({...e,orderBy:void 0})});function preventAwait(e,r){Object.defineProperties(e.prototype,{then:{enumerable:!1,value:()=>{throw new Error(r)}}})}class JoinBuilder{#e;constructor(e){this.#e=freeze(e)}on(...e){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOn(this.#e.joinNode,parseFilter(e))})}onRef(e,r,t){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOn(this.#e.joinNode,parseReferentialComparison(e,r,t))})}onTrue(){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOn(this.#e.joinNode,B.createWithSql("true"))})}$call(e){return e(this)}toOperationNode(){return this.#e.joinNode}}preventAwait(JoinBuilder,"don't await JoinBuilder instances. They are never executed directly and are always just a part of a query.");const A=freeze({is:e=>"PartitionByItemNode"===e.kind,create:e=>freeze({kind:"PartitionByItemNode",partitionBy:e})});function parsePartitionBy(e){return parseReferenceExpressionOrList(e).map(A.create)}class OverBuilder{#e;constructor(e){this.#e=freeze(e)}orderBy(e,r){return new OverBuilder({overNode:I.cloneWithOrderByItem(this.#e.overNode,parseOrderBy(e,r))})}partitionBy(e){return new OverBuilder({overNode:I.cloneWithPartitionByItems(this.#e.overNode,parsePartitionBy(e))})}$call(e){return e(this)}toOperationNode(){return this.#e.overNode}}preventAwait(OverBuilder,"don't await OverBuilder instances. They are never executed directly and are always just a part of a query.");const F=freeze({is:e=>"SelectionNode"===e.kind,create:e=>freeze({kind:"SelectionNode",selection:e}),createSelectAll:()=>freeze({kind:"SelectionNode",selection:O.create()}),createSelectAllFromTable:e=>freeze({kind:"SelectionNode",selection:g.createSelectAll(e)})});class DynamicReferenceBuilder{#r;get dynamicReference(){return this.#r}get refType(){}constructor(e){this.#r=e}toOperationNode(){return parseSimpleReferenceExpression(this.#r)}}function parseSelectArg(e){return isFunction(e)?parseSelectArg(e(expressionBuilder())):isReadonlyArray(e)?e.map((e=>parseSelectExpression(e))):[parseSelectExpression(e)]}function parseSelectExpression(r){return isString(r)?F.create(function parseAliasedStringReference(r){const n=" as ";if(r.includes(n)){const[o,i]=r.split(n).map(trim$1);return t.create(parseStringReference(o),e.create(i))}return parseStringReference(r)}(r)):function isDynamicReferenceBuilder(e){return isObject(e)&&isOperationNodeSource(e)&&isString(e.dynamicReference)}(r)?F.create(r.toOperationNode()):F.create(parseAliasedExpression(r))}function parseSelectAll(e){return e?Array.isArray(e)?e.map(parseSelectAllArg):[parseSelectAllArg(e)]:[F.createSelectAll()]}function parseSelectAllArg(e){if(isString(e))return F.createSelectAllFromTable(parseTable(e));throw new Error(`invalid value selectAll expression: ${JSON.stringify(e)}`)}const D=freeze({is:e=>"ValuesNode"===e.kind,create:e=>freeze({kind:"ValuesNode",values:freeze(e)})}),J=freeze({is:e=>"DefaultInsertValueNode"===e.kind,create:()=>freeze({kind:"DefaultInsertValueNode"})});function parseInsertExpression(e){const r=isFunction(e)?e(expressionBuilder()):e;return function parseInsertColumnsAndValues(e){const r=function parseColumnNamesAndIndexes(e){const r=new Map;for(const t of e){const e=Object.keys(t);for(const n of e)r.has(n)||void 0===t[n]||r.set(n,r.size)}return r}(e);return[freeze([...r.keys()].map(w.create)),D.create(e.map((e=>function parseRowValues(e,r){const t=Object.keys(e),n=Array.from({length:r.size});let o=!1;for(const i of t){const t=r.get(i);if(isUndefined(t))continue;const s=e[i];(isUndefined(s)||isExpressionOrFactory(s))&&(o=!0),n[t]=s}const i=t.length<r.size;if(i||o){const e=J.create();return C.create(n.map((r=>isUndefined(r)?e:parseValueExpression(r))))}return z.create(n)}(e,r))))]}(isReadonlyArray(r)?r:freeze([r]))}const L=freeze({is:e=>"InsertQueryNode"===e.kind,create:(e,r,t)=>freeze({kind:"InsertQueryNode",into:e,...r&&{with:r},replace:t}),cloneWith:(e,r)=>freeze({...e,...r})}),U=freeze({is:e=>"UpdateQueryNode"===e.kind,create:(e,r)=>freeze({kind:"UpdateQueryNode",table:e,...r&&{with:r}}),cloneWithFromItems:(e,r)=>freeze({...e,from:e.from?Q.cloneWithFroms(e.from,r):Q.create(r)}),cloneWithUpdates:(e,r)=>freeze({...e,updates:e.updates?freeze([...e.updates,...r]):r})}),P=freeze({is:e=>"UsingNode"===e.kind,create:e=>freeze({kind:"UsingNode",tables:freeze(e)}),cloneWithTables:(e,r)=>freeze({...e,tables:freeze([...e.tables,...r])})}),V=freeze({is:e=>"DeleteQueryNode"===e.kind,create:(e,r)=>freeze({kind:"DeleteQueryNode",from:Q.create(e),...r&&{with:r}}),cloneWithOrderByItem:(e,r)=>freeze({...e,orderBy:e.orderBy?E.cloneWithItem(e.orderBy,r):E.create(r)}),cloneWithLimit:(e,r)=>freeze({...e,limit:r}),cloneWithUsing:(e,r)=>freeze({...e,using:void 0!==e.using?P.cloneWithTables(e.using,r):P.create(r)})}),j=freeze({is:e=>"WhereNode"===e.kind,create:e=>freeze({kind:"WhereNode",where:e}),cloneWithOperation:(e,r,t)=>freeze({...e,where:"And"===r?i.create(e.where,t):s.create(e.where,t)})}),$=freeze({is:e=>"ReturningNode"===e.kind,create:e=>freeze({kind:"ReturningNode",selections:freeze(e)}),cloneWithSelections:(e,r)=>freeze({...e,selections:e.selections?freeze([...e.selections,...r]):freeze(r)})}),M=freeze({is:e=>"ExplainNode"===e.kind,create:(e,r)=>freeze({kind:"ExplainNode",format:e,options:r})}),K=freeze({is:e=>v.is(e)||L.is(e)||U.is(e)||V.is(e),cloneWithWhere:(e,r)=>freeze({...e,where:e.where?j.cloneWithOperation(e.where,"And",r):j.create(r)}),cloneWithJoin:(e,r)=>freeze({...e,joins:e.joins?freeze([...e.joins,r]):freeze([r])}),cloneWithReturning:(e,r)=>freeze({...e,returning:e.returning?$.cloneWithSelections(e.returning,r):$.create(r)}),cloneWithoutWhere:e=>freeze({...e,where:void 0}),cloneWithExplain:(e,r,t)=>freeze({...e,explain:M.create(r,t?.toOperationNode())})}),G=freeze({is:e=>"ColumnUpdateNode"===e.kind,create:(e,r)=>freeze({kind:"ColumnUpdateNode",column:e,value:r})});function parseUpdateExpression(e){const r=isFunction(e)?e(expressionBuilder()):e;return Object.entries(r).filter((([e,r])=>void 0!==r)).map((([e,r])=>G.create(w.create(e),parseValueExpression(r))))}const H=freeze({is:e=>"OnDuplicateKeyNode"===e.kind,create:e=>freeze({kind:"OnDuplicateKeyNode",updates:e})});class InsertResult{insertId;numInsertedOrUpdatedRows;constructor(e,r){this.insertId=e,this.numInsertedOrUpdatedRows=r}}class NoResultError extends Error{node;constructor(e){super("no result"),this.node=e}}function isNoResultErrorConstructor(e){return Object.prototype.hasOwnProperty.call(e,"prototype")}const X=freeze({is:e=>"OnConflictNode"===e.kind,create:()=>freeze({kind:"OnConflictNode"}),cloneWith:(e,r)=>freeze({...e,...r}),cloneWithIndexWhere:(e,r)=>freeze({...e,indexWhere:e.indexWhere?j.cloneWithOperation(e.indexWhere,"And",r):j.create(r)}),cloneWithIndexOrWhere:(e,r)=>freeze({...e,indexWhere:e.indexWhere?j.cloneWithOperation(e.indexWhere,"Or",r):j.create(r)}),cloneWithUpdateWhere:(e,r)=>freeze({...e,updateWhere:e.updateWhere?j.cloneWithOperation(e.updateWhere,"And",r):j.create(r)}),cloneWithUpdateOrWhere:(e,r)=>freeze({...e,updateWhere:e.updateWhere?j.cloneWithOperation(e.updateWhere,"Or",r):j.create(r)}),cloneWithoutIndexWhere:e=>freeze({...e,indexWhere:void 0}),cloneWithoutUpdateWhere:e=>freeze({...e,updateWhere:void 0})});class OnConflictBuilder{#e;constructor(e){this.#e=freeze(e)}column(e){const r=w.create(e);return new OnConflictBuilder({...this.#e,onConflictNode:X.cloneWith(this.#e.onConflictNode,{columns:this.#e.onConflictNode.columns?freeze([...this.#e.onConflictNode.columns,r]):freeze([r])})})}columns(e){const r=e.map(w.create);return new OnConflictBuilder({...this.#e,onConflictNode:X.cloneWith(this.#e.onConflictNode,{columns:this.#e.onConflictNode.columns?freeze([...this.#e.onConflictNode.columns,...r]):freeze(r)})})}constraint(r){return new OnConflictBuilder({...this.#e,onConflictNode:X.cloneWith(this.#e.onConflictNode,{constraint:e.create(r)})})}expression(e){return new OnConflictBuilder({...this.#e,onConflictNode:X.cloneWith(this.#e.onConflictNode,{indexExpression:e.toOperationNode()})})}where(...e){return new OnConflictBuilder({...this.#e,onConflictNode:X.cloneWithIndexWhere(this.#e.onConflictNode,parseFilter(e))})}whereRef(e,r,t){return new OnConflictBuilder({...this.#e,onConflictNode:X.cloneWithIndexWhere(this.#e.onConflictNode,parseReferentialComparison(e,r,t))})}clearWhere(){return new OnConflictBuilder({...this.#e,onConflictNode:X.cloneWithoutIndexWhere(this.#e.onConflictNode)})}doNothing(){return new OnConflictDoNothingBuilder({...this.#e,onConflictNode:X.cloneWith(this.#e.onConflictNode,{doNothing:!0})})}doUpdateSet(e){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:X.cloneWith(this.#e.onConflictNode,{updates:parseUpdateExpression(e)})})}$call(e){return e(this)}}preventAwait(OnConflictBuilder,"don't await OnConflictBuilder instances.");class OnConflictDoNothingBuilder{#e;constructor(e){this.#e=freeze(e)}toOperationNode(){return this.#e.onConflictNode}}preventAwait(OnConflictDoNothingBuilder,"don't await OnConflictDoNothingBuilder instances.");class OnConflictUpdateBuilder{#e;constructor(e){this.#e=freeze(e)}where(...e){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:X.cloneWithUpdateWhere(this.#e.onConflictNode,parseFilter(e))})}whereRef(e,r,t){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:X.cloneWithUpdateWhere(this.#e.onConflictNode,parseReferentialComparison(e,r,t))})}clearWhere(){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:X.cloneWithoutUpdateWhere(this.#e.onConflictNode)})}$call(e){return e(this)}toOperationNode(){return this.#e.onConflictNode}}preventAwait(OnConflictUpdateBuilder,"don't await OnConflictUpdateBuilder instances.");class InsertQueryBuilder{#e;constructor(e){this.#e=freeze(e)}values(e){const[r,t]=parseInsertExpression(e);return new InsertQueryBuilder({...this.#e,queryNode:L.cloneWith(this.#e.queryNode,{columns:r,values:t})})}columns(e){return new InsertQueryBuilder({...this.#e,queryNode:L.cloneWith(this.#e.queryNode,{columns:freeze(e.map(w.create))})})}expression(e){return new InsertQueryBuilder({...this.#e,queryNode:L.cloneWith(this.#e.queryNode,{values:parseExpression(e)})})}ignore(){return new InsertQueryBuilder({...this.#e,queryNode:L.cloneWith(this.#e.queryNode,{ignore:!0})})}onConflict(e){return new InsertQueryBuilder({...this.#e,queryNode:L.cloneWith(this.#e.queryNode,{onConflict:e(new OnConflictBuilder({onConflictNode:X.create()})).toOperationNode()})})}onDuplicateKeyUpdate(e){return new InsertQueryBuilder({...this.#e,queryNode:L.cloneWith(this.#e.queryNode,{onDuplicateKey:H.create(parseUpdateExpression(e))})})}returning(e){return new InsertQueryBuilder({...this.#e,queryNode:K.cloneWithReturning(this.#e.queryNode,parseSelectArg(e))})}returningAll(){return new InsertQueryBuilder({...this.#e,queryNode:K.cloneWithReturning(this.#e.queryNode,parseSelectAll())})}$call(e){return e(this)}$if(e,r){return e?r(this):new InsertQueryBuilder({...this.#e})}$castTo(){return new InsertQueryBuilder(this.#e)}$narrowType(){return new InsertQueryBuilder(this.#e)}$assertType(){return new InsertQueryBuilder(this.#e)}withPlugin(e){return new InsertQueryBuilder({...this.#e,executor:this.#e.executor.withPlugin(e)})}toOperationNode(){return this.#e.executor.transformQuery(this.#e.queryNode,this.#e.queryId)}compile(){return this.#e.executor.compileQuery(this.toOperationNode(),this.#e.queryId)}async execute(){const e=this.compile(),r=e.query,t=await this.#e.executor.executeQuery(e,this.#e.queryId);return this.#e.executor.adapter.supportsReturning&&r.returning?t.rows:[new InsertResult(t.insertId,t.numAffectedRows??t.numUpdatedOrDeletedRows)]}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#e.executor.stream(r,e,this.#e.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new InsertQueryBuilder({...this.#e,queryNode:K.cloneWithExplain(this.#e.queryNode,e,r)});return await t.execute()}}preventAwait(InsertQueryBuilder,"don't await InsertQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");class DeleteResult{numDeletedRows;constructor(e){this.numDeletedRows=e}}const Y=freeze({is:e=>"LimitNode"===e.kind,create:e=>freeze({kind:"LimitNode",limit:k.create(e)})});class DeleteQueryBuilder{#e;constructor(e){this.#e=freeze(e)}where(...e){return new DeleteQueryBuilder({...this.#e,queryNode:K.cloneWithWhere(this.#e.queryNode,parseFilter(e))})}whereRef(e,r,t){return new DeleteQueryBuilder({...this.#e,queryNode:K.cloneWithWhere(this.#e.queryNode,parseReferentialComparison(e,r,t))})}clearWhere(){return new DeleteQueryBuilder({...this.#e,queryNode:K.cloneWithoutWhere(this.#e.queryNode)})}using(e){return new DeleteQueryBuilder({...this.#e,queryNode:V.cloneWithUsing(this.#e.queryNode,parseTableExpressionOrList(e))})}innerJoin(...e){return new DeleteQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("InnerJoin",e))})}leftJoin(...e){return new DeleteQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("LeftJoin",e))})}rightJoin(...e){return new DeleteQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("RightJoin",e))})}fullJoin(...e){return new DeleteQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("FullJoin",e))})}returning(e){return new DeleteQueryBuilder({...this.#e,queryNode:K.cloneWithReturning(this.#e.queryNode,parseSelectArg(e))})}returningAll(e){return new DeleteQueryBuilder({...this.#e,queryNode:K.cloneWithReturning(this.#e.queryNode,parseSelectAll(e))})}orderBy(e,r){return new DeleteQueryBuilder({...this.#e,queryNode:V.cloneWithOrderByItem(this.#e.queryNode,parseOrderBy(e,r))})}limit(e){return new DeleteQueryBuilder({...this.#e,queryNode:V.cloneWithLimit(this.#e.queryNode,Y.create(e))})}$call(e){return e(this)}$if(e,r){return e?r(this):new DeleteQueryBuilder({...this.#e})}$castTo(){return new DeleteQueryBuilder(this.#e)}$narrowType(){return new DeleteQueryBuilder(this.#e)}$assertType(){return new DeleteQueryBuilder(this.#e)}withPlugin(e){return new DeleteQueryBuilder({...this.#e,executor:this.#e.executor.withPlugin(e)})}toOperationNode(){return this.#e.executor.transformQuery(this.#e.queryNode,this.#e.queryId)}compile(){return this.#e.executor.compileQuery(this.toOperationNode(),this.#e.queryId)}async execute(){const e=this.compile(),r=e.query,t=await this.#e.executor.executeQuery(e,this.#e.queryId);return this.#e.executor.adapter.supportsReturning&&r.returning?t.rows:[new DeleteResult(t.numAffectedRows??t.numUpdatedOrDeletedRows??BigInt(0))]}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#e.executor.stream(r,e,this.#e.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new DeleteQueryBuilder({...this.#e,queryNode:K.cloneWithExplain(this.#e.queryNode,e,r)});return await t.execute()}}preventAwait(DeleteQueryBuilder,"don't await DeleteQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");class UpdateResult{numUpdatedRows;numChangedRows;constructor(e,r){this.numUpdatedRows=e,this.numChangedRows=r}}class UpdateQueryBuilder{#e;constructor(e){this.#e=freeze(e)}where(...e){return new UpdateQueryBuilder({...this.#e,queryNode:K.cloneWithWhere(this.#e.queryNode,parseFilter(e))})}whereRef(e,r,t){return new UpdateQueryBuilder({...this.#e,queryNode:K.cloneWithWhere(this.#e.queryNode,parseReferentialComparison(e,r,t))})}clearWhere(){return new UpdateQueryBuilder({...this.#e,queryNode:K.cloneWithoutWhere(this.#e.queryNode)})}from(e){return new UpdateQueryBuilder({...this.#e,queryNode:U.cloneWithFromItems(this.#e.queryNode,parseTableExpressionOrList(e))})}innerJoin(...e){return new UpdateQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("InnerJoin",e))})}leftJoin(...e){return new UpdateQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("LeftJoin",e))})}rightJoin(...e){return new UpdateQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("RightJoin",e))})}fullJoin(...e){return new UpdateQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("FullJoin",e))})}set(e){return new UpdateQueryBuilder({...this.#e,queryNode:U.cloneWithUpdates(this.#e.queryNode,parseUpdateExpression(e))})}returning(e){return new UpdateQueryBuilder({...this.#e,queryNode:K.cloneWithReturning(this.#e.queryNode,parseSelectArg(e))})}returningAll(){return new UpdateQueryBuilder({...this.#e,queryNode:K.cloneWithReturning(this.#e.queryNode,parseSelectAll())})}$call(e){return e(this)}$if(e,r){return e?r(this):new UpdateQueryBuilder({...this.#e})}$castTo(){return new UpdateQueryBuilder(this.#e)}$narrowType(){return new UpdateQueryBuilder(this.#e)}$assertType(){return new UpdateQueryBuilder(this.#e)}withPlugin(e){return new UpdateQueryBuilder({...this.#e,executor:this.#e.executor.withPlugin(e)})}toOperationNode(){return this.#e.executor.transformQuery(this.#e.queryNode,this.#e.queryId)}compile(){return this.#e.executor.compileQuery(this.toOperationNode(),this.#e.queryId)}async execute(){const e=this.compile(),r=e.query,t=await this.#e.executor.executeQuery(e,this.#e.queryId);return this.#e.executor.adapter.supportsReturning&&r.returning?t.rows:[new UpdateResult(t.numAffectedRows??t.numUpdatedOrDeletedRows??BigInt(0),t.numChangedRows)]}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#e.executor.stream(r,e,this.#e.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new UpdateQueryBuilder({...this.#e,queryNode:K.cloneWithExplain(this.#e.queryNode,e,r)});return await t.execute()}}preventAwait(UpdateQueryBuilder,"don't await UpdateQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");const Z=freeze({is:e=>"CommonTableExpressionNode"===e.kind,create:(e,r)=>freeze({kind:"CommonTableExpressionNode",name:e,expression:r})}),_=freeze({is:e=>"CommonTableExpressionNameNode"===e.kind,create:(e,r)=>freeze({kind:"CommonTableExpressionNameNode",table:n.create(e),columns:r?freeze(r.map(w.create)):void 0})});function parseCommonTableExpression(e,r){const t=r(function createQueryCreator(){return new QueryCreator({executor:ie})}());return Z.create(function parseCommonTableExpressionName(e){if(e.includes("(")){const r=e.split(/[\(\)]/),t=r[0],n=r[1].split(",").map((e=>e.trim()));return _.create(t,n)}return _.create(e)}(e),t.toOperationNode())}const ee=freeze({is:e=>"WithNode"===e.kind,create:(e,r)=>freeze({kind:"WithNode",expressions:freeze([e]),...r}),cloneWithExpression:(e,r)=>freeze({...e,expressions:freeze([...e.expressions,r])})}),re=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9"];function createQueryId(){return new LazyQueryId}class LazyQueryId{#t;get queryId(){return void 0===this.#t&&(this.#t=function randomString(e){let r="";for(let t=0;t<e;++t)r+=re[~~(Math.random()*re.length)];return r}(8)),this.#t}}class OperationNodeTransformer{nodeStack=[];#n=freeze({AliasNode:this.transformAlias.bind(this),ColumnNode:this.transformColumn.bind(this),IdentifierNode:this.transformIdentifier.bind(this),SchemableIdentifierNode:this.transformSchemableIdentifier.bind(this),RawNode:this.transformRaw.bind(this),ReferenceNode:this.transformReference.bind(this),SelectQueryNode:this.transformSelectQuery.bind(this),SelectionNode:this.transformSelection.bind(this),TableNode:this.transformTable.bind(this),FromNode:this.transformFrom.bind(this),SelectAllNode:this.transformSelectAll.bind(this),AndNode:this.transformAnd.bind(this),OrNode:this.transformOr.bind(this),ValueNode:this.transformValue.bind(this),ValueListNode:this.transformValueList.bind(this),PrimitiveValueListNode:this.transformPrimitiveValueList.bind(this),ParensNode:this.transformParens.bind(this),JoinNode:this.transformJoin.bind(this),OperatorNode:this.transformOperator.bind(this),WhereNode:this.transformWhere.bind(this),InsertQueryNode:this.transformInsertQuery.bind(this),DeleteQueryNode:this.transformDeleteQuery.bind(this),ReturningNode:this.transformReturning.bind(this),CreateTableNode:this.transformCreateTable.bind(this),AddColumnNode:this.transformAddColumn.bind(this),ColumnDefinitionNode:this.transformColumnDefinition.bind(this),DropTableNode:this.transformDropTable.bind(this),DataTypeNode:this.transformDataType.bind(this),OrderByNode:this.transformOrderBy.bind(this),OrderByItemNode:this.transformOrderByItem.bind(this),GroupByNode:this.transformGroupBy.bind(this),GroupByItemNode:this.transformGroupByItem.bind(this),UpdateQueryNode:this.transformUpdateQuery.bind(this),ColumnUpdateNode:this.transformColumnUpdate.bind(this),LimitNode:this.transformLimit.bind(this),OffsetNode:this.transformOffset.bind(this),OnConflictNode:this.transformOnConflict.bind(this),OnDuplicateKeyNode:this.transformOnDuplicateKey.bind(this),CreateIndexNode:this.transformCreateIndex.bind(this),DropIndexNode:this.transformDropIndex.bind(this),ListNode:this.transformList.bind(this),PrimaryKeyConstraintNode:this.transformPrimaryKeyConstraint.bind(this),UniqueConstraintNode:this.transformUniqueConstraint.bind(this),ReferencesNode:this.transformReferences.bind(this),CheckConstraintNode:this.transformCheckConstraint.bind(this),WithNode:this.transformWith.bind(this),CommonTableExpressionNode:this.transformCommonTableExpression.bind(this),CommonTableExpressionNameNode:this.transformCommonTableExpressionName.bind(this),HavingNode:this.transformHaving.bind(this),CreateSchemaNode:this.transformCreateSchema.bind(this),DropSchemaNode:this.transformDropSchema.bind(this),AlterTableNode:this.transformAlterTable.bind(this),DropColumnNode:this.transformDropColumn.bind(this),RenameColumnNode:this.transformRenameColumn.bind(this),AlterColumnNode:this.transformAlterColumn.bind(this),ModifyColumnNode:this.transformModifyColumn.bind(this),AddConstraintNode:this.transformAddConstraint.bind(this),DropConstraintNode:this.transformDropConstraint.bind(this),ForeignKeyConstraintNode:this.transformForeignKeyConstraint.bind(this),CreateViewNode:this.transformCreateView.bind(this),DropViewNode:this.transformDropView.bind(this),GeneratedNode:this.transformGenerated.bind(this),DefaultValueNode:this.transformDefaultValue.bind(this),OnNode:this.transformOn.bind(this),ValuesNode:this.transformValues.bind(this),SelectModifierNode:this.transformSelectModifier.bind(this),CreateTypeNode:this.transformCreateType.bind(this),DropTypeNode:this.transformDropType.bind(this),ExplainNode:this.transformExplain.bind(this),DefaultInsertValueNode:this.transformDefaultInsertValue.bind(this),AggregateFunctionNode:this.transformAggregateFunction.bind(this),OverNode:this.transformOver.bind(this),PartitionByNode:this.transformPartitionBy.bind(this),PartitionByItemNode:this.transformPartitionByItem.bind(this),SetOperationNode:this.transformSetOperation.bind(this),BinaryOperationNode:this.transformBinaryOperation.bind(this),UnaryOperationNode:this.transformUnaryOperation.bind(this),UsingNode:this.transformUsing.bind(this),FunctionNode:this.transformFunction.bind(this),CaseNode:this.transformCase.bind(this),WhenNode:this.transformWhen.bind(this),JSONReferenceNode:this.transformJSONReference.bind(this),JSONPathNode:this.transformJSONPath.bind(this),JSONPathLegNode:this.transformJSONPathLeg.bind(this),JSONOperatorChainNode:this.transformJSONOperatorChain.bind(this)});transformNode(e){if(!e)return e;this.nodeStack.push(e);const r=this.transformNodeImpl(e);return this.nodeStack.pop(),freeze(r)}transformNodeImpl(e){return this.#n[e.kind](e)}transformNodeList(e){return e?freeze(e.map((e=>this.transformNode(e)))):e}transformSelectQuery(e){return{kind:"SelectQueryNode",from:this.transformNode(e.from),selections:this.transformNodeList(e.selections),distinctOn:this.transformNodeList(e.distinctOn),joins:this.transformNodeList(e.joins),groupBy:this.transformNode(e.groupBy),orderBy:this.transformNode(e.orderBy),where:this.transformNode(e.where),frontModifiers:this.transformNodeList(e.frontModifiers),endModifiers:this.transformNodeList(e.endModifiers),limit:this.transformNode(e.limit),offset:this.transformNode(e.offset),with:this.transformNode(e.with),having:this.transformNode(e.having),explain:this.transformNode(e.explain),setOperations:this.transformNodeList(e.setOperations)}}transformSelection(e){return{kind:"SelectionNode",selection:this.transformNode(e.selection)}}transformColumn(e){return{kind:"ColumnNode",column:this.transformNode(e.column)}}transformAlias(e){return{kind:"AliasNode",node:this.transformNode(e.node),alias:this.transformNode(e.alias)}}transformTable(e){return{kind:"TableNode",table:this.transformNode(e.table)}}transformFrom(e){return{kind:"FromNode",froms:this.transformNodeList(e.froms)}}transformReference(e){return{kind:"ReferenceNode",column:this.transformNode(e.column),table:this.transformNode(e.table)}}transformAnd(e){return{kind:"AndNode",left:this.transformNode(e.left),right:this.transformNode(e.right)}}transformOr(e){return{kind:"OrNode",left:this.transformNode(e.left),right:this.transformNode(e.right)}}transformValueList(e){return{kind:"ValueListNode",values:this.transformNodeList(e.values)}}transformParens(e){return{kind:"ParensNode",node:this.transformNode(e.node)}}transformJoin(e){return{kind:"JoinNode",joinType:e.joinType,table:this.transformNode(e.table),on:this.transformNode(e.on)}}transformRaw(e){return{kind:"RawNode",sqlFragments:freeze([...e.sqlFragments]),parameters:this.transformNodeList(e.parameters)}}transformWhere(e){return{kind:"WhereNode",where:this.transformNode(e.where)}}transformInsertQuery(e){return{kind:"InsertQueryNode",into:this.transformNode(e.into),columns:this.transformNodeList(e.columns),values:this.transformNode(e.values),returning:this.transformNode(e.returning),onConflict:this.transformNode(e.onConflict),onDuplicateKey:this.transformNode(e.onDuplicateKey),with:this.transformNode(e.with),ignore:e.ignore,replace:e.replace,explain:this.transformNode(e.explain)}}transformValues(e){return{kind:"ValuesNode",values:this.transformNodeList(e.values)}}transformDeleteQuery(e){return{kind:"DeleteQueryNode",from:this.transformNode(e.from),using:this.transformNode(e.using),joins:this.transformNodeList(e.joins),where:this.transformNode(e.where),returning:this.transformNode(e.returning),with:this.transformNode(e.with),orderBy:this.transformNode(e.orderBy),limit:this.transformNode(e.limit),explain:this.transformNode(e.explain)}}transformReturning(e){return{kind:"ReturningNode",selections:this.transformNodeList(e.selections)}}transformCreateTable(e){return{kind:"CreateTableNode",table:this.transformNode(e.table),columns:this.transformNodeList(e.columns),constraints:this.transformNodeList(e.constraints),temporary:e.temporary,ifNotExists:e.ifNotExists,onCommit:e.onCommit,frontModifiers:this.transformNodeList(e.frontModifiers),endModifiers:this.transformNodeList(e.endModifiers)}}transformColumnDefinition(e){return{kind:"ColumnDefinitionNode",column:this.transformNode(e.column),dataType:this.transformNode(e.dataType),references:this.transformNode(e.references),primaryKey:e.primaryKey,autoIncrement:e.autoIncrement,unique:e.unique,notNull:e.notNull,unsigned:e.unsigned,defaultTo:this.transformNode(e.defaultTo),check:this.transformNode(e.check),generated:this.transformNode(e.generated),frontModifiers:this.transformNodeList(e.frontModifiers),endModifiers:this.transformNodeList(e.endModifiers)}}transformAddColumn(e){return{kind:"AddColumnNode",column:this.transformNode(e.column)}}transformDropTable(e){return{kind:"DropTableNode",table:this.transformNode(e.table),ifExists:e.ifExists,cascade:e.cascade}}transformOrderBy(e){return{kind:"OrderByNode",items:this.transformNodeList(e.items)}}transformOrderByItem(e){return{kind:"OrderByItemNode",orderBy:this.transformNode(e.orderBy),direction:this.transformNode(e.direction)}}transformGroupBy(e){return{kind:"GroupByNode",items:this.transformNodeList(e.items)}}transformGroupByItem(e){return{kind:"GroupByItemNode",groupBy:this.transformNode(e.groupBy)}}transformUpdateQuery(e){return{kind:"UpdateQueryNode",table:this.transformNode(e.table),from:this.transformNode(e.from),joins:this.transformNodeList(e.joins),where:this.transformNode(e.where),updates:this.transformNodeList(e.updates),returning:this.transformNode(e.returning),with:this.transformNode(e.with),explain:this.transformNode(e.explain)}}transformColumnUpdate(e){return{kind:"ColumnUpdateNode",column:this.transformNode(e.column),value:this.transformNode(e.value)}}transformLimit(e){return{kind:"LimitNode",limit:this.transformNode(e.limit)}}transformOffset(e){return{kind:"OffsetNode",offset:this.transformNode(e.offset)}}transformOnConflict(e){return{kind:"OnConflictNode",columns:this.transformNodeList(e.columns),constraint:this.transformNode(e.constraint),indexExpression:this.transformNode(e.indexExpression),indexWhere:this.transformNode(e.indexWhere),updates:this.transformNodeList(e.updates),updateWhere:this.transformNode(e.updateWhere),doNothing:e.doNothing}}transformOnDuplicateKey(e){return{kind:"OnDuplicateKeyNode",updates:this.transformNodeList(e.updates)}}transformCreateIndex(e){return{kind:"CreateIndexNode",name:this.transformNode(e.name),table:this.transformNode(e.table),columns:this.transformNodeList(e.columns),unique:e.unique,using:this.transformNode(e.using),ifNotExists:e.ifNotExists,where:this.transformNode(e.where)}}transformList(e){return{kind:"ListNode",items:this.transformNodeList(e.items)}}transformDropIndex(e){return{kind:"DropIndexNode",name:this.transformNode(e.name),table:this.transformNode(e.table),ifExists:e.ifExists,cascade:e.cascade}}transformPrimaryKeyConstraint(e){return{kind:"PrimaryKeyConstraintNode",columns:this.transformNodeList(e.columns),name:this.transformNode(e.name)}}transformUniqueConstraint(e){return{kind:"UniqueConstraintNode",columns:this.transformNodeList(e.columns),name:this.transformNode(e.name)}}transformForeignKeyConstraint(e){return{kind:"ForeignKeyConstraintNode",columns:this.transformNodeList(e.columns),references:this.transformNode(e.references),name:this.transformNode(e.name),onDelete:e.onDelete,onUpdate:e.onUpdate}}transformSetOperation(e){return{kind:"SetOperationNode",operator:e.operator,expression:this.transformNode(e.expression),all:e.all}}transformReferences(e){return{kind:"ReferencesNode",table:this.transformNode(e.table),columns:this.transformNodeList(e.columns),onDelete:e.onDelete,onUpdate:e.onUpdate}}transformCheckConstraint(e){return{kind:"CheckConstraintNode",expression:this.transformNode(e.expression),name:this.transformNode(e.name)}}transformWith(e){return{kind:"WithNode",expressions:this.transformNodeList(e.expressions),recursive:e.recursive}}transformCommonTableExpression(e){return{kind:"CommonTableExpressionNode",name:this.transformNode(e.name),expression:this.transformNode(e.expression)}}transformCommonTableExpressionName(e){return{kind:"CommonTableExpressionNameNode",table:this.transformNode(e.table),columns:this.transformNodeList(e.columns)}}transformHaving(e){return{kind:"HavingNode",having:this.transformNode(e.having)}}transformCreateSchema(e){return{kind:"CreateSchemaNode",schema:this.transformNode(e.schema),ifNotExists:e.ifNotExists}}transformDropSchema(e){return{kind:"DropSchemaNode",schema:this.transformNode(e.schema),ifExists:e.ifExists,cascade:e.cascade}}transformAlterTable(e){return{kind:"AlterTableNode",table:this.transformNode(e.table),renameTo:this.transformNode(e.renameTo),setSchema:this.transformNode(e.setSchema),columnAlterations:this.transformNodeList(e.columnAlterations),addConstraint:this.transformNode(e.addConstraint),dropConstraint:this.transformNode(e.dropConstraint)}}transformDropColumn(e){return{kind:"DropColumnNode",column:this.transformNode(e.column)}}transformRenameColumn(e){return{kind:"RenameColumnNode",column:this.transformNode(e.column),renameTo:this.transformNode(e.renameTo)}}transformAlterColumn(e){return{kind:"AlterColumnNode",column:this.transformNode(e.column),dataType:this.transformNode(e.dataType),dataTypeExpression:this.transformNode(e.dataTypeExpression),setDefault:this.transformNode(e.setDefault),dropDefault:e.dropDefault,setNotNull:e.setNotNull,dropNotNull:e.dropNotNull}}transformModifyColumn(e){return{kind:"ModifyColumnNode",column:this.transformNode(e.column)}}transformAddConstraint(e){return{kind:"AddConstraintNode",constraint:this.transformNode(e.constraint)}}transformDropConstraint(e){return{kind:"DropConstraintNode",constraintName:this.transformNode(e.constraintName),ifExists:e.ifExists,modifier:e.modifier}}transformCreateView(e){return{kind:"CreateViewNode",name:this.transformNode(e.name),temporary:e.temporary,orReplace:e.orReplace,ifNotExists:e.ifNotExists,materialized:e.materialized,columns:this.transformNodeList(e.columns),as:this.transformNode(e.as)}}transformDropView(e){return{kind:"DropViewNode",name:this.transformNode(e.name),ifExists:e.ifExists,materialized:e.materialized,cascade:e.cascade}}transformGenerated(e){return{kind:"GeneratedNode",byDefault:e.byDefault,always:e.always,identity:e.identity,stored:e.stored,expression:this.transformNode(e.expression)}}transformDefaultValue(e){return{kind:"DefaultValueNode",defaultValue:this.transformNode(e.defaultValue)}}transformOn(e){return{kind:"OnNode",on:this.transformNode(e.on)}}transformSelectModifier(e){return{kind:"SelectModifierNode",modifier:e.modifier,rawModifier:this.transformNode(e.rawModifier)}}transformCreateType(e){return{kind:"CreateTypeNode",name:this.transformNode(e.name),enum:this.transformNode(e.enum)}}transformDropType(e){return{kind:"DropTypeNode",name:this.transformNode(e.name),ifExists:e.ifExists}}transformExplain(e){return{kind:"ExplainNode",format:e.format,options:this.transformNode(e.options)}}transformSchemableIdentifier(e){return{kind:"SchemableIdentifierNode",schema:this.transformNode(e.schema),identifier:this.transformNode(e.identifier)}}transformAggregateFunction(e){return{kind:"AggregateFunctionNode",aggregated:this.transformNodeList(e.aggregated),distinct:e.distinct,filter:this.transformNode(e.filter),func:e.func,over:this.transformNode(e.over)}}transformOver(e){return{kind:"OverNode",orderBy:this.transformNode(e.orderBy),partitionBy:this.transformNode(e.partitionBy)}}transformPartitionBy(e){return{kind:"PartitionByNode",items:this.transformNodeList(e.items)}}transformPartitionByItem(e){return{kind:"PartitionByItemNode",partitionBy:this.transformNode(e.partitionBy)}}transformBinaryOperation(e){return{kind:"BinaryOperationNode",leftOperand:this.transformNode(e.leftOperand),operator:this.transformNode(e.operator),rightOperand:this.transformNode(e.rightOperand)}}transformUnaryOperation(e){return{kind:"UnaryOperationNode",operator:this.transformNode(e.operator),operand:this.transformNode(e.operand)}}transformUsing(e){return{kind:"UsingNode",tables:this.transformNodeList(e.tables)}}transformFunction(e){return{kind:"FunctionNode",func:e.func,arguments:this.transformNodeList(e.arguments)}}transformCase(e){return{kind:"CaseNode",value:this.transformNode(e.value),when:this.transformNodeList(e.when),else:this.transformNode(e.else),isStatement:e.isStatement}}transformWhen(e){return{kind:"WhenNode",condition:this.transformNode(e.condition),result:this.transformNode(e.result)}}transformJSONReference(e){return{kind:"JSONReferenceNode",reference:this.transformNode(e.reference),traversal:this.transformNode(e.traversal)}}transformJSONPath(e){return{kind:"JSONPathNode",inOperator:this.transformNode(e.inOperator),pathLegs:this.transformNodeList(e.pathLegs)}}transformJSONPathLeg(e){return{kind:"JSONPathLegNode",type:e.type,value:e.value}}transformJSONOperatorChain(e){return{kind:"JSONOperatorChainNode",operator:this.transformNode(e.operator),values:this.transformNodeList(e.values)}}transformDataType(e){return e}transformSelectAll(e){return e}transformIdentifier(e){return e}transformValue(e){return e}transformPrimitiveValueList(e){return e}transformOperator(e){return e}transformDefaultInsertValue(e){return e}}const te=freeze({AlterTableNode:!0,CreateIndexNode:!0,CreateSchemaNode:!0,CreateTableNode:!0,CreateTypeNode:!0,CreateViewNode:!0,DeleteQueryNode:!0,DropIndexNode:!0,DropSchemaNode:!0,DropTableNode:!0,DropTypeNode:!0,DropViewNode:!0,InsertQueryNode:!0,RawNode:!0,SelectQueryNode:!0,UpdateQueryNode:!0});class WithSchemaTransformer extends OperationNodeTransformer{#o;#i=new Set;#s=new Set;constructor(e){super(),this.#o=e}transformNodeImpl(e){if(!this.#a(e))return super.transformNodeImpl(e);const r=this.#d(e);for(const e of r)this.#s.add(e);const t=this.#u(e);for(const e of t)this.#i.add(e);const n=super.transformNodeImpl(e);for(const e of t)this.#i.delete(e);for(const e of r)this.#s.delete(e);return n}transformSchemableIdentifier(r){const t=super.transformSchemableIdentifier(r);return t.schema||!this.#i.has(r.identifier.name)?t:{...t,schema:e.create(this.#o)}}transformReferences(e){const r=super.transformReferences(e);return r.table.table.schema?r:{...r,table:n.createWithSchema(this.#o,r.table.table.identifier.name)}}#a(e){return e.kind in te}#u(e){const t=new Set;if("name"in e&&e.name&&r.is(e.name)&&this.#p(e.name,t),"from"in e&&e.from)for(const r of e.from.froms)this.#c(r,t);if("into"in e&&e.into&&this.#c(e.into,t),"table"in e&&e.table&&this.#c(e.table,t),"joins"in e&&e.joins)for(const r of e.joins)this.#c(r.table,t);return t}#d(e){const r=new Set;return"with"in e&&e.with&&this.#l(e.with,r),r}#c(e,r){const o=n.is(e)?e:t.is(e)&&n.is(e.node)?e.node:null;o&&this.#p(o.table,r)}#p(e,r){const t=e.identifier.name;this.#i.has(t)||this.#s.has(t)||r.add(t)}#l(e,r){for(const t of e.expressions){const e=t.name.table.table.identifier.name;this.#s.has(e)||r.add(e)}}}class WithSchemaPlugin{#h;constructor(e){this.#h=new WithSchemaTransformer(e)}transformQuery(e){return this.#h.transformNode(e.node)}async transformResult(e){return e.result}}class QueryCreator{#e;constructor(e){this.#e=freeze(e)}selectFrom(e){return new SelectQueryBuilder({queryId:createQueryId(),executor:this.#e.executor,queryNode:v.create(parseTableExpressionOrList(e),this.#e.withNode)})}insertInto(e){return new InsertQueryBuilder({queryId:createQueryId(),executor:this.#e.executor,queryNode:L.create(parseTable(e),this.#e.withNode)})}replaceInto(e){return new InsertQueryBuilder({queryId:createQueryId(),executor:this.#e.executor,queryNode:L.create(parseTable(e),this.#e.withNode,!0)})}deleteFrom(e){return new DeleteQueryBuilder({queryId:createQueryId(),executor:this.#e.executor,queryNode:V.create(parseTableExpressionOrList(e),this.#e.withNode)})}updateTable(e){return new UpdateQueryBuilder({queryId:createQueryId(),executor:this.#e.executor,queryNode:U.create(parseTableExpression(e),this.#e.withNode)})}with(e,r){const t=parseCommonTableExpression(e,r);return new QueryCreator({...this.#e,withNode:this.#e.withNode?ee.cloneWithExpression(this.#e.withNode,t):ee.create(t)})}withRecursive(e,r){const t=parseCommonTableExpression(e,r);return new QueryCreator({...this.#e,withNode:this.#e.withNode?ee.cloneWithExpression(this.#e.withNode,t):ee.create(t,{recursive:!0})})}withPlugin(e){return new QueryCreator({...this.#e,executor:this.#e.executor.withPlugin(e)})}withoutPlugins(){return new QueryCreator({...this.#e,executor:this.#e.executor.withoutPlugins()})}withSchema(e){return new QueryCreator({...this.#e,executor:this.#e.executor.withPluginAtFront(new WithSchemaPlugin(e))})}}class Deferred{#f;#m;#N;constructor(){this.#f=new Promise(((e,r)=>{this.#N=r,this.#m=e}))}get promise(){return this.#f}resolve=e=>{this.#m&&this.#m(e)};reject=e=>{this.#N&&this.#N(e)}}const ne=new Set;function logOnce(e){ne.has(e)||(ne.add(e),console.log(e))}const oe=freeze([]);class QueryExecutorBase{#y;constructor(e=oe){this.#y=e}get plugins(){return this.#y}transformQuery(e,r){for(const t of this.#y){const n=t.transformQuery({node:e,queryId:r});if(n.kind!==e.kind)throw new Error(["KyselyPlugin.transformQuery must return a node","of the same kind that was given to it.",`The plugin was given a ${e.kind}`,`but it returned a ${n.kind}`].join(" "));e=n}return e}async executeQuery(e,r){return await this.provideConnection((async t=>{const n=await t.executeQuery(e),o=await this.#w(n,r);return function warnOfOutdatedDriverOrPlugins(e,r){const{numAffectedRows:t}=e;if(void 0===t&&void 0===e.numUpdatedOrDeletedRows||void 0!==t&&void 0!==r.numAffectedRows)return;logOnce("kysely:warning: outdated driver/plugin detected! QueryResult.numUpdatedOrDeletedRows is deprecated and will be removed in a future release.")}(n,o),o}))}async*stream(e,r,t){const n=new Deferred,o=new Deferred;this.provideConnection((async e=>(n.resolve(e),await o.promise))).catch((e=>n.reject(e)));const i=await n.promise;try{for await(const n of i.streamQuery(e,r))yield await this.#w(n,t)}finally{o.resolve()}}async#w(e,r){for(const t of this.#y)e=await t.transformResult({result:e,queryId:r});return e}}class NoopQueryExecutor extends QueryExecutorBase{get adapter(){throw new Error("this query cannot be compiled to SQL")}compileQuery(){throw new Error("this query cannot be compiled to SQL")}provideConnection(){throw new Error("this query cannot be executed")}withConnectionProvider(){throw new Error("this query cannot have a connection provider")}withPlugin(e){return new NoopQueryExecutor([...this.plugins,e])}withPlugins(e){return new NoopQueryExecutor([...this.plugins,...e])}withPluginAtFront(e){return new NoopQueryExecutor([e,...this.plugins])}withoutPlugins(){return new NoopQueryExecutor([])}}const ie=new NoopQueryExecutor;function parseJoin(e,r){if(3===r.length)return function parseSingleOnJoin(e,r,t,n){return d.createWithOn(e,parseTableExpression(r),parseReferentialComparison(t,"=",n))}(e,r[0],r[1],r[2]);if(2===r.length)return function parseCallbackJoin(e,r,t){const n=t(function createJoinBuilder(e,r){return new JoinBuilder({joinNode:d.create(e,parseTableExpression(r))})}(e,r));return n.toOperationNode()}(e,r[0],r[1]);throw new Error("not implemented")}const se=freeze({is:e=>"OffsetNode"===e.kind,create:e=>freeze({kind:"OffsetNode",offset:k.create(e)})}),ae=freeze({is:e=>"GroupByItemNode"===e.kind,create:e=>freeze({kind:"GroupByItemNode",groupBy:e})});function parseGroupBy(e){return parseReferenceExpressionOrList(e=isFunction(e)?e(expressionBuilder()):e).map(ae.create)}const de=freeze({is:e=>"SetOperationNode"===e.kind,create:(e,r,t)=>freeze({kind:"SetOperationNode",operator:e,expression:r,all:t})});function parseSetOperation(e,r,t){return de.create(e,r.toOperationNode(),t)}class SelectQueryBuilder{#e;constructor(e){this.#e=freeze(e)}get expressionType(){}where(...e){return new SelectQueryBuilder({...this.#e,queryNode:K.cloneWithWhere(this.#e.queryNode,parseFilter(e))})}whereRef(e,r,t){return new SelectQueryBuilder({...this.#e,queryNode:K.cloneWithWhere(this.#e.queryNode,parseReferentialComparison(e,r,t))})}having(...e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithHaving(this.#e.queryNode,parseFilter(e))})}havingRef(e,r,t){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithHaving(this.#e.queryNode,parseReferentialComparison(e,r,t))})}select(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithSelections(this.#e.queryNode,parseSelectArg(e))})}distinctOn(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithDistinctOn(this.#e.queryNode,parseReferenceExpressionOrList(e))})}modifyFront(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithFrontModifier(this.#e.queryNode,o.createWithExpression(e.toOperationNode()))})}modifyEnd(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithEndModifier(this.#e.queryNode,o.createWithExpression(e.toOperationNode()))})}distinct(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithFrontModifier(this.#e.queryNode,o.create("Distinct"))})}forUpdate(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithEndModifier(this.#e.queryNode,o.create("ForUpdate"))})}forShare(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithEndModifier(this.#e.queryNode,o.create("ForShare"))})}forKeyShare(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithEndModifier(this.#e.queryNode,o.create("ForKeyShare"))})}forNoKeyUpdate(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithEndModifier(this.#e.queryNode,o.create("ForNoKeyUpdate"))})}skipLocked(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithEndModifier(this.#e.queryNode,o.create("SkipLocked"))})}noWait(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithEndModifier(this.#e.queryNode,o.create("NoWait"))})}selectAll(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithSelections(this.#e.queryNode,parseSelectAll(e))})}innerJoin(...e){return new SelectQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("InnerJoin",e))})}leftJoin(...e){return new SelectQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("LeftJoin",e))})}rightJoin(...e){return new SelectQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("RightJoin",e))})}fullJoin(...e){return new SelectQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("FullJoin",e))})}innerJoinLateral(...e){return new SelectQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("LateralInnerJoin",e))})}leftJoinLateral(...e){return new SelectQueryBuilder({...this.#e,queryNode:K.cloneWithJoin(this.#e.queryNode,parseJoin("LateralLeftJoin",e))})}orderBy(e,r){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithOrderByItem(this.#e.queryNode,parseOrderBy(e,r))})}groupBy(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithGroupByItems(this.#e.queryNode,parseGroupBy(e))})}limit(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithLimit(this.#e.queryNode,Y.create(e))})}offset(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithOffset(this.#e.queryNode,se.create(e))})}union(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("union",e,!1))})}unionAll(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("union",e,!0))})}intersect(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("intersect",e,!1))})}intersectAll(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("intersect",e,!0))})}except(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("except",e,!1))})}exceptAll(e){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("except",e,!0))})}as(e){return new AliasedSelectQueryBuilder(this,e)}clearSelect(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithoutSelections(this.#e.queryNode)})}clearWhere(){return new SelectQueryBuilder({...this.#e,queryNode:K.cloneWithoutWhere(this.#e.queryNode)})}clearLimit(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithoutLimit(this.#e.queryNode)})}clearOffset(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithoutOffset(this.#e.queryNode)})}clearOrderBy(){return new SelectQueryBuilder({...this.#e,queryNode:v.cloneWithoutOrderBy(this.#e.queryNode)})}$call(e){return e(this)}$if(e,r){return e?r(this):new SelectQueryBuilder({...this.#e})}$castTo(){return new SelectQueryBuilder(this.#e)}$narrowType(){return new SelectQueryBuilder(this.#e)}$assertType(){return new SelectQueryBuilder(this.#e)}withPlugin(e){return new SelectQueryBuilder({...this.#e,executor:this.#e.executor.withPlugin(e)})}toOperationNode(){return this.#e.executor.transformQuery(this.#e.queryNode,this.#e.queryId)}compile(){return this.#e.executor.compileQuery(this.toOperationNode(),this.#e.queryId)}async execute(){const e=this.compile();return(await this.#e.executor.executeQuery(e,this.#e.queryId)).rows}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#e.executor.stream(r,e,this.#e.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new SelectQueryBuilder({...this.#e,queryNode:K.cloneWithExplain(this.#e.queryNode,e,r)});return await t.execute()}}preventAwait(SelectQueryBuilder,"don't await SelectQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");class AliasedSelectQueryBuilder{#O;#g;constructor(e,r){this.#O=e,this.#g=r}get expression(){return this.#O}get alias(){return this.#g}toOperationNode(){return t.create(this.#O.toOperationNode(),e.create(this.#g))}}const ue=freeze({is:e=>"ParensNode"===e.kind,create:e=>freeze({kind:"ParensNode",node:e})});class ExpressionWrapper{#x;constructor(e){this.#x=e}get expressionType(){}as(e){return new AliasedExpressionWrapper(this,e)}or(...e){return new OrWrapper(s.create(this.#x,parseFilter(e)))}and(...e){return new AndWrapper(i.create(this.#x,parseFilter(e)))}$castTo(){return new ExpressionWrapper(this.#x)}toOperationNode(){return this.#x}}class AliasedExpressionWrapper{#B;#g;constructor(e,r){this.#B=e,this.#g=r}get expression(){return this.#B}get alias(){return this.#g}toOperationNode(){return t.create(this.#B.toOperationNode(),isOperationNodeSource(this.#g)?this.#g.toOperationNode():e.create(this.#g))}}class OrWrapper{#x;constructor(e){this.#x=e}get expressionType(){}as(e){return new AliasedExpressionWrapper(this,e)}or(...e){return new OrWrapper(s.create(this.#x,parseFilter(e)))}$castTo(){return new OrWrapper(this.#x)}toOperationNode(){return ue.create(this.#x)}}class AndWrapper{#x;constructor(e){this.#x=e}get expressionType(){}as(e){return new AliasedExpressionWrapper(this,e)}and(...e){return new AndWrapper(i.create(this.#x,parseFilter(e)))}$castTo(){return new AndWrapper(this.#x)}toOperationNode(){return ue.create(this.#x)}}const pe=freeze({is:e=>"AggregateFunctionNode"===e.kind,create:(e,r=[])=>freeze({kind:"AggregateFunctionNode",func:e,aggregated:r}),cloneWithDistinct:e=>freeze({...e,distinct:!0}),cloneWithFilter:(e,r)=>freeze({...e,filter:e.filter?j.cloneWithOperation(e.filter,"And",r):j.create(r)}),cloneWithOrFilter:(e,r)=>freeze({...e,filter:e.filter?j.cloneWithOperation(e.filter,"Or",r):j.create(r)}),cloneWithOver:(e,r)=>freeze({...e,over:r})}),ce=freeze({is:e=>"FunctionNode"===e.kind,create:(e,r)=>freeze({kind:"FunctionNode",func:e,arguments:r})});class AggregateFunctionBuilder{#e;constructor(e){this.#e=freeze(e)}get expressionType(){}as(e){return new AliasedAggregateFunctionBuilder(this,e)}distinct(){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:pe.cloneWithDistinct(this.#e.aggregateFunctionNode)})}filterWhere(...e){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:pe.cloneWithFilter(this.#e.aggregateFunctionNode,parseFilter(e))})}filterWhereRef(e,r,t){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:pe.cloneWithFilter(this.#e.aggregateFunctionNode,parseReferentialComparison(e,r,t))})}over(e){const r=function createOverBuilder(){return new OverBuilder({overNode:I.create()})}();return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:pe.cloneWithOver(this.#e.aggregateFunctionNode,(e?e(r):r).toOperationNode())})}$call(e){return e(this)}toOperationNode(){return this.#e.aggregateFunctionNode}}preventAwait(AggregateFunctionBuilder,"don't await AggregateFunctionBuilder instances. They are never executed directly and are always just a part of a query.");class AliasedAggregateFunctionBuilder{#W;#g;constructor(e,r){this.#W=e,this.#g=r}get expression(){return this.#W}get alias(){return this.#g}toOperationNode(){return t.create(this.#W.toOperationNode(),e.create(this.#g))}}function createFunctionModule(){const fn=(e,r)=>new ExpressionWrapper(ce.create(e,parseReferenceExpressionOrList(r))),agg=(e,r)=>new AggregateFunctionBuilder({aggregateFunctionNode:pe.create(e,r?parseReferenceExpressionOrList(r):void 0)});return Object.assign(fn,{agg:agg,avg:e=>agg("avg",[e]),coalesce:(e,...r)=>fn("coalesce",[e,...r]),count:e=>agg("count",[e]),countAll:e=>new AggregateFunctionBuilder({aggregateFunctionNode:pe.create("count",parseSelectAll(e))}),max:e=>agg("max",[e]),min:e=>agg("min",[e]),sum:e=>agg("sum",[e])})}const le=freeze({is:e=>"UnaryOperationNode"===e.kind,create:(e,r)=>freeze({kind:"UnaryOperationNode",operator:e,operand:r})});const he=freeze({is:e=>"WhenNode"===e.kind,create:e=>freeze({kind:"WhenNode",condition:e}),cloneWithResult:(e,r)=>freeze({...e,result:r})}),fe=freeze({is:e=>"CaseNode"===e.kind,create:e=>freeze({kind:"CaseNode",value:e}),cloneWithWhen:(e,r)=>freeze({...e,when:freeze(e.when?[...e.when,r]:[r])}),cloneWithThen:(e,r)=>freeze({...e,when:e.when?freeze([...e.when.slice(0,-1),he.cloneWithResult(e.when[e.when.length-1],r)]):void 0}),cloneWith:(e,r)=>freeze({...e,...r})});class CaseBuilder{#e;constructor(e){this.#e=freeze(e)}when(...e){return new CaseThenBuilder({...this.#e,node:fe.cloneWithWhen(this.#e.node,he.create(parseFilter(e)))})}}class CaseThenBuilder{#e;constructor(e){this.#e=freeze(e)}then(e){return new CaseWhenBuilder({...this.#e,node:fe.cloneWithThen(this.#e.node,parseValueExpression(e))})}}class CaseWhenBuilder{#e;constructor(e){this.#e=freeze(e)}when(...e){return new CaseThenBuilder({...this.#e,node:fe.cloneWithWhen(this.#e.node,he.create(parseFilter(e)))})}else(e){return new CaseEndBuilder({...this.#e,node:fe.cloneWith(this.#e.node,{else:parseValueExpression(e)})})}end(){return new ExpressionWrapper(fe.cloneWith(this.#e.node,{isStatement:!1}))}endCase(){return new ExpressionWrapper(fe.cloneWith(this.#e.node,{isStatement:!0}))}}class CaseEndBuilder{#e;constructor(e){this.#e=freeze(e)}end(){return new ExpressionWrapper(fe.cloneWith(this.#e.node,{isStatement:!1}))}endCase(){return new ExpressionWrapper(fe.cloneWith(this.#e.node,{isStatement:!0}))}}const me=freeze({is:e=>"JSONPathLegNode"===e.kind,create:(e,r)=>freeze({kind:"JSONPathLegNode",type:e,value:r})});class JSONPathBuilder{#x;constructor(e){this.#x=e}at(e){return this.#S("ArrayLocation",e)}key(e){return this.#S("Member",e)}#S(e,r){return new TraversedJSONPathBuilder(W.cloneWithTraversal(this.#x,b.is(this.#x.traversal)?b.cloneWithLeg(this.#x.traversal,me.create(e,r)):S.cloneWithValue(this.#x.traversal,k.createImmediate(r))))}}class TraversedJSONPathBuilder extends JSONPathBuilder{#x;constructor(e){super(e),this.#x=e}get expressionType(){}as(e){return new AliasedJSONPathBuilder(this,e)}$castTo(){return new JSONPathBuilder(this.#x)}toOperationNode(){return this.#x}}class AliasedJSONPathBuilder{#b;#g;constructor(e,r){this.#b=e,this.#g=r}get expression(){return this.#b}get alias(){return this.#g}toOperationNode(){return t.create(this.#b.toOperationNode(),isOperationNodeSource(this.#g)?this.#g.toOperationNode():e.create(this.#g))}}function createExpressionBuilder(e=ie){function unary(e,r){return new ExpressionWrapper(function parseUnaryOperation(e,r){return le.create(y.create(e),parseReferenceExpression(r))}(e,r))}const r=Object.assign((function binary(e,r,t){return new ExpressionWrapper(parseValueBinaryOperation(e,r,t))}),{fn:void 0,eb:void 0,selectFrom:r=>new SelectQueryBuilder({queryId:createQueryId(),executor:e,queryNode:v.create(parseTableExpressionOrList(r))}),case:e=>new CaseBuilder({node:fe.create(isUndefined(e)?void 0:parseReferenceExpression(e))}),ref:(e,r)=>isUndefined(r)?new ExpressionWrapper(parseStringReference(e)):new JSONPathBuilder(function parseJSONReference(e,r){const t=parseStringReference(e);if(isJSONOperator(r))return W.create(t,S.create(y.create(r)));const n=r.slice(0,-1);if(isJSONOperator(n))return W.create(t,b.create(y.create(n)));throw new Error(`Invalid JSON operator: ${r}`)}(e,r)),val:e=>new ExpressionWrapper(parseValueExpressionOrList(e)),cmpr:(e,r,t)=>new ExpressionWrapper(parseValueBinaryOperation(e,r,t)),bxp:(e,r,t)=>new ExpressionWrapper(parseValueBinaryOperation(e,r,t)),unary:unary,not:e=>unary("not",e),exists:e=>unary("exists",e),neg:e=>unary("-",e),and(e){if(0===e.length)return new ExpressionWrapper(k.createImmediate(!0));if(1===e.length)return new ExpressionWrapper(e[0].toOperationNode());let r=i.create(e[0].toOperationNode(),e[1].toOperationNode());for(let t=2;t<e.length;++t)r=i.create(r,e[t].toOperationNode());return new ExpressionWrapper(ue.create(r))},or(e){if(0===e.length)return new ExpressionWrapper(k.createImmediate(!1));if(1===e.length)return new ExpressionWrapper(e[0].toOperationNode());let r=s.create(e[0].toOperationNode(),e[1].toOperationNode());for(let t=2;t<e.length;++t)r=s.create(r,e[t].toOperationNode());return new ExpressionWrapper(ue.create(r))},parens(...e){const r=parseValueBinaryOperationOrExpression(e);return ue.is(r)?new ExpressionWrapper(r):new ExpressionWrapper(ue.create(r))},withSchema:r=>createExpressionBuilder(e.withPluginAtFront(new WithSchemaPlugin(r)))});return r.fn=createFunctionModule(),r.eb=r,r}function expressionBuilder(e){return createExpressionBuilder()}function parseExpression(e){if(isOperationNodeSource(e))return e.toOperationNode();if(isFunction(e))return e(expressionBuilder()).toOperationNode();throw new Error(`invalid expression: ${JSON.stringify(e)}`)}function parseAliasedExpression(e){if(isOperationNodeSource(e))return e.toOperationNode();if(isFunction(e))return e(expressionBuilder()).toOperationNode();throw new Error(`invalid aliased expression: ${JSON.stringify(e)}`)}function isExpressionOrFactory(e){return isExpression(e)||isAliasedExpression(e)||isFunction(e)}function parseTableExpressionOrList(e){return isReadonlyArray(e)?e.map((e=>parseTableExpression(e))):[parseTableExpression(e)]}function parseTableExpression(r){return isString(r)?function parseAliasedTable(r){const n=" as ";if(r.includes(n)){const[o,i]=r.split(n).map(trim);return t.create(parseTable(o),e.create(i))}return parseTable(r)}(r):parseAliasedExpression(r)}function parseTable(e){if(e.includes(".")){const[r,t]=e.split(".").map(trim);return n.createWithSchema(r,t)}return n.create(e)}function trim(e){return e.trim()}class RawBuilder{#e;constructor(e){this.#e=freeze(e)}get expressionType(){}as(e){return new AliasedRawBuilder(this,e)}$castTo(){return new RawBuilder({...this.#e})}castTo(){return this.$castTo()}withPlugin(e){return new RawBuilder({...this.#e,plugins:void 0!==this.#e.plugins?freeze([...this.#e.plugins,e]):freeze([e])})}toOperationNode(){return this.#z(this.#C())}compile(e){return this.#k(this.#C(e))}async execute(e){const r=this.#C(e);return r.executeQuery(this.#k(r),this.#e.queryId)}#C(e){const r=void 0!==e?e.getExecutor():ie;return void 0!==this.#e.plugins?r.withPlugins(this.#e.plugins):r}#z(e){return e.transformQuery(this.#e.rawNode,this.#e.queryId)}#k(e){return e.compileQuery(this.#z(e),this.#e.queryId)}}function isRawBuilder(e){return isObject(e)&&isFunction(e.as)&&isFunction(e.$castTo)&&isFunction(e.withPlugin)&&isFunction(e.toOperationNode)&&isFunction(e.execute)}preventAwait(RawBuilder,"don't await RawBuilder instances directly. To execute the query you need to call `execute`");class AliasedRawBuilder{#E;#g;constructor(e,r){this.#E=e,this.#g=r}get expression(){return this.#E}get alias(){return this.#g}toOperationNode(){return t.create(this.#E.toOperationNode(),isOperationNodeSource(this.#g)?this.#g.toOperationNode():e.create(this.#g))}}const Ne=Object.assign(((e,...r)=>new RawBuilder({queryId:createQueryId(),rawNode:B.create(e,r?.map(parseValueExpression)??[])})),{ref:e=>new RawBuilder({queryId:createQueryId(),rawNode:B.createWithChild(parseStringReference(e))}),val:e=>new RawBuilder({queryId:createQueryId(),rawNode:B.createWithChild(parseValueExpression(e))}),value(e){return this.val(e)},table:e=>new RawBuilder({queryId:createQueryId(),rawNode:B.createWithChild(parseTable(e))}),id(...r){const t=new Array(r.length+1).fill(".");return t[0]="",t[t.length-1]="",new RawBuilder({queryId:createQueryId(),rawNode:B.create(t,r.map(e.create))})},lit:e=>new RawBuilder({queryId:createQueryId(),rawNode:B.createWithChild(k.createImmediate(e))}),literal(e){return this.lit(e)},raw:e=>new RawBuilder({queryId:createQueryId(),rawNode:B.createWithSql(e)}),join(e,r=Ne`, `){const t=new Array(2*e.length-1),n=r.toOperationNode();for(let r=0;r<e.length;++r)t[2*r]=parseValueExpression(e[r]),r!==e.length-1&&(t[2*r+1]=n);return new RawBuilder({queryId:createQueryId(),rawNode:B.createWithChildren(t)})}});export{AliasedSelectQueryBuilder as $,isBoolean as A,isNull as B,w as C,DynamicReferenceBuilder as D,isDate as E,isBigInt as F,getLast as G,Ne as H,e as I,isBuffer as J,isArrayBufferOrView as K,compare as L,expressionBuilder as M,logOnce as N,OperationNodeTransformer as O,isExpression as P,K as Q,B as R,r as S,isAliasedExpression as T,ExpressionWrapper as U,k as V,WithSchemaPlugin as W,AliasedExpressionWrapper as X,OrWrapper as Y,AndWrapper as Z,SelectQueryBuilder as _,parseStringReference as a,U as a$,InsertQueryBuilder as a0,UpdateQueryBuilder as a1,DeleteQueryBuilder as a2,NoResultError as a3,isNoResultErrorConstructor as a4,JoinBuilder as a5,InsertResult as a6,DeleteResult as a7,UpdateResult as a8,OnConflictBuilder as a9,Y as aA,se as aB,X as aC,H as aD,a as aE,p as aF,c as aG,l as aH,h as aI,f as aJ,m as aK,N as aL,isOperator as aM,isBinaryOperator as aN,isComparisonOperator as aO,isArithmeticOperator as aP,isJSONOperator as aQ,s as aR,x as aS,E as aT,ue as aU,z as aV,g as aW,$ as aX,v as aY,F as aZ,n as a_,OnConflictDoNothingBuilder as aa,OnConflictUpdateBuilder as ab,AggregateFunctionBuilder as ac,AliasedAggregateFunctionBuilder as ad,CaseThenBuilder as ae,CaseWhenBuilder as af,CaseEndBuilder as ag,JSONPathBuilder as ah,TraversedJSONPathBuilder as ai,AliasedJSONPathBuilder as aj,RawBuilder as ak,isRawBuilder as al,AliasedRawBuilder as am,NoopQueryExecutor as an,ie as ao,t as ap,i as aq,G as ar,Z as as,_ as at,V as au,Q as av,ae as aw,R as ax,T as ay,d as az,O as b,D as b0,he as b1,j as b2,ee as b3,M as b4,J as b5,pe as b6,I as b7,q as b8,A as b9,u as ba,le as bb,P as bc,W as bd,me as be,b as bf,S as bg,parseTable as c,parseOrderedColumnName as d,parseFilter as e,freeze as f,parseColumnName as g,C as h,isOperationNodeSource as i,createQueryId as j,QueryExecutorBase as k,isFunction as l,isObject as m,noop as n,QueryCreator as o,preventAwait as p,CaseBuilder as q,fe as r,isUndefined as s,parseExpression as t,createFunctionModule as u,L as v,de as w,isString as x,y,isNumber as z};
