import{f as e,I as t,S as i,C as s,i as n,V as r,p as o,a,b as p,c as d,n as c,O as h,d as l,R as u,Q as m,e as y,g as w,h as g,j as f,W as v,D as x,k as b,l as C,m as E,o as O,q as I,r as k,s as A,t as W,u as L,v as S,w as q,x as D,y as B,z as Q,A as R,B as F,E as V,F as J,G as K,H as j,J as G,K as z,L as H}from"./sql-MVzNZjAV.js";export{aG as ARITHMETIC_OPERATORS,ac as AggregateFunctionBuilder,b6 as AggregateFunctionNode,ap as AliasNode,ad as AliasedAggregateFunctionBuilder,X as AliasedExpressionWrapper,aj as AliasedJSONPathBuilder,am as AliasedRawBuilder,$ as AliasedSelectQueryBuilder,aq as AndNode,Z as AndWrapper,aI as BINARY_OPERATORS,ba as BinaryOperationNode,aF as COMPARISON_OPERATORS,ag as CaseEndBuilder,ae as CaseThenBuilder,af as CaseWhenBuilder,ar as ColumnUpdateNode,at as CommonTableExpressionNameNode,as as CommonTableExpressionNode,b5 as DefaultInsertValueNode,a2 as DeleteQueryBuilder,au as DeleteQueryNode,a7 as DeleteResult,b4 as ExplainNode,U as ExpressionWrapper,av as FromNode,aw as GroupByItemNode,ax as GroupByNode,ay as HavingNode,a0 as InsertQueryBuilder,a6 as InsertResult,bg as JSONOperatorChainNode,ah as JSONPathBuilder,be as JSONPathLegNode,bf as JSONPathNode,bd as JSONReferenceNode,aH as JSON_OPERATORS,a5 as JoinBuilder,az as JoinNode,aA as LimitNode,ao as NOOP_QUERY_EXECUTOR,a3 as NoResultError,an as NoopQueryExecutor,aL as OPERATORS,aB as OffsetNode,a9 as OnConflictBuilder,aa as OnConflictDoNothingBuilder,aC as OnConflictNode,ab as OnConflictUpdateBuilder,aD as OnDuplicateKeyNode,aE as OnNode,aR as OrNode,Y as OrWrapper,aS as OrderByItemNode,aT as OrderByNode,b7 as OverNode,aU as ParensNode,b9 as PartitionByItemNode,b8 as PartitionByNode,aV as PrimitiveValueListNode,ak as RawBuilder,aW as ReferenceNode,aX as ReturningNode,_ as SelectQueryBuilder,aY as SelectQueryNode,aZ as SelectionNode,a_ as TableNode,ai as TraversedJSONPathBuilder,aJ as UNARY_FILTER_OPERATORS,aK as UNARY_OPERATORS,bb as UnaryOperationNode,a1 as UpdateQueryBuilder,a$ as UpdateQueryNode,a8 as UpdateResult,bc as UsingNode,b0 as ValuesNode,b1 as WhenNode,b2 as WhereNode,b3 as WithNode,M as expressionBuilder,T as isAliasedExpression,aP as isArithmeticOperator,aN as isBinaryOperator,aO as isComparisonOperator,P as isExpression,aQ as isJSONOperator,a4 as isNoResultErrorConstructor,aM as isOperator,al as isRawBuilder,N as logOnce}from"./sql-MVzNZjAV.js";const ee=e({is:e=>"AlterTableNode"===e.kind,create:t=>e({kind:"AlterTableNode",table:t}),cloneWithTableProps:(t,i)=>e({...t,...i}),cloneWithColumnAlteration:(t,i)=>e({...t,columnAlterations:t.columnAlterations?[...t.columnAlterations,i]:[i]})}),te=e({is:e=>"CreateIndexNode"===e.kind,create:i=>e({kind:"CreateIndexNode",name:t.create(i)}),cloneWith:(t,i)=>e({...t,...i}),cloneWithColumns:(t,i)=>e({...t,columns:[...t.columns||[],...i]})}),ie=e({is:e=>"CreateSchemaNode"===e.kind,create:(i,s)=>e({kind:"CreateSchemaNode",schema:t.create(i),...s}),cloneWith:(t,i)=>e({...t,...i})}),se=["preserve rows","delete rows","drop"],ne=e({is:e=>"CreateTableNode"===e.kind,create:t=>e({kind:"CreateTableNode",table:t,columns:e([])}),cloneWithColumn:(t,i)=>e({...t,columns:e([...t.columns,i])}),cloneWithConstraint:(t,i)=>e({...t,constraints:t.constraints?e([...t.constraints,i]):e([i])}),cloneWithFrontModifier:(t,i)=>e({...t,frontModifiers:t.frontModifiers?e([...t.frontModifiers,i]):e([i])}),cloneWithEndModifier:(t,i)=>e({...t,endModifiers:t.endModifiers?e([...t.endModifiers,i]):e([i])}),cloneWith:(t,i)=>e({...t,...i})}),re=e({is:e=>"DropIndexNode"===e.kind,create:(t,s)=>e({kind:"DropIndexNode",name:i.create(t),...s}),cloneWith:(t,i)=>e({...t,...i})}),oe=e({is:e=>"DropSchemaNode"===e.kind,create:(i,s)=>e({kind:"DropSchemaNode",schema:t.create(i),...s}),cloneWith:(t,i)=>e({...t,...i})}),pe=e({is:e=>"DropTableNode"===e.kind,create:(t,i)=>e({kind:"DropTableNode",table:t,...i}),cloneWith:(t,i)=>e({...t,...i})}),de=e({is:e=>"AddColumnNode"===e.kind,create:t=>e({kind:"AddColumnNode",column:t})}),ce=e({is:e=>"ColumnDefinitionNode"===e.kind,create:(t,i)=>e({kind:"ColumnDefinitionNode",column:s.create(t),dataType:i}),cloneWithFrontModifier:(t,i)=>e({...t,frontModifiers:t.frontModifiers?e([...t.frontModifiers,i]):[i]}),cloneWithEndModifier:(t,i)=>e({...t,endModifiers:t.endModifiers?e([...t.endModifiers,i]):[i]}),cloneWith:(t,i)=>e({...t,...i})}),he=e({is:e=>"DropColumnNode"===e.kind,create:t=>e({kind:"DropColumnNode",column:s.create(t)})}),le=e({is:e=>"RenameColumnNode"===e.kind,create:(t,i)=>e({kind:"RenameColumnNode",column:s.create(t),renameTo:s.create(i)})}),ue=e({is:e=>"CheckConstraintNode"===e.kind,create:(i,s)=>e({kind:"CheckConstraintNode",expression:i,name:s?t.create(s):void 0})}),me=["no action","restrict","cascade","set null","set default"],ye=e({is:e=>"ReferencesNode"===e.kind,create:(t,i)=>e({kind:"ReferencesNode",table:t,columns:e([...i])}),cloneWithOnDelete:(t,i)=>e({...t,onDelete:i}),cloneWithOnUpdate:(t,i)=>e({...t,onUpdate:i})});function we(e){return n(e)?e.toOperationNode():r.createImmediate(e)}const ge=e({is:e=>"GeneratedNode"===e.kind,create:t=>e({kind:"GeneratedNode",...t}),createWithExpression:t=>e({kind:"GeneratedNode",always:!0,expression:t}),cloneWith:(t,i)=>e({...t,...i})}),fe=e({is:e=>"DefaultValueNode"===e.kind,create:t=>e({kind:"DefaultValueNode",defaultValue:t})});function Ne(e){if(me.includes(e))return e;throw new Error(`invalid OnModifyForeignAction ${e}`)}class ve{#e;constructor(e){this.#e=e}autoIncrement(){return new ve(ce.cloneWith(this.#e,{autoIncrement:!0}))}primaryKey(){return new ve(ce.cloneWith(this.#e,{primaryKey:!0}))}references(e){const t=a(e);if(!t.table||p.is(t.column))throw new Error(`invalid call references('${e}'). The reference must have format table.column or schema.table.column`);return new ve(ce.cloneWith(this.#e,{references:ye.create(t.table,[t.column])}))}onDelete(e){if(!this.#e.references)throw new Error("on delete constraint can only be added for foreign keys");return new ve(ce.cloneWith(this.#e,{references:ye.cloneWithOnDelete(this.#e.references,Ne(e))}))}onUpdate(e){if(!this.#e.references)throw new Error("on update constraint can only be added for foreign keys");return new ve(ce.cloneWith(this.#e,{references:ye.cloneWithOnUpdate(this.#e.references,Ne(e))}))}unique(){return new ve(ce.cloneWith(this.#e,{unique:!0}))}notNull(){return new ve(ce.cloneWith(this.#e,{notNull:!0}))}unsigned(){return new ve(ce.cloneWith(this.#e,{unsigned:!0}))}defaultTo(e){return new ve(ce.cloneWith(this.#e,{defaultTo:fe.create(we(e))}))}check(e){return new ve(ce.cloneWith(this.#e,{check:ue.create(e.toOperationNode())}))}generatedAlwaysAs(e){return new ve(ce.cloneWith(this.#e,{generated:ge.createWithExpression(e.toOperationNode())}))}generatedAlwaysAsIdentity(){return new ve(ce.cloneWith(this.#e,{generated:ge.create({identity:!0,always:!0})}))}generatedByDefaultAsIdentity(){return new ve(ce.cloneWith(this.#e,{generated:ge.create({identity:!0,byDefault:!0})}))}stored(){if(!this.#e.generated)throw new Error("stored() can only be called after generatedAlwaysAs");return new ve(ce.cloneWith(this.#e,{generated:ge.cloneWith(this.#e.generated,{stored:!0})}))}modifyFront(e){return new ve(ce.cloneWithFrontModifier(this.#e,e.toOperationNode()))}modifyEnd(e){return new ve(ce.cloneWithEndModifier(this.#e,e.toOperationNode()))}$call(e){return e(this)}toOperationNode(){return this.#e}}o(ve,"don't await ColumnDefinitionBuilder instances directly.");const xe=e({is:e=>"ModifyColumnNode"===e.kind,create:t=>e({kind:"ModifyColumnNode",column:t})}),Ce=e({is:e=>"DataTypeNode"===e.kind,create:t=>e({kind:"DataTypeNode",dataType:t})});function Te(e){return n(e)?e.toOperationNode():Ce.create(e)}const Ee=e({is:e=>"ForeignKeyConstraintNode"===e.kind,create:(i,s,n,r)=>e({kind:"ForeignKeyConstraintNode",columns:i,references:ye.create(s,n),name:r?t.create(r):void 0}),cloneWith:(t,i)=>e({...t,...i})});class Oe{#e;constructor(e){this.#e=e}onDelete(e){return new Oe(Ee.cloneWith(this.#e,{onDelete:Ne(e)}))}onUpdate(e){return new Oe(Ee.cloneWith(this.#e,{onUpdate:Ne(e)}))}$call(e){return e(this)}toOperationNode(){return this.#e}}o(Oe,"don't await ForeignKeyConstraintBuilder instances directly.");const Ie=e({is:e=>"AddConstraintNode"===e.kind,create:t=>e({kind:"AddConstraintNode",constraint:t})}),ke=e({is:e=>"UniqueConstraintNode"===e.kind,create:(i,n)=>e({kind:"UniqueConstraintNode",columns:e(i.map(s.create)),name:n?t.create(n):void 0})}),Ae=e({is:e=>"DropConstraintNode"===e.kind,create:i=>e({kind:"DropConstraintNode",constraintName:t.create(i)}),cloneWith:(t,i)=>e({...t,...i})}),We=e({is:e=>"AlterColumnNode"===e.kind,create:(t,i,n)=>e({kind:"AlterColumnNode",column:s.create(t),[i]:n})});class Le{#t;constructor(e){this.#t=e}setDataType(e){return new Se(We.create(this.#t,"dataType",Te(e)))}setDefault(e){return new Se(We.create(this.#t,"setDefault",we(e)))}dropDefault(){return new Se(We.create(this.#t,"dropDefault",!0))}setNotNull(){return new Se(We.create(this.#t,"setNotNull",!0))}dropNotNull(){return new Se(We.create(this.#t,"dropNotNull",!0))}$call(e){return e(this)}}class Se{#i;constructor(e){this.#i=e}toOperationNode(){return this.#i}}class qe{#s;constructor(t){this.#s=e(t)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(qe,"don't await AlterTableExecutor instances directly. To execute the query you need to call `execute`");class Pe{#s;constructor(t){this.#s=e(t)}onDelete(e){return new Pe({...this.#s,constraintBuilder:this.#s.constraintBuilder.onDelete(e)})}onUpdate(e){return new Pe({...this.#s,constraintBuilder:this.#s.constraintBuilder.onUpdate(e)})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(ee.cloneWithTableProps(this.#s.node,{addConstraint:Ie.create(this.#s.constraintBuilder.toOperationNode())}),this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Pe,"don't await AlterTableAddForeignKeyConstraintBuilder instances directly. To execute the query you need to call `execute`");class De{#s;constructor(t){this.#s=e(t)}ifExists(){return new De({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{dropConstraint:Ae.cloneWith(this.#s.node.dropConstraint,{ifExists:!0})})})}cascade(){return new De({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{dropConstraint:Ae.cloneWith(this.#s.node.dropConstraint,{modifier:"cascade"})})})}restrict(){return new De({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{dropConstraint:Ae.cloneWith(this.#s.node.dropConstraint,{modifier:"restrict"})})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(De,"don't await AlterTableDropConstraintBuilder instances directly. To execute the query you need to call `execute`");class Me{#s;constructor(t){this.#s=e(t)}renameTo(e){return new qe({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{renameTo:d(e)})})}setSchema(e){return new qe({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{setSchema:t.create(e)})})}alterColumn(e,t){const i=t(new Le(e));return new Be({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,i.toOperationNode())})}dropColumn(e){return new Be({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,he.create(e))})}renameColumn(e,t){return new Be({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,le.create(e,t))})}addColumn(e,t,i=c){const s=i(new ve(ce.create(e,Te(t))));return new Be({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,de.create(s.toOperationNode()))})}modifyColumn(e,t,i=c){const s=i(new ve(ce.create(e,Te(t))));return new Be({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,xe.create(s.toOperationNode()))})}addUniqueConstraint(e,t){return new qe({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addConstraint:Ie.create(ke.create(t,e))})})}addCheckConstraint(e,t){return new qe({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addConstraint:Ie.create(ue.create(t.toOperationNode(),e))})})}addForeignKeyConstraint(e,t,i,n){return new Pe({...this.#s,constraintBuilder:new Oe(Ee.create(t.map(s.create),d(i),n.map(s.create),e))})}dropConstraint(e){return new De({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{dropConstraint:Ae.create(e)})})}$call(e){return e(this)}}class Be{#s;constructor(t){this.#s=e(t)}alterColumn(e,t){const i=t(new Le(e));return new Be({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,i.toOperationNode())})}dropColumn(e){return new Be({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,he.create(e))})}renameColumn(e,t){return new Be({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,le.create(e,t))})}addColumn(e,t,i=c){const s=i(new ve(ce.create(e,Te(t))));return new Be({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,de.create(s.toOperationNode()))})}modifyColumn(e,t,i=c){const s=i(new ve(ce.create(e,Te(t))));return new Be({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,xe.create(s.toOperationNode()))})}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Me,"don't await AlterTableBuilder instances"),o(Le,"don't await AlterColumnBuilder instances"),o(Be,"don't await AlterTableColumnAlteringBuilder instances directly. To execute the query you need to call `execute`");class Qe extends h{transformValue(e){return{...super.transformValue(e),immediate:!0}}}class Re{#s;constructor(t){this.#s=e(t)}ifNotExists(){return new Re({...this.#s,node:te.cloneWith(this.#s.node,{ifNotExists:!0})})}unique(){return new Re({...this.#s,node:te.cloneWith(this.#s.node,{unique:!0})})}on(e){return new Re({...this.#s,node:te.cloneWith(this.#s.node,{table:d(e)})})}column(e){return new Re({...this.#s,node:te.cloneWithColumns(this.#s.node,[l(e)])})}columns(e){return new Re({...this.#s,node:te.cloneWithColumns(this.#s.node,e.map(l))})}expression(e){return new Re({...this.#s,node:te.cloneWithColumns(this.#s.node,[e.toOperationNode()])})}using(e){return new Re({...this.#s,node:te.cloneWith(this.#s.node,{using:u.createWithSql(e)})})}where(...e){const t=new Qe;return new Re({...this.#s,node:m.cloneWithWhere(this.#s.node,t.transformNode(y(e)))})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Re,"don't await CreateIndexBuilder instances directly. To execute the query you need to call `execute`");class _e{#s;constructor(t){this.#s=e(t)}ifNotExists(){return new _e({...this.#s,node:ie.cloneWith(this.#s.node,{ifNotExists:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(_e,"don't await CreateSchemaBuilder instances directly. To execute the query you need to call `execute`");const Ue=e({is:e=>"PrimaryKeyConstraintNode"===e.kind,create:(i,n)=>e({kind:"PrimaryKeyConstraintNode",columns:e(i.map(s.create)),name:n?t.create(n):void 0})});function Fe(e){if(se.includes(e))return e;throw new Error(`invalid OnCommitAction ${e}`)}class Ve{#s;constructor(t){this.#s=e(t)}temporary(){return new Ve({...this.#s,node:ne.cloneWith(this.#s.node,{temporary:!0})})}onCommit(e){return new Ve({...this.#s,node:ne.cloneWith(this.#s.node,{onCommit:Fe(e)})})}ifNotExists(){return new Ve({...this.#s,node:ne.cloneWith(this.#s.node,{ifNotExists:!0})})}addColumn(e,t,i=c){const s=i(new ve(ce.create(e,Te(t))));return new Ve({...this.#s,node:ne.cloneWithColumn(this.#s.node,s.toOperationNode())})}addPrimaryKeyConstraint(e,t){return new Ve({...this.#s,node:ne.cloneWithConstraint(this.#s.node,Ue.create(t,e))})}addUniqueConstraint(e,t){return new Ve({...this.#s,node:ne.cloneWithConstraint(this.#s.node,ke.create(t,e))})}addCheckConstraint(e,t){return new Ve({...this.#s,node:ne.cloneWithConstraint(this.#s.node,ue.create(t.toOperationNode(),e))})}addForeignKeyConstraint(e,t,i,n,r=c){const o=r(new Oe(Ee.create(t.map(s.create),d(i),n.map(s.create),e)));return new Ve({...this.#s,node:ne.cloneWithConstraint(this.#s.node,o.toOperationNode())})}modifyFront(e){return new Ve({...this.#s,node:ne.cloneWithFrontModifier(this.#s.node,e.toOperationNode())})}modifyEnd(e){return new Ve({...this.#s,node:ne.cloneWithEndModifier(this.#s.node,e.toOperationNode())})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Ve,"don't await CreateTableBuilder instances directly. To execute the query you need to call `execute`");class $e{#s;constructor(t){this.#s=e(t)}on(e){return new $e({...this.#s,node:re.cloneWith(this.#s.node,{table:d(e)})})}ifExists(){return new $e({...this.#s,node:re.cloneWith(this.#s.node,{ifExists:!0})})}cascade(){return new $e({...this.#s,node:re.cloneWith(this.#s.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o($e,"don't await DropIndexBuilder instances directly. To execute the query you need to call `execute`");class Je{#s;constructor(t){this.#s=e(t)}ifExists(){return new Je({...this.#s,node:oe.cloneWith(this.#s.node,{ifExists:!0})})}cascade(){return new Je({...this.#s,node:oe.cloneWith(this.#s.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Je,"don't await DropSchemaBuilder instances directly. To execute the query you need to call `execute`");class Ke{#s;constructor(t){this.#s=e(t)}ifExists(){return new Ke({...this.#s,node:pe.cloneWith(this.#s.node,{ifExists:!0})})}cascade(){return new Ke({...this.#s,node:pe.cloneWith(this.#s.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Ke,"don't await DropTableBuilder instances directly. To execute the query you need to call `execute`");const je=e({is:e=>"CreateViewNode"===e.kind,create:t=>e({kind:"CreateViewNode",name:i.create(t)}),cloneWith:(t,i)=>e({...t,...i})});class Ge{#n=new Qe;transformQuery(e){return this.#n.transformNode(e.node)}transformResult(e){return Promise.resolve(e.result)}}class ze{#s;constructor(t){this.#s=e(t)}temporary(){return new ze({...this.#s,node:je.cloneWith(this.#s.node,{temporary:!0})})}materialized(){return new ze({...this.#s,node:je.cloneWith(this.#s.node,{materialized:!0})})}ifNotExists(){return new ze({...this.#s,node:je.cloneWith(this.#s.node,{ifNotExists:!0})})}orReplace(){return new ze({...this.#s,node:je.cloneWith(this.#s.node,{orReplace:!0})})}columns(e){return new ze({...this.#s,node:je.cloneWith(this.#s.node,{columns:e.map(w)})})}as(e){const t=e.withPlugin(new Ge).toOperationNode();return new ze({...this.#s,node:je.cloneWith(this.#s.node,{as:t})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(ze,"don't await CreateViewBuilder instances directly. To execute the query you need to call `execute`");const He=e({is:e=>"DropViewNode"===e.kind,create:t=>e({kind:"DropViewNode",name:i.create(t)}),cloneWith:(t,i)=>e({...t,...i})});class Ye{#s;constructor(t){this.#s=e(t)}materialized(){return new Ye({...this.#s,node:He.cloneWith(this.#s.node,{materialized:!0})})}ifExists(){return new Ye({...this.#s,node:He.cloneWith(this.#s.node,{ifExists:!0})})}cascade(){return new Ye({...this.#s,node:He.cloneWith(this.#s.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Ye,"don't await DropViewBuilder instances directly. To execute the query you need to call `execute`");const Xe=e({is:e=>"CreateTypeNode"===e.kind,create:t=>e({kind:"CreateTypeNode",name:t}),cloneWithEnum:(t,i)=>e({...t,enum:g.create(i.map((e=>r.createImmediate(e))))})});class Ze{#s;constructor(t){this.#s=e(t)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}asEnum(e){return new Ze({...this.#s,node:Xe.cloneWithEnum(this.#s.node,e)})}$call(e){return e(this)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Ze,"don't await CreateTypeBuilder instances directly. To execute the query you need to call `execute`");const et=e({is:e=>"DropTypeNode"===e.kind,create:t=>e({kind:"DropTypeNode",name:t}),cloneWith:(t,i)=>e({...t,...i})});class tt{#s;constructor(t){this.#s=e(t)}ifExists(){return new tt({...this.#s,node:et.cloneWith(this.#s.node,{ifExists:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}function it(e){if(e.includes(".")){const t=e.split(".").map(st);if(2===t.length)return i.createWithSchema(t[0],t[1]);throw new Error(`invalid schemable identifier ${e}`)}return i.create(e)}function st(e){return e.trim()}o(tt,"don't await DropTypeBuilder instances directly. To execute the query you need to call `execute`");class nt{#r;constructor(e){this.#r=e}createTable(e){return new Ve({queryId:f(),executor:this.#r,node:ne.create(d(e))})}dropTable(e){return new Ke({queryId:f(),executor:this.#r,node:pe.create(d(e))})}createIndex(e){return new Re({queryId:f(),executor:this.#r,node:te.create(e)})}dropIndex(e){return new $e({queryId:f(),executor:this.#r,node:re.create(e)})}createSchema(e){return new _e({queryId:f(),executor:this.#r,node:ie.create(e)})}dropSchema(e){return new Je({queryId:f(),executor:this.#r,node:oe.create(e)})}alterTable(e){return new Me({queryId:f(),executor:this.#r,node:ee.create(d(e))})}createView(e){return new ze({queryId:f(),executor:this.#r,node:je.create(e)})}dropView(e){return new Ye({queryId:f(),executor:this.#r,node:He.create(e)})}createType(e){return new Ze({queryId:f(),executor:this.#r,node:Xe.create(it(e))})}dropType(e){return new tt({queryId:f(),executor:this.#r,node:et.create(it(e))})}withPlugin(e){return new nt(this.#r.withPlugin(e))}withoutPlugins(){return new nt(this.#r.withoutPlugins())}withSchema(e){return new nt(this.#r.withPluginAtFront(new v(e)))}}class rt{ref(e){return new x(e)}}class ot{#o;constructor(e){this.#o=e}async provideConnection(e){const t=await this.#o.acquireConnection();try{return await e(t)}finally{await this.#o.releaseConnection(t)}}}class pt extends b{#a;#p;#d;constructor(e,t,i,s=[]){super(s),this.#a=e,this.#p=t,this.#d=i}get adapter(){return this.#p}compileQuery(e){return this.#a.compileQuery(e)}provideConnection(e){return this.#d.provideConnection(e)}withPlugins(e){return new pt(this.#a,this.#p,this.#d,[...this.plugins,...e])}withPlugin(e){return new pt(this.#a,this.#p,this.#d,[...this.plugins,e])}withPluginAtFront(e){return new pt(this.#a,this.#p,this.#d,[e,...this.plugins])}withConnectionProvider(e){return new pt(this.#a,this.#p,e,[...this.plugins])}withoutPlugins(){return new pt(this.#a,this.#p,this.#d,[])}}function dt(){return"undefined"!=typeof performance&&C(performance.now)?performance.now():Date.now()}class ct{#o;#c;#h;#l;#u=new WeakSet;constructor(e,t){this.#o=e,this.#c=t}async init(){this.#h||(this.#h=this.#o.init().catch((e=>(this.#h=void 0,Promise.reject(e))))),await this.#h}async acquireConnection(){await this.init();const e=await this.#o.acquireConnection();return this.#u.has(e)||(this.#m()&&this.#y(e),this.#u.add(e)),e}async releaseConnection(e){await this.#o.releaseConnection(e)}beginTransaction(e,t){return this.#o.beginTransaction(e,t)}commitTransaction(e){return this.#o.commitTransaction(e)}rollbackTransaction(e){return this.#o.rollbackTransaction(e)}async destroy(){this.#h&&(await this.#h,this.#l||(this.#l=this.#o.destroy().catch((e=>(this.#l=void 0,Promise.reject(e))))),await this.#l)}#m(){return this.#c.isLevelEnabled("query")||this.#c.isLevelEnabled("error")}#y(e){const t=e.executeQuery;e.executeQuery=async i=>{const s=dt();try{return await t.call(e,i)}catch(e){throw await this.#w(e,i,s),e}finally{await this.#g(i,s)}}}async#w(e,t,i){await this.#c.error((()=>({level:"error",error:e,query:t,queryDurationMillis:this.#f(i)})))}async#g(e,t){await this.#c.query((()=>({level:"query",query:e,queryDurationMillis:this.#f(t)})))}#f(e){return dt()-e}}class ht{#N;#v;constructor(e){this.#N=e}async provideConnection(e){for(;this.#v;)await this.#v;const t=this.#x(e);return this.#v=t.then((()=>{this.#v=void 0})).catch((()=>{this.#v=void 0})),t}async#x(e){return await e(this.#N)}}const lt=["read uncommitted","read committed","repeatable read","serializable"],ut=e(["query","error"]);class mt{#b;#C;constructor(t){C(t)?(this.#C=t,this.#b=e({query:!0,error:!0})):(this.#C=yt,this.#b=e({query:t.includes("query"),error:t.includes("error")}))}isLevelEnabled(e){return this.#b[e]}async query(e){this.#b.query&&await this.#C(e())}async error(e){this.#b.error&&await this.#C(e())}}function yt(e){"query"===e.level?(console.log(`kysely:query: ${e.query.sql}`),console.log(`kysely:query: duration: ${e.queryDurationMillis.toFixed(1)}ms`)):"error"===e.level&&(e.error instanceof Error?console.error(`kysely:error: ${e.error.stack??e.error.message}`):console.error(`kysely:error: ${e}`))}function wt(e){return E(e)&&C(e.compile)}class gt extends O{#s;constructor(t){let i,s;if(Nt(t))i={executor:t.executor},s={...t};else{const e=t.dialect,n=e.createDriver(),r=e.createQueryCompiler(),o=e.createAdapter(),a=new mt(t.log??[]),p=new ct(n,a),d=new ot(p),c=new pt(r,o,d,t.plugins??[]);i={executor:c},s={config:t,executor:c,dialect:e,driver:p}}super(i),this.#s=e(s)}get schema(){return new nt(this.#s.executor)}get dynamic(){return new rt}get introspection(){return this.#s.dialect.createIntrospector(this.withoutPlugins())}case(e){return new I({node:k.create(A(e)?void 0:W(e))})}get fn(){return L()}transaction(){return new xt({...this.#s})}connection(){return new vt({...this.#s})}withPlugin(e){return new gt({...this.#s,executor:this.#s.executor.withPlugin(e)})}withoutPlugins(){return new gt({...this.#s,executor:this.#s.executor.withoutPlugins()})}withSchema(e){return new gt({...this.#s,executor:this.#s.executor.withPluginAtFront(new v(e))})}withTables(){return new gt({...this.#s})}async destroy(){await this.#s.driver.destroy()}get isTransaction(){return!1}getExecutor(){return this.#s.executor}executeQuery(e,t=f()){const i=wt(e)?e.compile():e;return this.getExecutor().executeQuery(i,t)}}class ft extends gt{#s;constructor(e){super(e),this.#s=e}get isTransaction(){return!0}transaction(){throw new Error("calling the transaction method for a Transaction is not supported")}connection(){throw new Error("calling the connection method for a Transaction is not supported")}async destroy(){throw new Error("calling the destroy method for a Transaction is not supported")}withPlugin(e){return new ft({...this.#s,executor:this.#s.executor.withPlugin(e)})}withoutPlugins(){return new ft({...this.#s,executor:this.#s.executor.withoutPlugins()})}withSchema(e){return new ft({...this.#s,executor:this.#s.executor.withPluginAtFront(new v(e))})}withTables(){return new ft({...this.#s})}}function Nt(e){return E(e)&&E(e.config)&&E(e.driver)&&E(e.executor)&&E(e.dialect)}class vt{#s;constructor(t){this.#s=e(t)}async execute(e){return this.#s.executor.provideConnection((async t=>{const i=this.#s.executor.withConnectionProvider(new ht(t)),s=new gt({...this.#s,executor:i});return await e(s)}))}}o(vt,"don't await ConnectionBuilder instances directly. To execute the query you need to call the `execute` method");class xt{#s;constructor(t){this.#s=e(t)}setIsolationLevel(e){return new xt({...this.#s,isolationLevel:e})}async execute(e){const{isolationLevel:t,...i}=this.#s,s={isolationLevel:t};return function(e){if(e.isolationLevel&&!lt.includes(e.isolationLevel))throw new Error(`invalid transaction isolation level ${e.isolationLevel}`)}(s),this.#s.executor.provideConnection((async t=>{const n=this.#s.executor.withConnectionProvider(new ht(t)),r=new ft({...i,executor:n});try{await this.#s.driver.beginTransaction(t,s);const i=await e(r);return await this.#s.driver.commitTransaction(t),i}catch(e){throw await this.#s.driver.rollbackTransaction(t),e}}))}}o(xt,"don't await TransactionBuilder instances directly. To execute the transaction you need to call the `execute` method");class bt{nodeStack=[];get parentNode(){return this.nodeStack[this.nodeStack.length-2]}#T=e({AliasNode:this.visitAlias.bind(this),ColumnNode:this.visitColumn.bind(this),IdentifierNode:this.visitIdentifier.bind(this),SchemableIdentifierNode:this.visitSchemableIdentifier.bind(this),RawNode:this.visitRaw.bind(this),ReferenceNode:this.visitReference.bind(this),SelectQueryNode:this.visitSelectQuery.bind(this),SelectionNode:this.visitSelection.bind(this),TableNode:this.visitTable.bind(this),FromNode:this.visitFrom.bind(this),SelectAllNode:this.visitSelectAll.bind(this),AndNode:this.visitAnd.bind(this),OrNode:this.visitOr.bind(this),ValueNode:this.visitValue.bind(this),ValueListNode:this.visitValueList.bind(this),PrimitiveValueListNode:this.visitPrimitiveValueList.bind(this),ParensNode:this.visitParens.bind(this),JoinNode:this.visitJoin.bind(this),OperatorNode:this.visitOperator.bind(this),WhereNode:this.visitWhere.bind(this),InsertQueryNode:this.visitInsertQuery.bind(this),DeleteQueryNode:this.visitDeleteQuery.bind(this),ReturningNode:this.visitReturning.bind(this),CreateTableNode:this.visitCreateTable.bind(this),AddColumnNode:this.visitAddColumn.bind(this),ColumnDefinitionNode:this.visitColumnDefinition.bind(this),DropTableNode:this.visitDropTable.bind(this),DataTypeNode:this.visitDataType.bind(this),OrderByNode:this.visitOrderBy.bind(this),OrderByItemNode:this.visitOrderByItem.bind(this),GroupByNode:this.visitGroupBy.bind(this),GroupByItemNode:this.visitGroupByItem.bind(this),UpdateQueryNode:this.visitUpdateQuery.bind(this),ColumnUpdateNode:this.visitColumnUpdate.bind(this),LimitNode:this.visitLimit.bind(this),OffsetNode:this.visitOffset.bind(this),OnConflictNode:this.visitOnConflict.bind(this),OnDuplicateKeyNode:this.visitOnDuplicateKey.bind(this),CreateIndexNode:this.visitCreateIndex.bind(this),DropIndexNode:this.visitDropIndex.bind(this),ListNode:this.visitList.bind(this),PrimaryKeyConstraintNode:this.visitPrimaryKeyConstraint.bind(this),UniqueConstraintNode:this.visitUniqueConstraint.bind(this),ReferencesNode:this.visitReferences.bind(this),CheckConstraintNode:this.visitCheckConstraint.bind(this),WithNode:this.visitWith.bind(this),CommonTableExpressionNode:this.visitCommonTableExpression.bind(this),CommonTableExpressionNameNode:this.visitCommonTableExpressionName.bind(this),HavingNode:this.visitHaving.bind(this),CreateSchemaNode:this.visitCreateSchema.bind(this),DropSchemaNode:this.visitDropSchema.bind(this),AlterTableNode:this.visitAlterTable.bind(this),DropColumnNode:this.visitDropColumn.bind(this),RenameColumnNode:this.visitRenameColumn.bind(this),AlterColumnNode:this.visitAlterColumn.bind(this),ModifyColumnNode:this.visitModifyColumn.bind(this),AddConstraintNode:this.visitAddConstraint.bind(this),DropConstraintNode:this.visitDropConstraint.bind(this),ForeignKeyConstraintNode:this.visitForeignKeyConstraint.bind(this),CreateViewNode:this.visitCreateView.bind(this),DropViewNode:this.visitDropView.bind(this),GeneratedNode:this.visitGenerated.bind(this),DefaultValueNode:this.visitDefaultValue.bind(this),OnNode:this.visitOn.bind(this),ValuesNode:this.visitValues.bind(this),SelectModifierNode:this.visitSelectModifier.bind(this),CreateTypeNode:this.visitCreateType.bind(this),DropTypeNode:this.visitDropType.bind(this),ExplainNode:this.visitExplain.bind(this),DefaultInsertValueNode:this.visitDefaultInsertValue.bind(this),AggregateFunctionNode:this.visitAggregateFunction.bind(this),OverNode:this.visitOver.bind(this),PartitionByNode:this.visitPartitionBy.bind(this),PartitionByItemNode:this.visitPartitionByItem.bind(this),SetOperationNode:this.visitSetOperation.bind(this),BinaryOperationNode:this.visitBinaryOperation.bind(this),UnaryOperationNode:this.visitUnaryOperation.bind(this),UsingNode:this.visitUsing.bind(this),FunctionNode:this.visitFunction.bind(this),CaseNode:this.visitCase.bind(this),WhenNode:this.visitWhen.bind(this),JSONReferenceNode:this.visitJSONReference.bind(this),JSONPathNode:this.visitJSONPath.bind(this),JSONPathLegNode:this.visitJSONPathLeg.bind(this),JSONOperatorChainNode:this.visitJSONOperatorChain.bind(this)});visitNode=e=>{this.nodeStack.push(e),this.#T[e.kind](e),this.nodeStack.pop()}}class Ct extends bt{#E="";#O=[];get numParameters(){return this.#O.length}compileQuery(t){return this.#E="",this.#O=[],this.visitNode(t),e({query:t,sql:this.getSql(),parameters:[...this.#O]})}getSql(){return this.#E}visitSelectQuery(e){const t=void 0!==this.parentNode&&!S.is(this.parentNode)&&!je.is(this.parentNode)&&!q.is(this.parentNode);void 0===this.parentNode&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append("select "),e.distinctOn&&(this.compileDistinctOn(e.distinctOn),this.append(" ")),e.frontModifiers&&e.frontModifiers.length>0&&(this.compileList(e.frontModifiers," "),this.append(" ")),e.selections&&(this.compileList(e.selections),this.append(" ")),this.visitNode(e.from),e.joins&&(this.append(" "),this.compileList(e.joins," ")),e.where&&(this.append(" "),this.visitNode(e.where)),e.groupBy&&(this.append(" "),this.visitNode(e.groupBy)),e.having&&(this.append(" "),this.visitNode(e.having)),e.setOperations&&(this.append(" "),this.compileList(e.setOperations," ")),e.orderBy&&(this.append(" "),this.visitNode(e.orderBy)),e.limit&&(this.append(" "),this.visitNode(e.limit)),e.offset&&(this.append(" "),this.visitNode(e.offset)),e.endModifiers&&e.endModifiers.length>0&&(this.append(" "),this.compileList(e.endModifiers," ")),t&&this.append(")")}visitFrom(e){this.append("from "),this.compileList(e.froms)}visitSelection(e){this.visitNode(e.selection)}visitColumn(e){this.visitNode(e.column)}compileDistinctOn(e){this.append("distinct on ("),this.compileList(e),this.append(")")}compileList(e,t=", "){const i=e.length-1;for(let s=0;s<=i;s++)this.visitNode(e[s]),s<i&&this.append(t)}visitWhere(e){this.append("where "),this.visitNode(e.where)}visitHaving(e){this.append("having "),this.visitNode(e.having)}visitInsertQuery(e){const t=this.nodeStack.find(m.is)!==e;!t&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append(e.replace?"replace":"insert"),e.ignore&&this.append(" ignore"),this.append(" into "),this.visitNode(e.into),e.columns&&(this.append(" ("),this.compileList(e.columns),this.append(")")),e.values&&(this.append(" "),this.visitNode(e.values)),e.onConflict&&(this.append(" "),this.visitNode(e.onConflict)),e.onDuplicateKey&&(this.append(" "),this.visitNode(e.onDuplicateKey)),e.returning&&(this.append(" "),this.visitNode(e.returning)),t&&this.append(")")}visitValues(e){this.append("values "),this.compileList(e.values)}visitDeleteQuery(e){const t=this.nodeStack.find(m.is)!==e;!t&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append("delete "),this.visitNode(e.from),e.using&&(this.append(" "),this.visitNode(e.using)),e.joins&&(this.append(" "),this.compileList(e.joins," ")),e.where&&(this.append(" "),this.visitNode(e.where)),e.orderBy&&(this.append(" "),this.visitNode(e.orderBy)),e.limit&&(this.append(" "),this.visitNode(e.limit)),e.returning&&(this.append(" "),this.visitNode(e.returning)),t&&this.append(")")}visitReturning(e){this.append("returning "),this.compileList(e.selections)}visitAlias(e){this.visitNode(e.node),this.append(" as "),this.visitNode(e.alias)}visitReference(e){e.table&&(this.visitNode(e.table),this.append(".")),this.visitNode(e.column)}visitSelectAll(e){this.append("*")}visitIdentifier(e){this.append(this.getLeftIdentifierWrapper()),this.compileUnwrappedIdentifier(e),this.append(this.getRightIdentifierWrapper())}compileUnwrappedIdentifier(e){if(!D(e.name))throw new Error("a non-string identifier was passed to compileUnwrappedIdentifier.");this.append(this.sanitizeIdentifier(e.name))}visitAnd(e){this.visitNode(e.left),this.append(" and "),this.visitNode(e.right)}visitOr(e){this.visitNode(e.left),this.append(" or "),this.visitNode(e.right)}visitValue(e){e.immediate?this.appendImmediateValue(e.value):this.appendValue(e.value)}visitValueList(e){this.append("("),this.compileList(e.values),this.append(")")}visitPrimitiveValueList(e){this.append("(");const{values:t}=e;for(let e=0;e<t.length;++e)this.appendValue(t[e]),e!==t.length-1&&this.append(", ");this.append(")")}visitParens(e){this.append("("),this.visitNode(e.node),this.append(")")}visitJoin(e){this.append(Et[e.joinType]),this.append(" "),this.visitNode(e.table),e.on&&(this.append(" "),this.visitNode(e.on))}visitOn(e){this.append("on "),this.visitNode(e.on)}visitRaw(e){const{sqlFragments:t,parameters:i}=e;for(let e=0;e<t.length;++e)this.append(t[e]),i.length>e&&this.visitNode(i[e])}visitOperator(e){this.append(e.operator)}visitTable(e){this.visitNode(e.table)}visitSchemableIdentifier(e){e.schema&&(this.visitNode(e.schema),this.append(".")),this.visitNode(e.identifier)}visitCreateTable(e){this.append("create "),e.frontModifiers&&e.frontModifiers.length>0&&(this.compileList(e.frontModifiers," "),this.append(" ")),e.temporary&&this.append("temporary "),this.append("table "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.table),this.append(" ("),this.compileList([...e.columns,...e.constraints??[]]),this.append(")"),e.onCommit&&(this.append(" on commit "),this.append(e.onCommit)),e.endModifiers&&e.endModifiers.length>0&&(this.append(" "),this.compileList(e.endModifiers," "))}visitColumnDefinition(e){this.visitNode(e.column),this.append(" "),this.visitNode(e.dataType),e.unsigned&&this.append(" unsigned"),e.frontModifiers&&e.frontModifiers.length>0&&(this.append(" "),this.compileList(e.frontModifiers," ")),e.generated&&(this.append(" "),this.visitNode(e.generated)),e.defaultTo&&(this.append(" "),this.visitNode(e.defaultTo)),e.notNull&&this.append(" not null"),e.unique&&this.append(" unique"),e.primaryKey&&this.append(" primary key"),e.autoIncrement&&(this.append(" "),this.append(this.getAutoIncrement())),e.references&&(this.append(" "),this.visitNode(e.references)),e.check&&(this.append(" "),this.visitNode(e.check)),e.endModifiers&&e.endModifiers.length>0&&(this.append(" "),this.compileList(e.endModifiers," "))}getAutoIncrement(){return"auto_increment"}visitReferences(e){this.append("references "),this.visitNode(e.table),this.append(" ("),this.compileList(e.columns),this.append(")"),e.onDelete&&(this.append(" on delete "),this.append(e.onDelete)),e.onUpdate&&(this.append(" on update "),this.append(e.onUpdate))}visitDropTable(e){this.append("drop table "),e.ifExists&&this.append("if exists "),this.visitNode(e.table),e.cascade&&this.append(" cascade")}visitDataType(e){this.append(e.dataType)}visitOrderBy(e){this.append("order by "),this.compileList(e.items)}visitOrderByItem(e){this.visitNode(e.orderBy),e.direction&&(this.append(" "),this.visitNode(e.direction))}visitGroupBy(e){this.append("group by "),this.compileList(e.items)}visitGroupByItem(e){this.visitNode(e.groupBy)}visitUpdateQuery(e){const t=this.nodeStack.find(m.is)!==e;!t&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append("update "),this.visitNode(e.table),this.append(" set "),e.updates&&this.compileList(e.updates),e.from&&(this.append(" "),this.visitNode(e.from)),e.joins&&(this.append(" "),this.compileList(e.joins," ")),e.where&&(this.append(" "),this.visitNode(e.where)),e.returning&&(this.append(" "),this.visitNode(e.returning)),t&&this.append(")")}visitColumnUpdate(e){this.visitNode(e.column),this.append(" = "),this.visitNode(e.value)}visitLimit(e){this.append("limit "),this.visitNode(e.limit)}visitOffset(e){this.append("offset "),this.visitNode(e.offset)}visitOnConflict(e){this.append("on conflict"),e.columns?(this.append(" ("),this.compileList(e.columns),this.append(")")):e.constraint?(this.append(" on constraint "),this.visitNode(e.constraint)):e.indexExpression&&(this.append(" ("),this.visitNode(e.indexExpression),this.append(")")),e.indexWhere&&(this.append(" "),this.visitNode(e.indexWhere)),!0===e.doNothing?this.append(" do nothing"):e.updates&&(this.append(" do update set "),this.compileList(e.updates),e.updateWhere&&(this.append(" "),this.visitNode(e.updateWhere)))}visitOnDuplicateKey(e){this.append("on duplicate key update "),this.compileList(e.updates)}visitCreateIndex(e){this.append("create "),e.unique&&this.append("unique "),this.append("index "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.name),e.table&&(this.append(" on "),this.visitNode(e.table)),e.using&&(this.append(" using "),this.visitNode(e.using)),e.columns&&(this.append(" ("),this.compileList(e.columns),this.append(")")),e.where&&(this.append(" "),this.visitNode(e.where))}visitDropIndex(e){this.append("drop index "),e.ifExists&&this.append("if exists "),this.visitNode(e.name),e.table&&(this.append(" on "),this.visitNode(e.table)),e.cascade&&this.append(" cascade")}visitCreateSchema(e){this.append("create schema "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.schema)}visitDropSchema(e){this.append("drop schema "),e.ifExists&&this.append("if exists "),this.visitNode(e.schema),e.cascade&&this.append(" cascade")}visitPrimaryKeyConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("primary key ("),this.compileList(e.columns),this.append(")")}visitUniqueConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("unique ("),this.compileList(e.columns),this.append(")")}visitCheckConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("check ("),this.visitNode(e.expression),this.append(")")}visitForeignKeyConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("foreign key ("),this.compileList(e.columns),this.append(") "),this.visitNode(e.references),e.onDelete&&(this.append(" on delete "),this.append(e.onDelete)),e.onUpdate&&(this.append(" on update "),this.append(e.onUpdate))}visitList(e){this.compileList(e.items)}visitWith(e){this.append("with "),e.recursive&&this.append("recursive "),this.compileList(e.expressions)}visitCommonTableExpression(e){this.visitNode(e.name),this.append(" as "),this.visitNode(e.expression)}visitCommonTableExpressionName(e){this.visitNode(e.table),e.columns&&(this.append("("),this.compileList(e.columns),this.append(")"))}visitAlterTable(e){this.append("alter table "),this.visitNode(e.table),this.append(" "),e.renameTo&&(this.append("rename to "),this.visitNode(e.renameTo)),e.setSchema&&(this.append("set schema "),this.visitNode(e.setSchema)),e.addConstraint&&this.visitNode(e.addConstraint),e.dropConstraint&&this.visitNode(e.dropConstraint),e.columnAlterations&&this.compileList(e.columnAlterations)}visitAddColumn(e){this.append("add column "),this.visitNode(e.column)}visitRenameColumn(e){this.append("rename column "),this.visitNode(e.column),this.append(" to "),this.visitNode(e.renameTo)}visitDropColumn(e){this.append("drop column "),this.visitNode(e.column)}visitAlterColumn(e){this.append("alter column "),this.visitNode(e.column),this.append(" "),e.dataType&&(this.append("type "),this.visitNode(e.dataType),e.dataTypeExpression&&(this.append("using "),this.visitNode(e.dataTypeExpression))),e.setDefault&&(this.append("set default "),this.visitNode(e.setDefault)),e.dropDefault&&this.append("drop default"),e.setNotNull&&this.append("set not null"),e.dropNotNull&&this.append("drop not null")}visitModifyColumn(e){this.append("modify column "),this.visitNode(e.column)}visitAddConstraint(e){this.append("add "),this.visitNode(e.constraint)}visitDropConstraint(e){this.append("drop constraint "),e.ifExists&&this.append("if exists "),this.visitNode(e.constraintName),"cascade"===e.modifier?this.append(" cascade"):"restrict"===e.modifier&&this.append(" restrict")}visitSetOperation(e){this.append(e.operator),this.append(" "),e.all&&this.append("all "),this.visitNode(e.expression)}visitCreateView(e){this.append("create "),e.orReplace&&this.append("or replace "),e.materialized&&this.append("materialized "),e.temporary&&this.append("temporary "),this.append("view "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.name),this.append(" "),e.columns&&(this.append("("),this.compileList(e.columns),this.append(") ")),e.as&&(this.append("as "),this.visitNode(e.as))}visitDropView(e){this.append("drop "),e.materialized&&this.append("materialized "),this.append("view "),e.ifExists&&this.append("if exists "),this.visitNode(e.name),e.cascade&&this.append(" cascade")}visitGenerated(e){this.append("generated "),e.always&&this.append("always "),e.byDefault&&this.append("by default "),this.append("as "),e.identity&&this.append("identity"),e.expression&&(this.append("("),this.visitNode(e.expression),this.append(")")),e.stored&&this.append(" stored")}visitDefaultValue(e){this.append("default "),this.visitNode(e.defaultValue)}visitSelectModifier(e){e.rawModifier?this.visitNode(e.rawModifier):this.append(Tt[e.modifier])}visitCreateType(e){this.append("create type "),this.visitNode(e.name),e.enum&&(this.append(" as enum "),this.visitNode(e.enum))}visitDropType(e){this.append("drop type "),e.ifExists&&this.append("if exists "),this.visitNode(e.name)}visitExplain(e){this.append("explain"),(e.options||e.format)&&(this.append(" "),this.append(this.getLeftExplainOptionsWrapper()),e.options&&(this.visitNode(e.options),e.format&&this.append(this.getExplainOptionsDelimiter())),e.format&&(this.append("format"),this.append(this.getExplainOptionAssignment()),this.append(e.format)),this.append(this.getRightExplainOptionsWrapper()))}visitDefaultInsertValue(e){this.append("default")}visitAggregateFunction(e){this.append(e.func),this.append("("),e.distinct&&this.append("distinct "),this.compileList(e.aggregated),this.append(")"),e.filter&&(this.append(" filter("),this.visitNode(e.filter),this.append(")")),e.over&&(this.append(" "),this.visitNode(e.over))}visitOver(e){this.append("over("),e.partitionBy&&(this.visitNode(e.partitionBy),e.orderBy&&this.append(" ")),e.orderBy&&this.visitNode(e.orderBy),this.append(")")}visitPartitionBy(e){this.append("partition by "),this.compileList(e.items)}visitPartitionByItem(e){this.visitNode(e.partitionBy)}visitBinaryOperation(e){this.visitNode(e.leftOperand),this.append(" "),this.visitNode(e.operator),this.append(" "),this.visitNode(e.rightOperand)}visitUnaryOperation(e){this.visitNode(e.operator),this.isMinusOperator(e.operator)||this.append(" "),this.visitNode(e.operand)}isMinusOperator(e){return B.is(e)&&"-"===e.operator}visitUsing(e){this.append("using "),this.compileList(e.tables)}visitFunction(e){this.append(e.func),this.append("("),this.compileList(e.arguments),this.append(")")}visitCase(e){this.append("case"),e.value&&(this.append(" "),this.visitNode(e.value)),e.when&&(this.append(" "),this.compileList(e.when," ")),e.else&&(this.append(" else "),this.visitNode(e.else)),this.append(" end"),e.isStatement&&this.append(" case")}visitWhen(e){this.append("when "),this.visitNode(e.condition),e.result&&(this.append(" then "),this.visitNode(e.result))}visitJSONReference(e){this.visitNode(e.reference),this.visitNode(e.traversal)}visitJSONPath(e){e.inOperator&&this.visitNode(e.inOperator),this.append("'$");for(const t of e.pathLegs)this.visitNode(t);this.append("'")}visitJSONPathLeg(e){const t="ArrayLocation"===e.type;this.append(t?"[":"."),this.append(String(e.value)),t&&this.append("]")}visitJSONOperatorChain(e){for(let t=0,i=e.values.length;t<i;t++)t===i-1?this.visitNode(e.operator):this.append("->"),this.visitNode(e.values[t])}append(e){this.#E+=e}appendValue(e){this.addParameter(e),this.append(this.getCurrentParameterPlaceholder())}getLeftIdentifierWrapper(){return'"'}getRightIdentifierWrapper(){return'"'}getCurrentParameterPlaceholder(){return"$"+this.numParameters}getLeftExplainOptionsWrapper(){return"("}getExplainOptionAssignment(){return" "}getExplainOptionsDelimiter(){return", "}getRightExplainOptionsWrapper(){return")"}sanitizeIdentifier(e){const t=this.getLeftIdentifierWrapper(),i=this.getRightIdentifierWrapper();let s="";for(const n of e)s+=n,n===t?s+=t:n===i&&(s+=i);return s}addParameter(e){this.#O.push(e)}appendImmediateValue(e){if(D(e))this.append(`'${e}'`);else if(Q(e)||R(e))this.append(e.toString());else if(F(e))this.append("null");else if(V(e))this.appendImmediateValue(e.toISOString());else{if(!J(e))throw new Error(`invalid immediate value ${e}`);this.appendImmediateValue(e.toString())}}}const Tt=e({ForKeyShare:"for key share",ForNoKeyUpdate:"for no key update",ForUpdate:"for update",ForShare:"for share",NoWait:"nowait",SkipLocked:"skip locked",Distinct:"distinct"}),Et=e({InnerJoin:"inner join",LeftJoin:"left join",RightJoin:"right join",FullJoin:"full join",LateralInnerJoin:"inner join lateral",LateralLeftJoin:"left join lateral"}),Ot=e({raw:(t,i=[])=>e({sql:t,query:u.createWithSql(t),parameters:e(i)})});class It{async init(){}async acquireConnection(){return new kt}async beginTransaction(){}async commitTransaction(){}async rollbackTransaction(){}async releaseConnection(){}async destroy(){}}class kt{async executeQuery(){return{rows:[]}}async*streamQuery(){}}class At{get supportsTransactionalDdl(){return!1}get supportsReturning(){return!1}}class Wt{#I;#k=new St;#A;#N;constructor(t){this.#I=e({...t})}async init(){this.#A=C(this.#I.database)?await this.#I.database():this.#I.database,this.#N=new Lt(this.#A),this.#I.onCreateConnection&&await this.#I.onCreateConnection(this.#N)}async acquireConnection(){return await this.#k.lock(),this.#N}async beginTransaction(e){await e.executeQuery(Ot.raw("begin"))}async commitTransaction(e){await e.executeQuery(Ot.raw("commit"))}async rollbackTransaction(e){await e.executeQuery(Ot.raw("rollback"))}async releaseConnection(){this.#k.unlock()}async destroy(){this.#A?.close()}}class Lt{#A;constructor(e){this.#A=e}executeQuery(e){const{sql:t,parameters:i}=e,s=this.#A.prepare(t);if(s.reader)return Promise.resolve({rows:s.all(i)});{const{changes:e,lastInsertRowid:t}=s.run(i),n=null!=e?BigInt(e):void 0;return Promise.resolve({numUpdatedOrDeletedRows:n,numAffectedRows:n,insertId:null!=t?BigInt(t):void 0,rows:[]})}}async*streamQuery(){throw new Error("Sqlite driver doesn't support streaming")}}class St{#W;#L;async lock(){for(;this.#W;)await this.#W;this.#W=new Promise((e=>{this.#L=e}))}unlock(){const e=this.#L;this.#W=void 0,this.#L=void 0,e?.()}}const qt=/"/g;class Pt extends Ct{getCurrentParameterPlaceholder(){return"?"}getLeftExplainOptionsWrapper(){return""}getRightExplainOptionsWrapper(){return""}getLeftIdentifierWrapper(){return'"'}getRightIdentifierWrapper(){return'"'}getAutoIncrement(){return"autoincrement"}sanitizeIdentifier(e){return e.replace(qt,'""')}visitDefaultInsertValue(e){this.append("null")}}class Dt{transformQuery(e){return e.node}async transformResult(e){return e.result}}const Mt="kysely_migration",Bt="kysely_migration_lock",Qt="migration_lock",Rt=e({__noMigrations__:!0});class _t{#s;constructor(t){this.#s=e(t)}async getMigrations(){const e=await this.#S(this.#q)?await this.#s.db.withPlugin(this.#P).selectFrom(this.#q).select(["name","timestamp"]).execute():[];return(await this.#D()).map((({name:t,...i})=>{const s=e.find((e=>e.name===t));return{name:t,migration:i,executedAt:s?new Date(s.timestamp):void 0}}))}async migrateToLatest(){return this.#M((({migrations:e})=>e.length-1))}async migrateTo(e){return this.#M((({migrations:t})=>{if(e===Rt)return-1;const i=t.findIndex((t=>t.name===e));if(-1===i)throw new Error(`migration "${e}" doesn't exist`);return i}))}async migrateUp(){return this.#M((({currentIndex:e,migrations:t})=>Math.min(e+1,t.length-1)))}async migrateDown(){return this.#M((({currentIndex:e})=>Math.max(e-1,-1)))}async#M(e){try{return await this.#B(),await this.#Q(e)}catch(e){return e instanceof Ut?e.resultSet:{error:e}}}get#R(){return this.#s.migrationTableSchema}get#q(){return this.#s.migrationTableName??Mt}get#_(){return this.#s.migrationLockTableName??Bt}get#P(){return this.#R?new v(this.#R):new Dt}async#B(){await this.#U(),await this.#F(),await this.#V(),await this.#$()}async#U(){if(this.#R&&!await this.#J())try{await this.#s.db.schema.createSchema(this.#R).ifNotExists().execute()}catch(e){if(!await this.#J())throw e}}async#F(){if(!await this.#S(this.#q))try{this.#R&&await this.#s.db.schema.createSchema(this.#R).ifNotExists().execute(),await this.#s.db.schema.withPlugin(this.#P).createTable(this.#q).ifNotExists().addColumn("name","varchar(255)",(e=>e.notNull().primaryKey())).addColumn("timestamp","varchar(255)",(e=>e.notNull())).execute()}catch(e){if(!await this.#S(this.#q))throw e}}async#V(){if(!await this.#S(this.#_))try{await this.#s.db.schema.withPlugin(this.#P).createTable(this.#_).ifNotExists().addColumn("id","varchar(255)",(e=>e.notNull().primaryKey())).addColumn("is_locked","integer",(e=>e.notNull().defaultTo(0))).execute()}catch(e){if(!await this.#S(this.#_))throw e}}async#$(){if(!await this.#K())try{await this.#s.db.withPlugin(this.#P).insertInto(this.#_).values({id:Qt,is_locked:0}).execute()}catch(e){if(!await this.#K())throw e}}async#J(){return(await this.#s.db.introspection.getSchemas()).some((e=>e.name===this.#R))}async#S(e){const t=this.#R;return(await this.#s.db.introspection.getTables({withInternalKyselyTables:!0})).some((i=>i.name===e&&(!t||i.schema===t)))}async#K(){return!!await this.#s.db.withPlugin(this.#P).selectFrom(this.#_).where("id","=",Qt).select("id").executeTakeFirst()}async#Q(t){const i=this.#s.db.getExecutor().adapter,s=e({lockTable:this.#s.migrationLockTableName??Bt,lockRowId:Qt,lockTableSchema:this.#s.migrationTableSchema}),n=async e=>{try{await i.acquireMigrationLock(e,s);const n=await this.#j(e);if(0===n.migrations.length)return{results:[]};const r=t(n);return void 0===r?{results:[]}:r<n.currentIndex?await this.#G(e,n,r):r>n.currentIndex?await this.#z(e,n,r):{results:[]}}finally{await i.releaseMigrationLock(e,s)}};return i.supportsTransactionalDdl?this.#s.db.transaction().execute(n):this.#s.db.connection().execute(n)}async#j(t){const i=await this.#D(),s=await this.#H(t);return this.#Y(i,s),e({migrations:i,currentIndex:i.findIndex((e=>e.name===K(s)))})}async#D(){const e=await this.#s.provider.getMigrations();return Object.keys(e).sort().map((t=>({...e[t],name:t})))}async#H(e){return(await e.withPlugin(this.#P).selectFrom(this.#q).select("name").orderBy("name").execute()).map((e=>e.name))}#Y(e,t){for(const i of t)if(!e.some((e=>e.name===i)))throw new Error(`corrupted migrations: previously executed migration ${i} is missing`);for(let i=0;i<t.length;++i)if(e[i].name!==t[i])throw new Error(`corrupted migrations: expected previously executed migration ${t[i]} to be at index ${i} but ${e[i].name} was found in its place. New migrations must always have a name that comes alphabetically after the last executed migration.`)}async#G(e,t,i){const s=[];for(let e=t.currentIndex;e>i;--e)s.push({migrationName:t.migrations[e].name,direction:"Down",status:"NotExecuted"});for(let i=0;i<s.length;++i){const n=t.migrations.find((e=>e.name===s[i].migrationName));try{n.down&&(await n.down(e),await e.withPlugin(this.#P).deleteFrom(this.#q).where("name","=",n.name).execute(),s[i]={migrationName:n.name,direction:"Down",status:"Success"})}catch(e){throw s[i]={migrationName:n.name,direction:"Down",status:"Error"},new Ut({error:e,results:s})}}return{results:s}}async#z(e,t,i){const s=[];for(let e=t.currentIndex+1;e<=i;++e)s.push({migrationName:t.migrations[e].name,direction:"Up",status:"NotExecuted"});for(let i=0;i<s.length;++i){const n=t.migrations.find((e=>e.name===s[i].migrationName));try{await n.up(e),await e.withPlugin(this.#P).insertInto(this.#q).values({name:n.name,timestamp:(new Date).toISOString()}).execute(),s[i]={migrationName:n.name,direction:"Up",status:"Success"}}catch(e){throw s[i]={migrationName:n.name,direction:"Up",status:"Error"},new Ut({error:e,results:s})}}return{results:s}}}class Ut extends Error{#X;constructor(e){super(),this.#X=e}get resultSet(){return this.#X}}class Ft{#A;constructor(e){this.#A=e}async getSchemas(){return[]}async getTables(e={withInternalKyselyTables:!1}){let t=this.#A.selectFrom("sqlite_master").where("type","in",["table","view"]).where("name","not like","sqlite_%").select("name").orderBy("name").$castTo();e.withInternalKyselyTables||(t=t.where("name","!=",Mt).where("name","!=",Bt));const i=await t.execute();return Promise.all(i.map((({name:e})=>this.#Z(e))))}async getMetadata(e){return{tables:await this.getTables(e)}}async#Z(e){const t=this.#A,i=await t.selectFrom("sqlite_master").where("name","=",e).select(["sql","type"]).$castTo().executeTakeFirstOrThrow(),s=i.sql?.split(/[\(\),]/)?.find((e=>e.toLowerCase().includes("autoincrement")))?.trimStart()?.split(/\s+/)?.[0]?.replace(/["`]/g,""),n=await t.selectFrom(j`pragma_table_info(${e})`.as("table_info")).select(["name","type","notnull","dflt_value"]).orderBy("cid").execute();return{name:e,isView:"view"===i.type,columns:n.map((e=>({name:e.name,dataType:e.type,isNullable:!e.notnull,isAutoIncrementing:e.name===s,hasDefaultValue:null!=e.dflt_value})))}}}class Vt{get supportsTransactionalDdl(){return!1}get supportsReturning(){return!0}async acquireMigrationLock(){}async releaseMigrationLock(){}}class $t{#I;constructor(t){this.#I=e({...t})}createDriver(){return new Wt(this.#I)}createQueryCompiler(){return new Pt}createAdapter(){return new Vt}createIntrospector(e){return new Ft(e)}}const Jt=/"/g;class Kt extends Ct{sanitizeIdentifier(e){return e.replace(Jt,'""')}}class jt{#A;constructor(e){this.#A=e}async getSchemas(){return(await this.#A.selectFrom("pg_catalog.pg_namespace").select("nspname").$castTo().execute()).map((e=>({name:e.nspname})))}async getTables(e={withInternalKyselyTables:!1}){let t=this.#A.selectFrom("pg_catalog.pg_attribute as a").innerJoin("pg_catalog.pg_class as c","a.attrelid","c.oid").innerJoin("pg_catalog.pg_namespace as ns","c.relnamespace","ns.oid").innerJoin("pg_catalog.pg_type as typ","a.atttypid","typ.oid").innerJoin("pg_catalog.pg_namespace as dtns","typ.typnamespace","dtns.oid").select(["a.attname as column","a.attnotnull as not_null","a.atthasdef as has_default","c.relname as table","c.relkind as table_type","ns.nspname as schema","typ.typname as type","dtns.nspname as type_schema",this.#A.selectFrom("pg_class").select(j`true`.as("auto_incrementing")).whereRef("relnamespace","=","c.relnamespace").where("relkind","=","S").where("relname","=",j`c.relname || '_' || a.attname || '_seq'`).as("auto_incrementing")]).where((e=>e.or([e("c.relkind","=","r"),e("c.relkind","=","v")]))).where("ns.nspname","!~","^pg_").where("ns.nspname","!=","information_schema").where("a.attnum",">=",0).where("a.attisdropped","!=",!0).orderBy("ns.nspname").orderBy("c.relname").orderBy("a.attnum").$castTo();e.withInternalKyselyTables||(t=t.where("c.relname","!=",Mt).where("c.relname","!=",Bt));const i=await t.execute();return this.#ee(i)}async getMetadata(e){return{tables:await this.getTables(e)}}#ee(t){return t.reduce(((t,i)=>{let s=t.find((e=>e.name===i.table&&e.schema===i.schema));return s||(s=e({name:i.table,isView:"v"===i.table_type,schema:i.schema,columns:[]}),t.push(s)),s.columns.push(e({name:i.column,dataType:i.type,dataTypeSchema:i.type_schema,isNullable:!i.not_null,isAutoIncrementing:!!i.auto_incrementing,hasDefaultValue:i.has_default})),t}),[])}}const Gt=BigInt("3853314791062309107");class zt extends At{get supportsTransactionalDdl(){return!0}get supportsReturning(){return!0}async acquireMigrationLock(e){await j`select pg_advisory_xact_lock(${j.lit(Gt)})`.execute(e)}async releaseMigrationLock(){}}function Ht(e,t){if(E(i=e)&&D(i.stack)&&t.stack){const i=t.stack.split("\n").slice(1).join("\n");return e.stack+=`\n${i}`,e}var i;return e}const Yt=Symbol();class Xt{#I;#u=new WeakMap;#te;constructor(t){this.#I=e({...t})}async init(){this.#te=C(this.#I.pool)?await this.#I.pool():this.#I.pool}async acquireConnection(){const e=await this.#ie();let t=this.#u.get(e);return t||(t=new Zt(e),this.#u.set(e,t),this.#I?.onCreateConnection&&await this.#I.onCreateConnection(t)),t}async#ie(){return new Promise(((e,t)=>{this.#te.getConnection((async(i,s)=>{i?t(i):e(s)}))}))}async beginTransaction(e,t){t.isolationLevel&&await e.executeQuery(Ot.raw(`set transaction isolation level ${t.isolationLevel}`)),await e.executeQuery(Ot.raw("begin"))}async commitTransaction(e){await e.executeQuery(Ot.raw("commit"))}async rollbackTransaction(e){await e.executeQuery(Ot.raw("rollback"))}async releaseConnection(e){e[Yt]()}async destroy(){return new Promise(((e,t)=>{this.#te.end((i=>{i?t(i):e()}))}))}}class Zt{#se;constructor(e){this.#se=e}async executeQuery(e){try{const i=await this.#ne(e);if(E(t=i)&&"insertId"in t&&"affectedRows"in t){const{insertId:e,affectedRows:t,changedRows:s}=i,n=null!=t?BigInt(t):void 0,r=null!=s?BigInt(s):void 0;return{insertId:null!=e&&"0"!==e.toString()?BigInt(e):void 0,numUpdatedOrDeletedRows:n,numAffectedRows:n,numChangedRows:r,rows:[]}}return Array.isArray(i)?{rows:i}:{rows:[]}}catch(e){throw Ht(e,new Error)}var t}#ne(e){return new Promise(((t,i)=>{this.#se.query(e.sql,e.parameters,((e,s)=>{e?i(e):t(s)}))}))}async*streamQuery(e,t){const i=this.#se.query(e.sql,e.parameters).stream({objectMode:!0});try{for await(const e of i)yield{rows:[e]}}catch(e){if(e&&"object"==typeof e&&"code"in e&&"ERR_STREAM_PREMATURE_CLOSE"===e.code)return;throw e}}[Yt](){this.#se.release()}}const ei=/`/g;class ti extends Ct{getCurrentParameterPlaceholder(){return"?"}getLeftExplainOptionsWrapper(){return""}getExplainOptionAssignment(){return"="}getExplainOptionsDelimiter(){return" "}getRightExplainOptionsWrapper(){return""}getLeftIdentifierWrapper(){return"`"}getRightIdentifierWrapper(){return"`"}sanitizeIdentifier(e){return e.replace(ei,"``")}}class ii{#A;constructor(e){this.#A=e}async getSchemas(){return(await this.#A.selectFrom("information_schema.schemata").select("schema_name").$castTo().execute()).map((e=>({name:e.SCHEMA_NAME})))}async getTables(e={withInternalKyselyTables:!1}){let t=this.#A.selectFrom("information_schema.columns as columns").innerJoin("information_schema.tables as tables",(e=>e.onRef("columns.TABLE_CATALOG","=","tables.TABLE_CATALOG").onRef("columns.TABLE_SCHEMA","=","tables.TABLE_SCHEMA").onRef("columns.TABLE_NAME","=","tables.TABLE_NAME"))).select(["columns.COLUMN_NAME","columns.COLUMN_DEFAULT","columns.TABLE_NAME","columns.TABLE_SCHEMA","tables.TABLE_TYPE","columns.IS_NULLABLE","columns.DATA_TYPE","columns.EXTRA"]).where("columns.TABLE_SCHEMA","=",j`database()`).orderBy("columns.TABLE_NAME").orderBy("columns.ORDINAL_POSITION").$castTo();e.withInternalKyselyTables||(t=t.where("columns.TABLE_NAME","!=",Mt).where("columns.TABLE_NAME","!=",Bt));const i=await t.execute();return this.#ee(i)}async getMetadata(e){return{tables:await this.getTables(e)}}#ee(t){return t.reduce(((t,i)=>{let s=t.find((e=>e.name===i.TABLE_NAME));return s||(s=e({name:i.TABLE_NAME,isView:"VIEW"===i.TABLE_TYPE,schema:i.TABLE_SCHEMA,columns:[]}),t.push(s)),s.columns.push(e({name:i.COLUMN_NAME,dataType:i.DATA_TYPE,isNullable:"YES"===i.IS_NULLABLE,isAutoIncrementing:i.EXTRA.toLowerCase().includes("auto_increment"),hasDefaultValue:null!==i.COLUMN_DEFAULT})),t}),[])}}const si="ea586330-2c93-47c8-908d-981d9d270f9d";class ni extends At{get supportsTransactionalDdl(){return!1}get supportsReturning(){return!1}async acquireMigrationLock(e){await j`select get_lock(${j.lit(si)}, ${j.lit(3600)})`.execute(e)}async releaseMigrationLock(e){await j`select release_lock(${j.lit(si)})`.execute(e)}}class ri{#I;constructor(e){this.#I=e}createDriver(){return new Xt(this.#I)}createQueryCompiler(){return new ti}createAdapter(){return new ni}createIntrospector(e){return new ii(e)}}const oi=Symbol();class pi{#I;#u=new WeakMap;#te;constructor(t){this.#I=e({...t})}async init(){this.#te=C(this.#I.pool)?await this.#I.pool():this.#I.pool}async acquireConnection(){const e=await this.#te.connect();let t=this.#u.get(e);return t||(t=new di(e,{cursor:this.#I.cursor??null}),this.#u.set(e,t),this.#I?.onCreateConnection&&await this.#I.onCreateConnection(t)),t}async beginTransaction(e,t){t.isolationLevel?await e.executeQuery(Ot.raw(`start transaction isolation level ${t.isolationLevel}`)):await e.executeQuery(Ot.raw("begin"))}async commitTransaction(e){await e.executeQuery(Ot.raw("commit"))}async rollbackTransaction(e){await e.executeQuery(Ot.raw("rollback"))}async releaseConnection(e){e[oi]()}async destroy(){if(this.#te){const e=this.#te;this.#te=void 0,await e.end()}}}class di{#re;#oe;constructor(e,t){this.#re=e,this.#oe=t}async executeQuery(e){try{const t=await this.#re.query(e.sql,[...e.parameters]);if("INSERT"===t.command||"UPDATE"===t.command||"DELETE"===t.command){const e=BigInt(t.rowCount);return{numUpdatedOrDeletedRows:e,numAffectedRows:e,rows:t.rows??[]}}return{rows:t.rows??[]}}catch(e){throw Ht(e,new Error)}}async*streamQuery(e,t){if(!this.#oe.cursor)throw new Error("'cursor' is not present in your postgres dialect config. It's required to make streaming work in postgres.");if(!Number.isInteger(t)||t<=0)throw new Error("chunkSize must be a positive integer");const i=this.#re.query(new this.#oe.cursor(e.sql,e.parameters.slice()));try{for(;;){const e=await i.read(t);if(0===e.length)break;yield{rows:e}}}finally{await i.close()}}[oi](){this.#re.release()}}class ci{#I;constructor(e){this.#I=e}createDriver(){return new pi(this.#I)}createQueryCompiler(){return new Kt}createAdapter(){return new zt}createIntrospector(e){return new jt(e)}}class hi{#s;constructor(e){this.#s=e}async getMigrations(){const e={},t=await this.#s.fs.readdir(this.#s.migrationFolder);for(const i of t)if(i.endsWith(".js")||i.endsWith(".ts")&&!i.endsWith(".d.ts")||i.endsWith(".mjs")||i.endsWith(".mts")&&!i.endsWith(".d.mts")){const t=await import(this.#s.path.join(this.#s.migrationFolder,i)),s=i.substring(0,i.lastIndexOf("."));li(t?.default)?e[s]=t.default:li(t)&&(e[s]=t)}return e}}function li(e){return E(e)&&C(e.up)}class ui extends h{#ae;constructor(e){super(),this.#ae=e}transformIdentifier(e){return e=super.transformIdentifier(e),{...e,name:this.#ae(e.name)}}}function mi(e){return e>="0"&&e<="9"}function yi(e){const t=new Map;return i=>{let s=t.get(i);return s||(s=e(i),t.set(i,s)),s}}class wi{opt;#pe;#ae;#de;constructor(e={}){this.opt=e,this.#pe=function({upperCase:e=!1}={}){return yi((t=>{if(0===t.length)return t;e&&function(e){for(let t=1,i=e.length;t<i;++t){const i=e[t];if("_"!==i&&i!==i.toUpperCase())return!1}return!0}(t)&&(t=t.toLowerCase());let i=t[0];for(let e=1,s=t.length;e<s;++e){const s=t[e],n=t[e-1];"_"!==s&&(i+="_"===n?s.toUpperCase():s)}return i}))}(e),this.#ae=function({upperCase:e=!1,underscoreBeforeDigits:t=!1,underscoreBetweenUppercaseLetters:i=!1}={}){return yi((s=>{if(0===s.length)return s;const n=s.toUpperCase(),r=s.toLowerCase();let o=r[0];for(let e=1,a=s.length;e<a;++e){const a=s[e],p=s[e-1],d=n[e],c=n[e-1],h=r[e],l=r[e-1];t&&mi(a)&&!mi(p)?o+="_"+a:o+=a===d&&d!==h?i||p!==c||c===l?"_"+h:h:a}return e?o.toUpperCase():o}))}(e),this.#de=new ui(this.snakeCase.bind(this))}transformQuery(e){return this.#de.transformNode(e.node)}async transformResult(e){return e.result.rows&&Array.isArray(e.result.rows)?{...e.result,rows:e.result.rows.map((e=>this.mapRow(e)))}:e.result}mapRow(e){return Object.keys(e).reduce(((t,i)=>{let s=e[i];return Array.isArray(s)?s=s.map((e=>gi(e,this.opt)?this.mapRow(e):e)):gi(s,this.opt)&&(s=this.mapRow(s)),t[this.camelCase(i)]=s,t}),{})}snakeCase(e){return this.#ae(e)}camelCase(e){return this.#pe(e)}}function gi(e,t){return E(e)&&!V(e)&&!G(e)&&!z(e)&&!t?.maintainNestedObjectKeys}class fi extends h{transformSelectQuery(e){return this.#ce(super.transformSelectQuery(e))}transformUpdateQuery(e){return this.#ce(super.transformUpdateQuery(e))}transformDeleteQuery(e){return this.#ce(super.transformDeleteQuery(e))}#ce(t){return t.joins&&0!==t.joins.length?e({...t,joins:this.#he(t.joins)}):t}#he(t){const i=[];for(let e=0;e<t.length;++e){let s=!1;for(let i=e+1;i<t.length;++i)if(H(t[e],t[i])){s=!0;break}s||i.push(t[e])}return e(i)}}class Ni{#n=new fi;transformQuery(e){return this.#n.transformNode(e.node)}transformResult(e){return Promise.resolve(e.result)}}class vi{transformQuery(e){return e.node}async transformResult(e){const{result:t}=e;return{...e.result,rows:t.rows.map(xi)}}}function xi(e){return Object.entries(e).reduce(((e,[t,i])=>{if(D(i)&&null!=i.match(/^[\[\{]/))try{i=JSON.parse(i)}catch(e){}return e[t]=i,e}),{})}const bi=e({is:e=>"ListNode"===e.kind,create:t=>e({kind:"ListNode",items:e(t)})});export{de as AddColumnNode,Ie as AddConstraintNode,Le as AlterColumnBuilder,We as AlterColumnNode,Me as AlterTableBuilder,Be as AlterTableColumnAlteringBuilder,ee as AlterTableNode,Se as AlteredColumnBuilder,wi as CamelCasePlugin,I as CaseBuilder,k as CaseNode,ue as CheckConstraintNode,ve as ColumnDefinitionBuilder,ce as ColumnDefinitionNode,s as ColumnNode,Ot as CompiledQuery,vt as ConnectionBuilder,Re as CreateIndexBuilder,te as CreateIndexNode,_e as CreateSchemaBuilder,ie as CreateSchemaNode,Ve as CreateTableBuilder,ne as CreateTableNode,Ze as CreateTypeBuilder,Xe as CreateTypeNode,ze as CreateViewBuilder,je as CreateViewNode,Bt as DEFAULT_MIGRATION_LOCK_TABLE,Mt as DEFAULT_MIGRATION_TABLE,Ce as DataTypeNode,Ni as DeduplicateJoinsPlugin,ot as DefaultConnectionProvider,Ct as DefaultQueryCompiler,pt as DefaultQueryExecutor,fe as DefaultValueNode,At as DialectAdapterBase,he as DropColumnNode,Ae as DropConstraintNode,$e as DropIndexBuilder,re as DropIndexNode,Je as DropSchemaBuilder,oe as DropSchemaNode,Ke as DropTableBuilder,pe as DropTableNode,tt as DropTypeBuilder,et as DropTypeNode,Ye as DropViewBuilder,He as DropViewNode,It as DummyDriver,rt as DynamicModule,hi as FileMigrationProvider,Oe as ForeignKeyConstraintBuilder,Ee as ForeignKeyConstraintNode,ge as GeneratedNode,t as IdentifierNode,S as InsertQueryNode,gt as Kysely,ut as LOG_LEVELS,bi as ListNode,mt as Log,Qt as MIGRATION_LOCK_ID,_t as Migrator,xe as ModifyColumnNode,ni as MysqlAdapter,ri as MysqlDialect,Xt as MysqlDriver,ii as MysqlIntrospector,ti as MysqlQueryCompiler,Rt as NO_MIGRATIONS,se as ON_COMMIT_ACTIONS,me as ON_MODIFY_FOREIGN_ACTIONS,h as OperationNodeTransformer,bt as OperationNodeVisitor,B as OperatorNode,vi as ParseJSONResultsPlugin,zt as PostgresAdapter,ci as PostgresDialect,pi as PostgresDriver,jt as PostgresIntrospector,Kt as PostgresQueryCompiler,Ue as PrimaryConstraintNode,O as QueryCreator,m as QueryNode,u as RawNode,ye as ReferencesNode,le as RenameColumnNode,nt as SchemaModule,p as SelectAllNode,q as SetOperationNode,ht as SingleConnectionProvider,Vt as SqliteAdapter,$t as SqliteDialect,Wt as SqliteDriver,Ft as SqliteIntrospector,Pt as SqliteQueryCompiler,lt as TRANSACTION_ISOLATION_LEVELS,ft as Transaction,xt as TransactionBuilder,ke as UniqueConstraintNode,g as ValueListNode,r as ValueNode,v as WithSchemaPlugin,L as createFunctionModule,wt as isCompilable,Nt as isKyselyProps,n as isOperationNodeSource,j as sql};
