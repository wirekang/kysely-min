function isUndefined(e){return void 0===e||void 0===e}function isString(e){return"string"==typeof e}function isNumber(e){return"number"==typeof e}function isBoolean(e){return"boolean"==typeof e}function isNull(e){return null===e}function isDate(e){return e instanceof Date}function isBigInt(e){return"bigint"==typeof e}function isBuffer(e){return"undefined"!=typeof Buffer&&Buffer.isBuffer(e)}function isFunction(e){return"function"==typeof e}function isObject(e){return"object"==typeof e&&null!==e}function isArrayBufferOrView(e){return e instanceof ArrayBuffer||ArrayBuffer.isView(e)}function getLast(e){return e[e.length-1]}function freeze(e){return Object.freeze(e)}function isReadonlyArray(e){return Array.isArray(e)}function noop(e){return e}function compare(e,r){return isReadonlyArray(e)&&isReadonlyArray(r)?function compareArrays(e,r){if(e.length!==r.length)return!1;for(let t=0;t<e.length;++t)if(!compare(e[t],r[t]))return!1;return!0}(e,r):isObject(e)&&isObject(r)?function compareObjects(e,r){if(isBuffer(e)&&isBuffer(r))return function compareBuffers(e,r){return 0===Buffer.compare(e,r)}(e,r);if(isDate(e)&&isDate(r))return function compareDates(e,r){return e.getTime()===r.getTime()}(e,r);return function compareGenericObjects(e,r){const t=Object.keys(e),o=Object.keys(r);if(t.length!==o.length)return!1;for(const o of t)if(!compare(e[o],r[o]))return!1;return!0}(e,r)}(e,r):e===r}const e=freeze({is:e=>"IdentifierNode"===e.kind,create:e=>freeze({kind:"IdentifierNode",name:e})}),r=freeze({is:e=>"SchemableIdentifierNode"===e.kind,create:r=>freeze({kind:"SchemableIdentifierNode",identifier:e.create(r)}),createWithSchema:(r,t)=>freeze({kind:"SchemableIdentifierNode",schema:e.create(r),identifier:e.create(t)})}),t=freeze({is:e=>"TableNode"===e.kind,create:e=>freeze({kind:"TableNode",table:r.create(e)}),createWithSchema:(e,t)=>freeze({kind:"TableNode",table:r.createWithSchema(e,t)})}),o=freeze({is:e=>"AliasNode"===e.kind,create:(e,r)=>freeze({kind:"AliasNode",node:e,alias:r})});function isOperationNodeSource(e){return isObject(e)&&isFunction(e.toOperationNode)}function isExpression(e){return isObject(e)&&"expressionType"in e&&isOperationNodeSource(e)}function isAliasedExpression(e){return isObject(e)&&"expression"in e&&isString(e.alias)&&isOperationNodeSource(e)}const n=freeze({is:e=>"SelectModifierNode"===e.kind,create:e=>freeze({kind:"SelectModifierNode",modifier:e}),createWithExpression:e=>freeze({kind:"SelectModifierNode",rawModifier:e})}),i=freeze({is:e=>"AndNode"===e.kind,create:(e,r)=>freeze({kind:"AndNode",left:e,right:r})}),s=freeze({is:e=>"OrNode"===e.kind,create:(e,r)=>freeze({kind:"OrNode",left:e,right:r})}),a=freeze({is:e=>"OnNode"===e.kind,create:e=>freeze({kind:"OnNode",on:e}),cloneWithOperation:(e,r,t)=>freeze({...e,on:"And"===r?i.create(e.on,t):s.create(e.on,t)})}),d=freeze({is:e=>"JoinNode"===e.kind,create:(e,r)=>freeze({kind:"JoinNode",joinType:e,table:r,on:void 0}),createWithOn:(e,r,t)=>freeze({kind:"JoinNode",joinType:e,table:r,on:a.create(t)}),cloneWithOn:(e,r)=>freeze({...e,on:e.on?a.cloneWithOperation(e.on,"And",r):a.create(r)}),cloneWithOrOn:(e,r)=>freeze({...e,on:e.on?a.cloneWithOperation(e.on,"Or",r):a.create(r)})}),u=freeze({is:e=>"BinaryOperationNode"===e.kind,create:(e,r,t)=>freeze({kind:"BinaryOperationNode",leftOperand:e,operator:r,rightOperand:t})}),p=freeze({is:e=>"RawNode"===e.kind,create:(e,r)=>freeze({kind:"RawNode",sqlFragments:freeze(e),parameters:freeze(r)}),createWithSql:e=>p.create([e],[]),createWithChild:e=>p.create(["",""],[e]),createWithChildren:e=>p.create(new Array(e.length+1).fill(""),e)}),l=["=","==","!=","<>",">",">=","<","<=","in","not in","is","is not","like","not like","match","ilike","not ilike","@>","<@","?","?&","!<","!>","<=>","!~","~","~*","!~*","@@","@@@","!!","<->"],c=["+","-","*","/","%","^","&","|","#","<<",">>"],h=[...l,...c,"&&","||"],f=["exists","not exists"],N=["not","-",...f],m=[...h,...N],y=freeze({is:e=>"OperatorNode"===e.kind,create:e=>freeze({kind:"OperatorNode",operator:e})});function isOperator(e){return isString(e)&&m.includes(e)}function isBinaryOperator(e){return isString(e)&&h.includes(e)}function isComparisonOperator(e){return isString(e)&&l.includes(e)}function isArithmeticOperator(e){return isString(e)&&c.includes(e)}const w=freeze({is:e=>"ParensNode"===e.kind,create:e=>freeze({kind:"ParensNode",node:e})}),g=freeze({is:e=>"ColumnNode"===e.kind,create:r=>freeze({kind:"ColumnNode",column:e.create(r)})}),x=freeze({is:e=>"SelectAllNode"===e.kind,create:()=>freeze({kind:"SelectAllNode"})}),O=freeze({is:e=>"ReferenceNode"===e.kind,create:(e,r)=>freeze({kind:"ReferenceNode",table:e,column:r}),createSelectAll:e=>freeze({kind:"ReferenceNode",table:e,column:x.create()})});function parseSimpleReferenceExpression(e){return isString(e)?parseStringReference(e):e.toOperationNode()}function parseReferenceExpressionOrList(e){return isReadonlyArray(e)?e.map((e=>parseReferenceExpression(e))):[parseReferenceExpression(e)]}function parseReferenceExpression(e){return isExpressionOrFactory(e)?parseExpression(e):parseSimpleReferenceExpression(e)}function parseStringReference(e){if(e.includes(".")){const r=e.split(".").map(trim$1);if(3===r.length)return function parseStringReferenceWithTableAndSchema(e){const[r,o,n]=e;return O.create(t.createWithSchema(r,o),g.create(n))}(r);if(2===r.length)return function parseStringReferenceWithTable(e){const[r,o]=e;return O.create(t.create(r),g.create(o))}(r);throw new Error(`invalid column reference ${e}`)}return g.create(e)}function parseColumnName(e){return g.create(e)}function trim$1(e){return e.trim()}const B=freeze({is:e=>"PrimitiveValueListNode"===e.kind,create:e=>freeze({kind:"PrimitiveValueListNode",values:freeze([...e])})}),W=freeze({is:e=>"ValueListNode"===e.kind,create:e=>freeze({kind:"ValueListNode",values:freeze(e)})}),E=freeze({is:e=>"ValueNode"===e.kind,create:e=>freeze({kind:"ValueNode",value:e}),createImmediate:e=>freeze({kind:"ValueNode",value:e,immediate:!0})});function parseValueExpressionOrList(e){return isReadonlyArray(e)?function parseValueExpressionList(e){if(e.some(isExpressionOrFactory))return W.create(e.map((e=>parseValueExpression(e))));return B.create(e)}(e):parseValueExpression(e)}function parseValueExpression(e){return isExpressionOrFactory(e)?parseExpression(e):E.create(e)}const q=freeze({is:e=>"OrderByNode"===e.kind,create:e=>freeze({kind:"OrderByNode",items:freeze([e])}),cloneWithItem:(e,r)=>freeze({...e,items:freeze([...e.items,r])})}),b=freeze({is:e=>"PartitionByNode"===e.kind,create:e=>freeze({kind:"PartitionByNode",items:freeze(e)}),cloneWithItems:(e,r)=>freeze({...e,items:freeze([...e.items,...r])})}),C=freeze({is:e=>"OverNode"===e.kind,create:()=>freeze({kind:"OverNode"}),cloneWithOrderByItem:(e,r)=>freeze({...e,orderBy:e.orderBy?q.cloneWithItem(e.orderBy,r):q.create(r)}),cloneWithPartitionByItems:(e,r)=>freeze({...e,partitionBy:e.partitionBy?b.cloneWithItems(e.partitionBy,r):b.create(r)})}),S=freeze({is:e=>"FromNode"===e.kind,create:e=>freeze({kind:"FromNode",froms:freeze(e)}),cloneWithFroms:(e,r)=>freeze({...e,froms:freeze([...e.froms,...r])})}),Q=freeze({is:e=>"GroupByNode"===e.kind,create:e=>freeze({kind:"GroupByNode",items:freeze(e)}),cloneWithItems:(e,r)=>freeze({...e,items:freeze([...e.items,...r])})}),z=freeze({is:e=>"HavingNode"===e.kind,create:e=>freeze({kind:"HavingNode",having:e}),cloneWithOperation:(e,r,t)=>freeze({...e,having:"And"===r?i.create(e.having,t):s.create(e.having,t)})}),k=freeze({is:e=>"SelectQueryNode"===e.kind,create:(e,r)=>freeze({kind:"SelectQueryNode",from:S.create(e),...r&&{with:r}}),cloneWithSelections:(e,r)=>freeze({...e,selections:e.selections?freeze([...e.selections,...r]):freeze(r)}),cloneWithDistinctOn:(e,r)=>freeze({...e,distinctOn:e.distinctOn?freeze([...e.distinctOn,...r]):freeze(r)}),cloneWithFrontModifier:(e,r)=>freeze({...e,frontModifiers:e.frontModifiers?freeze([...e.frontModifiers,r]):freeze([r])}),cloneWithEndModifier:(e,r)=>freeze({...e,endModifiers:e.endModifiers?freeze([...e.endModifiers,r]):freeze([r])}),cloneWithOrderByItem:(e,r)=>freeze({...e,orderBy:e.orderBy?q.cloneWithItem(e.orderBy,r):q.create(r)}),cloneWithGroupByItems:(e,r)=>freeze({...e,groupBy:e.groupBy?Q.cloneWithItems(e.groupBy,r):Q.create(r)}),cloneWithLimit:(e,r)=>freeze({...e,limit:r}),cloneWithOffset:(e,r)=>freeze({...e,offset:r}),cloneWithHaving:(e,r)=>freeze({...e,having:e.having?z.cloneWithOperation(e.having,"And",r):z.create(r)}),cloneWithOrHaving:(e,r)=>freeze({...e,having:e.having?z.cloneWithOperation(e.having,"Or",r):z.create(r)}),cloneWithSetOperation:(e,r)=>freeze({...e,setOperations:e.setOperations?freeze([...e.setOperations,r]):freeze([r])}),cloneWithoutSelections:e=>freeze({...e,selections:[]}),cloneWithoutLimit:e=>freeze({...e,limit:void 0}),cloneWithoutOffset:e=>freeze({...e,offset:void 0}),cloneWithoutOrderBy:e=>freeze({...e,orderBy:void 0})}),I=freeze({is:e=>"UnaryOperationNode"===e.kind,create:(e,r)=>freeze({kind:"UnaryOperationNode",operator:e,operand:r})});function parseExists(e){return parseUnaryOperation("exists",e)}function parseNotExists(e){return parseUnaryOperation("not exists",e)}function parseUnaryOperation(e,r){return I.create(y.create(e),parseReferenceExpression(r))}function preventAwait(e,r){Object.defineProperties(e.prototype,{then:{enumerable:!1,value:()=>{throw new Error(r)}}})}class JoinBuilder{#e;constructor(e){this.#e=freeze(e)}on(...e){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOn(this.#e.joinNode,parseOn(e))})}orOn(...e){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOrOn(this.#e.joinNode,parseOn(e))})}onRef(e,r,t){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOn(this.#e.joinNode,parseReferentialComparison(e,r,t))})}orOnRef(e,r,t){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOrOn(this.#e.joinNode,parseReferentialComparison(e,r,t))})}onExists(e){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOn(this.#e.joinNode,parseExists(e))})}onNotExists(e){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOn(this.#e.joinNode,parseNotExists(e))})}orOnExists(e){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOrOn(this.#e.joinNode,parseExists(e))})}orOnNotExists(e){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOrOn(this.#e.joinNode,parseNotExists(e))})}onTrue(){return new JoinBuilder({...this.#e,joinNode:d.cloneWithOn(this.#e.joinNode,p.createWithSql("true"))})}$call(e){return e(this)}toOperationNode(){return this.#e.joinNode}}preventAwait(JoinBuilder,"don't await JoinBuilder instances. They are never executed directly and are always just a part of a query.");const R=freeze({is:e=>"OrderByItemNode"===e.kind,create:(e,r)=>freeze({kind:"OrderByItemNode",orderBy:e,direction:r})});function parseOrderBy(e,r){return R.create(function parseOrderByExpression(e){return parseReferenceExpression(e)}(e),function parseOrderByDirectionExpression(e){if(!e)return;return"asc"===e||"desc"===e?p.createWithSql(e):e.toOperationNode()}(r))}const v=freeze({is:e=>"PartitionByItemNode"===e.kind,create:e=>freeze({kind:"PartitionByItemNode",partitionBy:e})});function parsePartitionBy(e){return parseReferenceExpressionOrList(e).map(v.create)}class OverBuilder{#e;constructor(e){this.#e=freeze(e)}orderBy(e,r){return new OverBuilder({overNode:C.cloneWithOrderByItem(this.#e.overNode,parseOrderBy(e,r))})}partitionBy(e){return new OverBuilder({overNode:C.cloneWithPartitionByItems(this.#e.overNode,parsePartitionBy(e))})}$call(e){return e(this)}toOperationNode(){return this.#e.overNode}}preventAwait(OverBuilder,"don't await OverBuilder instances. They are never executed directly and are always just a part of a query.");const A=freeze({is:e=>"SelectionNode"===e.kind,create:e=>freeze({kind:"SelectionNode",selection:e}),createSelectAll:()=>freeze({kind:"SelectionNode",selection:x.create()}),createSelectAllFromTable:e=>freeze({kind:"SelectionNode",selection:O.createSelectAll(e)})});class DynamicReferenceBuilder{#r;get dynamicReference(){return this.#r}get refType(){}constructor(e){this.#r=e}toOperationNode(){return parseSimpleReferenceExpression(this.#r)}}function parseSelectArg(e){return isFunction(e)?parseSelectArg(e(expressionBuilder())):isReadonlyArray(e)?e.map((e=>parseSelectExpression(e))):[parseSelectExpression(e)]}function parseSelectExpression(r){return isString(r)?A.create(function parseAliasedStringReference(r){const t=" as ";if(r.includes(t)){const[n,i]=r.split(t).map(trim$1);return o.create(parseStringReference(n),e.create(i))}return parseStringReference(r)}(r)):function isDynamicReferenceBuilder(e){return isObject(e)&&isOperationNodeSource(e)&&isString(e.dynamicReference)}(r)?A.create(r.toOperationNode()):A.create(parseAliasedExpression(r))}function parseSelectAll(e){return e?Array.isArray(e)?e.map(parseSelectAllArg):[parseSelectAllArg(e)]:[A.createSelectAll()]}function parseSelectAllArg(e){if(isString(e))return A.createSelectAllFromTable(parseTable(e));throw new Error(`invalid value selectAll expression: ${JSON.stringify(e)}`)}const T=freeze({is:e=>"ValuesNode"===e.kind,create:e=>freeze({kind:"ValuesNode",values:freeze(e)})}),F=freeze({is:e=>"DefaultInsertValueNode"===e.kind,create:()=>freeze({kind:"DefaultInsertValueNode"})});function parseInsertExpression(e){const r=isFunction(e)?e(expressionBuilder()):e;return function parseInsertColumnsAndValues(e){const r=function parseColumnNamesAndIndexes(e){const r=new Map;for(const t of e){const e=Object.keys(t);for(const o of e)r.has(o)||void 0===t[o]||r.set(o,r.size)}return r}(e);return[freeze([...r.keys()].map(g.create)),T.create(e.map((e=>function parseRowValues(e,r){const t=Object.keys(e),o=Array.from({length:r.size});let n=!1;for(const i of t){const t=r.get(i);if(isUndefined(t))continue;const s=e[i];(isUndefined(s)||isExpressionOrFactory(s))&&(n=!0),o[t]=s}const i=t.length<r.size;if(i||n){const e=F.create();return W.create(o.map((r=>isUndefined(r)?e:parseValueExpression(r))))}return B.create(o)}(e,r))))]}(isReadonlyArray(r)?r:freeze([r]))}const D=freeze({is:e=>"InsertQueryNode"===e.kind,create:(e,r,t)=>freeze({kind:"InsertQueryNode",into:e,...r&&{with:r},replace:t}),cloneWith:(e,r)=>freeze({...e,...r})}),U=freeze({is:e=>"UpdateQueryNode"===e.kind,create:(e,r)=>freeze({kind:"UpdateQueryNode",table:e,...r&&{with:r}}),cloneWithFromItems:(e,r)=>freeze({...e,from:e.from?S.cloneWithFroms(e.from,r):S.create(r)}),cloneWithUpdates:(e,r)=>freeze({...e,updates:e.updates?freeze([...e.updates,...r]):r})}),L=freeze({is:e=>"UsingNode"===e.kind,create:e=>freeze({kind:"UsingNode",tables:freeze(e)}),cloneWithTables:(e,r)=>freeze({...e,tables:freeze([...e.tables,...r])})}),J=freeze({is:e=>"DeleteQueryNode"===e.kind,create:(e,r)=>freeze({kind:"DeleteQueryNode",from:S.create(e),...r&&{with:r}}),cloneWithOrderByItem:(e,r)=>freeze({...e,orderBy:e.orderBy?q.cloneWithItem(e.orderBy,r):q.create(r)}),cloneWithLimit:(e,r)=>freeze({...e,limit:r}),cloneWithUsing:(e,r)=>freeze({...e,using:void 0!==e.using?L.cloneWithTables(e.using,r):L.create(r)})}),j=freeze({is:e=>"WhereNode"===e.kind,create:e=>freeze({kind:"WhereNode",where:e}),cloneWithOperation:(e,r,t)=>freeze({...e,where:"And"===r?i.create(e.where,t):s.create(e.where,t)})}),V=freeze({is:e=>"ReturningNode"===e.kind,create:e=>freeze({kind:"ReturningNode",selections:freeze(e)}),cloneWithSelections:(e,r)=>freeze({...e,selections:e.selections?freeze([...e.selections,...r]):freeze(r)})}),P=freeze({is:e=>"ExplainNode"===e.kind,create:(e,r)=>freeze({kind:"ExplainNode",format:e,options:r})}),$=freeze({is:e=>k.is(e)||D.is(e)||U.is(e)||J.is(e),cloneWithWhere:(e,r)=>freeze({...e,where:e.where?j.cloneWithOperation(e.where,"And",r):j.create(r)}),cloneWithOrWhere:(e,r)=>freeze({...e,where:e.where?j.cloneWithOperation(e.where,"Or",r):j.create(r)}),cloneWithJoin:(e,r)=>freeze({...e,joins:e.joins?freeze([...e.joins,r]):freeze([r])}),cloneWithReturning:(e,r)=>freeze({...e,returning:e.returning?V.cloneWithSelections(e.returning,r):V.create(r)}),cloneWithoutWhere:e=>freeze({...e,where:void 0}),cloneWithExplain:(e,r,t)=>freeze({...e,explain:P.create(r,t?.toOperationNode())})}),M=freeze({is:e=>"ColumnUpdateNode"===e.kind,create:(e,r)=>freeze({kind:"ColumnUpdateNode",column:e,value:r})});function parseUpdateExpression(e){const r=isFunction(e)?e(expressionBuilder()):e;return Object.entries(r).filter((([e,r])=>void 0!==r)).map((([e,r])=>M.create(g.create(e),parseValueExpression(r))))}const K=freeze({is:e=>"OnDuplicateKeyNode"===e.kind,create:e=>freeze({kind:"OnDuplicateKeyNode",updates:e})});class InsertResult{#t;#o;constructor(e,r){this.#t=e,this.#o=r}get insertId(){return this.#t}get numInsertedOrUpdatedRows(){return this.#o}}for(const e of["insertId","numInsertedOrUpdatedRows"])Object.defineProperty(InsertResult.prototype,e,{enumerable:!0});class NoResultError extends Error{node;constructor(e){super("no result"),this.node=e}}function isNoResultErrorConstructor(e){return Object.prototype.hasOwnProperty.call(e,"prototype")}const H=freeze({is:e=>"OnConflictNode"===e.kind,create:()=>freeze({kind:"OnConflictNode"}),cloneWith:(e,r)=>freeze({...e,...r}),cloneWithIndexWhere:(e,r)=>freeze({...e,indexWhere:e.indexWhere?j.cloneWithOperation(e.indexWhere,"And",r):j.create(r)}),cloneWithIndexOrWhere:(e,r)=>freeze({...e,indexWhere:e.indexWhere?j.cloneWithOperation(e.indexWhere,"Or",r):j.create(r)}),cloneWithUpdateWhere:(e,r)=>freeze({...e,updateWhere:e.updateWhere?j.cloneWithOperation(e.updateWhere,"And",r):j.create(r)}),cloneWithUpdateOrWhere:(e,r)=>freeze({...e,updateWhere:e.updateWhere?j.cloneWithOperation(e.updateWhere,"Or",r):j.create(r)}),cloneWithoutIndexWhere:e=>freeze({...e,indexWhere:void 0}),cloneWithoutUpdateWhere:e=>freeze({...e,updateWhere:void 0})});class OnConflictBuilder{#e;constructor(e){this.#e=freeze(e)}column(e){const r=g.create(e);return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWith(this.#e.onConflictNode,{columns:this.#e.onConflictNode.columns?freeze([...this.#e.onConflictNode.columns,r]):freeze([r])})})}columns(e){const r=e.map(g.create);return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWith(this.#e.onConflictNode,{columns:this.#e.onConflictNode.columns?freeze([...this.#e.onConflictNode.columns,...r]):freeze(r)})})}constraint(r){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWith(this.#e.onConflictNode,{constraint:e.create(r)})})}expression(e){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWith(this.#e.onConflictNode,{indexExpression:e.toOperationNode()})})}where(...e){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWithIndexWhere(this.#e.onConflictNode,parseWhere(e))})}whereRef(e,r,t){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWithIndexWhere(this.#e.onConflictNode,parseReferentialComparison(e,r,t))})}orWhere(...e){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWithIndexOrWhere(this.#e.onConflictNode,parseWhere(e))})}orWhereRef(e,r,t){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWithIndexOrWhere(this.#e.onConflictNode,parseReferentialComparison(e,r,t))})}whereExists(e){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWithIndexWhere(this.#e.onConflictNode,parseExists(e))})}whereNotExists(e){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWithIndexWhere(this.#e.onConflictNode,parseNotExists(e))})}orWhereExists(e){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWithIndexOrWhere(this.#e.onConflictNode,parseExists(e))})}orWhereNotExists(e){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWithIndexOrWhere(this.#e.onConflictNode,parseNotExists(e))})}clearWhere(){return new OnConflictBuilder({...this.#e,onConflictNode:H.cloneWithoutIndexWhere(this.#e.onConflictNode)})}doNothing(){return new OnConflictDoNothingBuilder({...this.#e,onConflictNode:H.cloneWith(this.#e.onConflictNode,{doNothing:!0})})}doUpdateSet(e){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:H.cloneWith(this.#e.onConflictNode,{updates:parseUpdateExpression(e)})})}$call(e){return e(this)}}preventAwait(OnConflictBuilder,"don't await OnConflictBuilder instances.");class OnConflictDoNothingBuilder{#e;constructor(e){this.#e=freeze(e)}toOperationNode(){return this.#e.onConflictNode}}preventAwait(OnConflictDoNothingBuilder,"don't await OnConflictDoNothingBuilder instances.");class OnConflictUpdateBuilder{#e;constructor(e){this.#e=freeze(e)}where(...e){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:H.cloneWithUpdateWhere(this.#e.onConflictNode,parseWhere(e))})}whereRef(e,r,t){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:H.cloneWithUpdateWhere(this.#e.onConflictNode,parseReferentialComparison(e,r,t))})}orWhere(...e){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:H.cloneWithUpdateOrWhere(this.#e.onConflictNode,parseWhere(e))})}orWhereRef(e,r,t){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:H.cloneWithUpdateOrWhere(this.#e.onConflictNode,parseReferentialComparison(e,r,t))})}whereExists(e){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:H.cloneWithUpdateWhere(this.#e.onConflictNode,parseExists(e))})}whereNotExists(e){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:H.cloneWithUpdateWhere(this.#e.onConflictNode,parseNotExists(e))})}orWhereExists(e){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:H.cloneWithUpdateOrWhere(this.#e.onConflictNode,parseExists(e))})}orWhereNotExists(e){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:H.cloneWithUpdateOrWhere(this.#e.onConflictNode,parseNotExists(e))})}clearWhere(){return new OnConflictUpdateBuilder({...this.#e,onConflictNode:H.cloneWithoutUpdateWhere(this.#e.onConflictNode)})}$call(e){return e(this)}toOperationNode(){return this.#e.onConflictNode}}preventAwait(OnConflictUpdateBuilder,"don't await OnConflictUpdateBuilder instances.");class InsertQueryBuilder{#e;constructor(e){this.#e=freeze(e)}values(e){const[r,t]=parseInsertExpression(e);return new InsertQueryBuilder({...this.#e,queryNode:D.cloneWith(this.#e.queryNode,{columns:r,values:t})})}columns(e){return new InsertQueryBuilder({...this.#e,queryNode:D.cloneWith(this.#e.queryNode,{columns:freeze(e.map(g.create))})})}expression(e){return new InsertQueryBuilder({...this.#e,queryNode:D.cloneWith(this.#e.queryNode,{values:parseExpression(e)})})}ignore(){return new InsertQueryBuilder({...this.#e,queryNode:D.cloneWith(this.#e.queryNode,{ignore:!0})})}onConflict(e){return new InsertQueryBuilder({...this.#e,queryNode:D.cloneWith(this.#e.queryNode,{onConflict:e(new OnConflictBuilder({onConflictNode:H.create()})).toOperationNode()})})}onDuplicateKeyUpdate(e){return new InsertQueryBuilder({...this.#e,queryNode:D.cloneWith(this.#e.queryNode,{onDuplicateKey:K.create(parseUpdateExpression(e))})})}returning(e){return new InsertQueryBuilder({...this.#e,queryNode:$.cloneWithReturning(this.#e.queryNode,parseSelectArg(e))})}returningAll(){return new InsertQueryBuilder({...this.#e,queryNode:$.cloneWithReturning(this.#e.queryNode,parseSelectAll())})}$call(e){return e(this)}call(e){return this.$call(e)}$if(e,r){return e?r(this):new InsertQueryBuilder({...this.#e})}if(e,r){return this.$if(e,r)}$castTo(){return new InsertQueryBuilder(this.#e)}castTo(){return this.$castTo()}$assertType(){return new InsertQueryBuilder(this.#e)}assertType(){return new InsertQueryBuilder(this.#e)}withPlugin(e){return new InsertQueryBuilder({...this.#e,executor:this.#e.executor.withPlugin(e)})}toOperationNode(){return this.#e.executor.transformQuery(this.#e.queryNode,this.#e.queryId)}compile(){return this.#e.executor.compileQuery(this.toOperationNode(),this.#e.queryId)}async execute(){const e=this.compile(),r=e.query,t=await this.#e.executor.executeQuery(e,this.#e.queryId);return this.#e.executor.adapter.supportsReturning&&r.returning?t.rows:[new InsertResult(t.insertId,t.numAffectedRows??t.numUpdatedOrDeletedRows)]}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#e.executor.stream(r,e,this.#e.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new InsertQueryBuilder({...this.#e,queryNode:$.cloneWithExplain(this.#e.queryNode,e,r)});return await t.execute()}}preventAwait(InsertQueryBuilder,"don't await InsertQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");class DeleteResult{#n;constructor(e){this.#n=e}get numDeletedRows(){return this.#n}}Object.defineProperty(DeleteResult.prototype,"numDeletedRows",{enumerable:!0});const G=freeze({is:e=>"LimitNode"===e.kind,create:e=>freeze({kind:"LimitNode",limit:E.create(e)})});class DeleteQueryBuilder{#e;constructor(e){this.#e=freeze(e)}where(...e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseWhere(e))})}whereRef(e,r,t){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseReferentialComparison(e,r,t))})}orWhere(...e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseWhere(e))})}orWhereRef(e,r,t){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseReferentialComparison(e,r,t))})}whereExists(e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseExists(e))})}whereNotExists(e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseNotExists(e))})}orWhereExists(e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseExists(e))})}orWhereNotExists(e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseNotExists(e))})}clearWhere(){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithoutWhere(this.#e.queryNode)})}using(e){return new DeleteQueryBuilder({...this.#e,queryNode:J.cloneWithUsing(this.#e.queryNode,parseTableExpressionOrList(e))})}innerJoin(...e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("InnerJoin",e))})}leftJoin(...e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("LeftJoin",e))})}rightJoin(...e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("RightJoin",e))})}fullJoin(...e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("FullJoin",e))})}returning(e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithReturning(this.#e.queryNode,parseSelectArg(e))})}returningAll(e){return new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithReturning(this.#e.queryNode,parseSelectAll(e))})}orderBy(e,r){return new DeleteQueryBuilder({...this.#e,queryNode:J.cloneWithOrderByItem(this.#e.queryNode,parseOrderBy(e,r))})}limit(e){return new DeleteQueryBuilder({...this.#e,queryNode:J.cloneWithLimit(this.#e.queryNode,G.create(e))})}$call(e){return e(this)}call(e){return this.$call(e)}$if(e,r){return e?r(this):new DeleteQueryBuilder({...this.#e})}if(e,r){return this.$if(e,r)}$castTo(){return new DeleteQueryBuilder(this.#e)}castTo(){return this.$castTo()}$assertType(){return new DeleteQueryBuilder(this.#e)}assertType(){return new DeleteQueryBuilder(this.#e)}withPlugin(e){return new DeleteQueryBuilder({...this.#e,executor:this.#e.executor.withPlugin(e)})}toOperationNode(){return this.#e.executor.transformQuery(this.#e.queryNode,this.#e.queryId)}compile(){return this.#e.executor.compileQuery(this.toOperationNode(),this.#e.queryId)}async execute(){const e=this.compile(),r=e.query,t=await this.#e.executor.executeQuery(e,this.#e.queryId);return this.#e.executor.adapter.supportsReturning&&r.returning?t.rows:[new DeleteResult(t.numAffectedRows??t.numUpdatedOrDeletedRows??BigInt(0))]}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#e.executor.stream(r,e,this.#e.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new DeleteQueryBuilder({...this.#e,queryNode:$.cloneWithExplain(this.#e.queryNode,e,r)});return await t.execute()}}preventAwait(DeleteQueryBuilder,"don't await DeleteQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");class UpdateResult{#i;constructor(e){this.#i=e}get numUpdatedRows(){return this.#i}}Object.defineProperty(UpdateResult.prototype,"numUpdatedRows",{enumerable:!0});class UpdateQueryBuilder{#e;constructor(e){this.#e=freeze(e)}where(...e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseWhere(e))})}whereRef(e,r,t){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseReferentialComparison(e,r,t))})}orWhere(...e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseWhere(e))})}orWhereRef(e,r,t){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseReferentialComparison(e,r,t))})}whereExists(e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseExists(e))})}whereNotExists(e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseNotExists(e))})}orWhereExists(e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseExists(e))})}orWhereNotExists(e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseNotExists(e))})}clearWhere(){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithoutWhere(this.#e.queryNode)})}from(e){return new UpdateQueryBuilder({...this.#e,queryNode:U.cloneWithFromItems(this.#e.queryNode,parseTableExpressionOrList(e))})}innerJoin(...e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("InnerJoin",e))})}leftJoin(...e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("LeftJoin",e))})}rightJoin(...e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("RightJoin",e))})}fullJoin(...e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("FullJoin",e))})}set(e){return new UpdateQueryBuilder({...this.#e,queryNode:U.cloneWithUpdates(this.#e.queryNode,parseUpdateExpression(e))})}returning(e){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithReturning(this.#e.queryNode,parseSelectArg(e))})}returningAll(){return new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithReturning(this.#e.queryNode,parseSelectAll())})}$call(e){return e(this)}call(e){return this.$call(e)}$if(e,r){return e?r(this):new UpdateQueryBuilder({...this.#e})}if(e,r){return this.$if(e,r)}$castTo(){return new UpdateQueryBuilder(this.#e)}castTo(){return this.$castTo()}$assertType(){return new UpdateQueryBuilder(this.#e)}assertType(){return new UpdateQueryBuilder(this.#e)}withPlugin(e){return new UpdateQueryBuilder({...this.#e,executor:this.#e.executor.withPlugin(e)})}toOperationNode(){return this.#e.executor.transformQuery(this.#e.queryNode,this.#e.queryId)}compile(){return this.#e.executor.compileQuery(this.toOperationNode(),this.#e.queryId)}async execute(){const e=this.compile(),r=e.query,t=await this.#e.executor.executeQuery(e,this.#e.queryId);return this.#e.executor.adapter.supportsReturning&&r.returning?t.rows:[new UpdateResult(t.numAffectedRows??t.numUpdatedOrDeletedRows??BigInt(0))]}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#e.executor.stream(r,e,this.#e.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new UpdateQueryBuilder({...this.#e,queryNode:$.cloneWithExplain(this.#e.queryNode,e,r)});return await t.execute()}}preventAwait(UpdateQueryBuilder,"don't await UpdateQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");const X=freeze({is:e=>"CommonTableExpressionNode"===e.kind,create:(e,r)=>freeze({kind:"CommonTableExpressionNode",name:e,expression:r})}),Y=freeze({is:e=>"CommonTableExpressionNameNode"===e.kind,create:(e,r)=>freeze({kind:"CommonTableExpressionNameNode",table:t.create(e),columns:r?freeze(r.map(g.create)):void 0})});function parseCommonTableExpression(e,r){const t=r(function createQueryCreator(){return new QueryCreator({executor:oe})}());return X.create(function parseCommonTableExpressionName(e){if(e.includes("(")){const r=e.split(/[\(\)]/),t=r[0],o=r[1].split(",").map((e=>e.trim()));return Y.create(t,o)}return Y.create(e)}(e),t.toOperationNode())}const Z=freeze({is:e=>"WithNode"===e.kind,create:(e,r)=>freeze({kind:"WithNode",expressions:freeze([e]),...r}),cloneWithExpression:(e,r)=>freeze({...e,expressions:freeze([...e.expressions,r])})}),_=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9"];function createQueryId(){return new LazyQueryId}class LazyQueryId{#s;get queryId(){return void 0===this.#s&&(this.#s=function randomString(e){let r="";for(let t=0;t<e;++t)r+=_[~~(Math.random()*_.length)];return r}(8)),this.#s}}class OperationNodeTransformer{nodeStack=[];#a=freeze({AliasNode:this.transformAlias.bind(this),ColumnNode:this.transformColumn.bind(this),IdentifierNode:this.transformIdentifier.bind(this),SchemableIdentifierNode:this.transformSchemableIdentifier.bind(this),RawNode:this.transformRaw.bind(this),ReferenceNode:this.transformReference.bind(this),SelectQueryNode:this.transformSelectQuery.bind(this),SelectionNode:this.transformSelection.bind(this),TableNode:this.transformTable.bind(this),FromNode:this.transformFrom.bind(this),SelectAllNode:this.transformSelectAll.bind(this),AndNode:this.transformAnd.bind(this),OrNode:this.transformOr.bind(this),ValueNode:this.transformValue.bind(this),ValueListNode:this.transformValueList.bind(this),PrimitiveValueListNode:this.transformPrimitiveValueList.bind(this),ParensNode:this.transformParens.bind(this),JoinNode:this.transformJoin.bind(this),OperatorNode:this.transformOperator.bind(this),WhereNode:this.transformWhere.bind(this),InsertQueryNode:this.transformInsertQuery.bind(this),DeleteQueryNode:this.transformDeleteQuery.bind(this),ReturningNode:this.transformReturning.bind(this),CreateTableNode:this.transformCreateTable.bind(this),AddColumnNode:this.transformAddColumn.bind(this),ColumnDefinitionNode:this.transformColumnDefinition.bind(this),DropTableNode:this.transformDropTable.bind(this),DataTypeNode:this.transformDataType.bind(this),OrderByNode:this.transformOrderBy.bind(this),OrderByItemNode:this.transformOrderByItem.bind(this),GroupByNode:this.transformGroupBy.bind(this),GroupByItemNode:this.transformGroupByItem.bind(this),UpdateQueryNode:this.transformUpdateQuery.bind(this),ColumnUpdateNode:this.transformColumnUpdate.bind(this),LimitNode:this.transformLimit.bind(this),OffsetNode:this.transformOffset.bind(this),OnConflictNode:this.transformOnConflict.bind(this),OnDuplicateKeyNode:this.transformOnDuplicateKey.bind(this),CreateIndexNode:this.transformCreateIndex.bind(this),DropIndexNode:this.transformDropIndex.bind(this),ListNode:this.transformList.bind(this),PrimaryKeyConstraintNode:this.transformPrimaryKeyConstraint.bind(this),UniqueConstraintNode:this.transformUniqueConstraint.bind(this),ReferencesNode:this.transformReferences.bind(this),CheckConstraintNode:this.transformCheckConstraint.bind(this),WithNode:this.transformWith.bind(this),CommonTableExpressionNode:this.transformCommonTableExpression.bind(this),CommonTableExpressionNameNode:this.transformCommonTableExpressionName.bind(this),HavingNode:this.transformHaving.bind(this),CreateSchemaNode:this.transformCreateSchema.bind(this),DropSchemaNode:this.transformDropSchema.bind(this),AlterTableNode:this.transformAlterTable.bind(this),DropColumnNode:this.transformDropColumn.bind(this),RenameColumnNode:this.transformRenameColumn.bind(this),AlterColumnNode:this.transformAlterColumn.bind(this),ModifyColumnNode:this.transformModifyColumn.bind(this),AddConstraintNode:this.transformAddConstraint.bind(this),DropConstraintNode:this.transformDropConstraint.bind(this),ForeignKeyConstraintNode:this.transformForeignKeyConstraint.bind(this),CreateViewNode:this.transformCreateView.bind(this),DropViewNode:this.transformDropView.bind(this),GeneratedNode:this.transformGenerated.bind(this),DefaultValueNode:this.transformDefaultValue.bind(this),OnNode:this.transformOn.bind(this),ValuesNode:this.transformValues.bind(this),SelectModifierNode:this.transformSelectModifier.bind(this),CreateTypeNode:this.transformCreateType.bind(this),DropTypeNode:this.transformDropType.bind(this),ExplainNode:this.transformExplain.bind(this),DefaultInsertValueNode:this.transformDefaultInsertValue.bind(this),AggregateFunctionNode:this.transformAggregateFunction.bind(this),OverNode:this.transformOver.bind(this),PartitionByNode:this.transformPartitionBy.bind(this),PartitionByItemNode:this.transformPartitionByItem.bind(this),SetOperationNode:this.transformSetOperation.bind(this),BinaryOperationNode:this.transformBinaryOperation.bind(this),UnaryOperationNode:this.transformUnaryOperation.bind(this),UsingNode:this.transformUsing.bind(this),FunctionNode:this.transformFunction.bind(this)});transformNode(e){if(!e)return e;this.nodeStack.push(e);const r=this.transformNodeImpl(e);return this.nodeStack.pop(),freeze(r)}transformNodeImpl(e){return this.#a[e.kind](e)}transformNodeList(e){return e?freeze(e.map((e=>this.transformNode(e)))):e}transformSelectQuery(e){return{kind:"SelectQueryNode",from:this.transformNode(e.from),selections:this.transformNodeList(e.selections),distinctOn:this.transformNodeList(e.distinctOn),joins:this.transformNodeList(e.joins),groupBy:this.transformNode(e.groupBy),orderBy:this.transformNode(e.orderBy),where:this.transformNode(e.where),frontModifiers:this.transformNodeList(e.frontModifiers),endModifiers:this.transformNodeList(e.endModifiers),limit:this.transformNode(e.limit),offset:this.transformNode(e.offset),with:this.transformNode(e.with),having:this.transformNode(e.having),explain:this.transformNode(e.explain),setOperations:this.transformNodeList(e.setOperations)}}transformSelection(e){return{kind:"SelectionNode",selection:this.transformNode(e.selection)}}transformColumn(e){return{kind:"ColumnNode",column:this.transformNode(e.column)}}transformAlias(e){return{kind:"AliasNode",node:this.transformNode(e.node),alias:this.transformNode(e.alias)}}transformTable(e){return{kind:"TableNode",table:this.transformNode(e.table)}}transformFrom(e){return{kind:"FromNode",froms:this.transformNodeList(e.froms)}}transformReference(e){return{kind:"ReferenceNode",table:this.transformNode(e.table),column:this.transformNode(e.column)}}transformAnd(e){return{kind:"AndNode",left:this.transformNode(e.left),right:this.transformNode(e.right)}}transformOr(e){return{kind:"OrNode",left:this.transformNode(e.left),right:this.transformNode(e.right)}}transformValueList(e){return{kind:"ValueListNode",values:this.transformNodeList(e.values)}}transformParens(e){return{kind:"ParensNode",node:this.transformNode(e.node)}}transformJoin(e){return{kind:"JoinNode",joinType:e.joinType,table:this.transformNode(e.table),on:this.transformNode(e.on)}}transformRaw(e){return{kind:"RawNode",sqlFragments:freeze([...e.sqlFragments]),parameters:this.transformNodeList(e.parameters)}}transformWhere(e){return{kind:"WhereNode",where:this.transformNode(e.where)}}transformInsertQuery(e){return{kind:"InsertQueryNode",into:this.transformNode(e.into),columns:this.transformNodeList(e.columns),values:this.transformNode(e.values),returning:this.transformNode(e.returning),onConflict:this.transformNode(e.onConflict),onDuplicateKey:this.transformNode(e.onDuplicateKey),with:this.transformNode(e.with),ignore:e.ignore,replace:e.replace,explain:this.transformNode(e.explain)}}transformValues(e){return{kind:"ValuesNode",values:this.transformNodeList(e.values)}}transformDeleteQuery(e){return{kind:"DeleteQueryNode",from:this.transformNode(e.from),using:this.transformNode(e.using),joins:this.transformNodeList(e.joins),where:this.transformNode(e.where),returning:this.transformNode(e.returning),with:this.transformNode(e.with),orderBy:this.transformNode(e.orderBy),limit:this.transformNode(e.limit),explain:this.transformNode(e.explain)}}transformReturning(e){return{kind:"ReturningNode",selections:this.transformNodeList(e.selections)}}transformCreateTable(e){return{kind:"CreateTableNode",table:this.transformNode(e.table),columns:this.transformNodeList(e.columns),constraints:this.transformNodeList(e.constraints),temporary:e.temporary,ifNotExists:e.ifNotExists,onCommit:e.onCommit,frontModifiers:this.transformNodeList(e.frontModifiers),endModifiers:this.transformNodeList(e.endModifiers)}}transformColumnDefinition(e){return{kind:"ColumnDefinitionNode",column:this.transformNode(e.column),dataType:this.transformNode(e.dataType),references:this.transformNode(e.references),primaryKey:e.primaryKey,autoIncrement:e.autoIncrement,unique:e.unique,notNull:e.notNull,unsigned:e.unsigned,defaultTo:this.transformNode(e.defaultTo),check:this.transformNode(e.check),generated:this.transformNode(e.generated),frontModifiers:this.transformNodeList(e.frontModifiers),endModifiers:this.transformNodeList(e.endModifiers)}}transformAddColumn(e){return{kind:"AddColumnNode",column:this.transformNode(e.column)}}transformDropTable(e){return{kind:"DropTableNode",table:this.transformNode(e.table),ifExists:e.ifExists,cascade:e.cascade}}transformOrderBy(e){return{kind:"OrderByNode",items:this.transformNodeList(e.items)}}transformOrderByItem(e){return{kind:"OrderByItemNode",orderBy:this.transformNode(e.orderBy),direction:this.transformNode(e.direction)}}transformGroupBy(e){return{kind:"GroupByNode",items:this.transformNodeList(e.items)}}transformGroupByItem(e){return{kind:"GroupByItemNode",groupBy:this.transformNode(e.groupBy)}}transformUpdateQuery(e){return{kind:"UpdateQueryNode",table:this.transformNode(e.table),from:this.transformNode(e.from),joins:this.transformNodeList(e.joins),where:this.transformNode(e.where),updates:this.transformNodeList(e.updates),returning:this.transformNode(e.returning),with:this.transformNode(e.with),explain:this.transformNode(e.explain)}}transformColumnUpdate(e){return{kind:"ColumnUpdateNode",column:this.transformNode(e.column),value:this.transformNode(e.value)}}transformLimit(e){return{kind:"LimitNode",limit:this.transformNode(e.limit)}}transformOffset(e){return{kind:"OffsetNode",offset:this.transformNode(e.offset)}}transformOnConflict(e){return{kind:"OnConflictNode",columns:this.transformNodeList(e.columns),constraint:this.transformNode(e.constraint),indexExpression:this.transformNode(e.indexExpression),indexWhere:this.transformNode(e.indexWhere),updates:this.transformNodeList(e.updates),updateWhere:this.transformNode(e.updateWhere),doNothing:e.doNothing}}transformOnDuplicateKey(e){return{kind:"OnDuplicateKeyNode",updates:this.transformNodeList(e.updates)}}transformCreateIndex(e){return{kind:"CreateIndexNode",name:this.transformNode(e.name),table:this.transformNode(e.table),expression:this.transformNode(e.expression),unique:e.unique,using:this.transformNode(e.using),ifNotExists:e.ifNotExists,where:this.transformNode(e.where)}}transformList(e){return{kind:"ListNode",items:this.transformNodeList(e.items)}}transformDropIndex(e){return{kind:"DropIndexNode",name:this.transformNode(e.name),table:this.transformNode(e.table),ifExists:e.ifExists,cascade:e.cascade}}transformPrimaryKeyConstraint(e){return{kind:"PrimaryKeyConstraintNode",columns:this.transformNodeList(e.columns),name:this.transformNode(e.name)}}transformUniqueConstraint(e){return{kind:"UniqueConstraintNode",columns:this.transformNodeList(e.columns),name:this.transformNode(e.name)}}transformForeignKeyConstraint(e){return{kind:"ForeignKeyConstraintNode",columns:this.transformNodeList(e.columns),references:this.transformNode(e.references),name:this.transformNode(e.name),onDelete:e.onDelete,onUpdate:e.onUpdate}}transformSetOperation(e){return{kind:"SetOperationNode",operator:e.operator,expression:this.transformNode(e.expression),all:e.all}}transformReferences(e){return{kind:"ReferencesNode",table:this.transformNode(e.table),columns:this.transformNodeList(e.columns),onDelete:e.onDelete,onUpdate:e.onUpdate}}transformCheckConstraint(e){return{kind:"CheckConstraintNode",expression:this.transformNode(e.expression),name:this.transformNode(e.name)}}transformWith(e){return{kind:"WithNode",expressions:this.transformNodeList(e.expressions),recursive:e.recursive}}transformCommonTableExpression(e){return{kind:"CommonTableExpressionNode",name:this.transformNode(e.name),expression:this.transformNode(e.expression)}}transformCommonTableExpressionName(e){return{kind:"CommonTableExpressionNameNode",table:this.transformNode(e.table),columns:this.transformNodeList(e.columns)}}transformHaving(e){return{kind:"HavingNode",having:this.transformNode(e.having)}}transformCreateSchema(e){return{kind:"CreateSchemaNode",schema:this.transformNode(e.schema),ifNotExists:e.ifNotExists}}transformDropSchema(e){return{kind:"DropSchemaNode",schema:this.transformNode(e.schema),ifExists:e.ifExists,cascade:e.cascade}}transformAlterTable(e){return{kind:"AlterTableNode",table:this.transformNode(e.table),renameTo:this.transformNode(e.renameTo),setSchema:this.transformNode(e.setSchema),columnAlterations:this.transformNodeList(e.columnAlterations),addConstraint:this.transformNode(e.addConstraint),dropConstraint:this.transformNode(e.dropConstraint)}}transformDropColumn(e){return{kind:"DropColumnNode",column:this.transformNode(e.column)}}transformRenameColumn(e){return{kind:"RenameColumnNode",column:this.transformNode(e.column),renameTo:this.transformNode(e.renameTo)}}transformAlterColumn(e){return{kind:"AlterColumnNode",column:this.transformNode(e.column),dataType:this.transformNode(e.dataType),dataTypeExpression:this.transformNode(e.dataTypeExpression),setDefault:this.transformNode(e.setDefault),dropDefault:e.dropDefault,setNotNull:e.setNotNull,dropNotNull:e.dropNotNull}}transformModifyColumn(e){return{kind:"ModifyColumnNode",column:this.transformNode(e.column)}}transformAddConstraint(e){return{kind:"AddConstraintNode",constraint:this.transformNode(e.constraint)}}transformDropConstraint(e){return{kind:"DropConstraintNode",constraintName:this.transformNode(e.constraintName),ifExists:e.ifExists,modifier:e.modifier}}transformCreateView(e){return{kind:"CreateViewNode",name:this.transformNode(e.name),temporary:e.temporary,orReplace:e.orReplace,ifNotExists:e.ifNotExists,materialized:e.materialized,columns:this.transformNodeList(e.columns),as:this.transformNode(e.as)}}transformDropView(e){return{kind:"DropViewNode",name:this.transformNode(e.name),ifExists:e.ifExists,materialized:e.materialized,cascade:e.cascade}}transformGenerated(e){return{kind:"GeneratedNode",byDefault:e.byDefault,always:e.always,identity:e.identity,stored:e.stored,expression:this.transformNode(e.expression)}}transformDefaultValue(e){return{kind:"DefaultValueNode",defaultValue:this.transformNode(e.defaultValue)}}transformOn(e){return{kind:"OnNode",on:this.transformNode(e.on)}}transformSelectModifier(e){return{kind:"SelectModifierNode",modifier:e.modifier,rawModifier:this.transformNode(e.rawModifier)}}transformCreateType(e){return{kind:"CreateTypeNode",name:this.transformNode(e.name),enum:this.transformNode(e.enum)}}transformDropType(e){return{kind:"DropTypeNode",name:this.transformNode(e.name),ifExists:e.ifExists}}transformExplain(e){return{kind:"ExplainNode",format:e.format,options:this.transformNode(e.options)}}transformSchemableIdentifier(e){return{kind:"SchemableIdentifierNode",schema:this.transformNode(e.schema),identifier:this.transformNode(e.identifier)}}transformAggregateFunction(e){return{kind:"AggregateFunctionNode",aggregated:this.transformNode(e.aggregated),distinct:e.distinct,filter:this.transformNode(e.filter),func:e.func,over:this.transformNode(e.over)}}transformOver(e){return{kind:"OverNode",orderBy:this.transformNode(e.orderBy),partitionBy:this.transformNode(e.partitionBy)}}transformPartitionBy(e){return{kind:"PartitionByNode",items:this.transformNodeList(e.items)}}transformPartitionByItem(e){return{kind:"PartitionByItemNode",partitionBy:this.transformNode(e.partitionBy)}}transformBinaryOperation(e){return{kind:"BinaryOperationNode",leftOperand:this.transformNode(e.leftOperand),operator:this.transformNode(e.operator),rightOperand:this.transformNode(e.rightOperand)}}transformUnaryOperation(e){return{kind:"UnaryOperationNode",operator:this.transformNode(e.operator),operand:this.transformNode(e.operand)}}transformUsing(e){return{kind:"UsingNode",tables:this.transformNodeList(e.tables)}}transformFunction(e){return{kind:"FunctionNode",func:e.func,arguments:this.transformNodeList(e.arguments)}}transformDataType(e){return e}transformSelectAll(e){return e}transformIdentifier(e){return e}transformValue(e){return e}transformPrimitiveValueList(e){return e}transformOperator(e){return e}transformDefaultInsertValue(e){return e}}const ee=freeze({AlterTableNode:!0,CreateIndexNode:!0,CreateSchemaNode:!0,CreateTableNode:!0,CreateTypeNode:!0,CreateViewNode:!0,DeleteQueryNode:!0,DropIndexNode:!0,DropSchemaNode:!0,DropTableNode:!0,DropTypeNode:!0,DropViewNode:!0,InsertQueryNode:!0,RawNode:!0,SelectQueryNode:!0,UpdateQueryNode:!0});class WithSchemaTransformer extends OperationNodeTransformer{#d;#u=new Set;constructor(e){super(),this.#d=e}transformNodeImpl(e){if(!this.#p(e))return super.transformNodeImpl(e);const r=this.#l(e);for(const e of r)this.#u.add(e);const t=super.transformNodeImpl(e);for(const e of r)this.#u.delete(e);return t}transformSchemableIdentifier(r){const t=super.transformSchemableIdentifier(r);return t.schema||!this.#u.has(r.identifier.name)?t:{...t,schema:e.create(this.#d)}}transformReferences(e){const r=super.transformReferences(e);return r.table.table.schema?r:{...r,table:t.createWithSchema(this.#d,r.table.table.identifier.name)}}#p(e){return e.kind in ee}#l(e){const t=new Set;if("name"in e&&e.name&&r.is(e.name)&&this.#c(e.name,t),"from"in e&&e.from)for(const r of e.from.froms)this.#h(r,t);if("into"in e&&e.into&&this.#h(e.into,t),"table"in e&&e.table&&this.#h(e.table,t),"joins"in e&&e.joins)for(const r of e.joins)this.#h(r.table,t);return"with"in e&&e.with&&this.#f(e.with,t),t}#h(e,r){const n=t.is(e)?e:o.is(e)&&t.is(e.node)?e.node:null;n&&this.#c(n.table,r)}#c(e,r){this.#u.has(e.identifier.name)||r.add(e.identifier.name)}#f(e,r){for(const t of e.expressions)r.delete(t.name.table.table.identifier.name)}}class WithSchemaPlugin{#N;constructor(e){this.#N=new WithSchemaTransformer(e)}transformQuery(e){return this.#N.transformNode(e.node)}async transformResult(e){return e.result}}class QueryCreator{#e;constructor(e){this.#e=freeze(e)}selectFrom(e){return new SelectQueryBuilder({queryId:createQueryId(),executor:this.#e.executor,queryNode:k.create(parseTableExpressionOrList(e),this.#e.withNode)})}insertInto(e){return new InsertQueryBuilder({queryId:createQueryId(),executor:this.#e.executor,queryNode:D.create(parseTable(e),this.#e.withNode)})}replaceInto(e){return new InsertQueryBuilder({queryId:createQueryId(),executor:this.#e.executor,queryNode:D.create(parseTable(e),this.#e.withNode,!0)})}deleteFrom(e){return new DeleteQueryBuilder({queryId:createQueryId(),executor:this.#e.executor,queryNode:J.create(parseTableExpressionOrList(e),this.#e.withNode)})}updateTable(e){return new UpdateQueryBuilder({queryId:createQueryId(),executor:this.#e.executor,queryNode:U.create(parseTableExpression(e),this.#e.withNode)})}with(e,r){const t=parseCommonTableExpression(e,r);return new QueryCreator({...this.#e,withNode:this.#e.withNode?Z.cloneWithExpression(this.#e.withNode,t):Z.create(t)})}withRecursive(e,r){const t=parseCommonTableExpression(e,r);return new QueryCreator({...this.#e,withNode:this.#e.withNode?Z.cloneWithExpression(this.#e.withNode,t):Z.create(t,{recursive:!0})})}withPlugin(e){return new QueryCreator({...this.#e,executor:this.#e.executor.withPlugin(e)})}withoutPlugins(){return new QueryCreator({...this.#e,executor:this.#e.executor.withoutPlugins()})}withSchema(e){return new QueryCreator({...this.#e,executor:this.#e.executor.withPluginAtFront(new WithSchemaPlugin(e))})}}class Deferred{#m;#y;#w;constructor(){this.#m=new Promise(((e,r)=>{this.#w=r,this.#y=e}))}get promise(){return this.#m}resolve=e=>{this.#y&&this.#y(e)};reject=e=>{this.#w&&this.#w(e)}}const re=new Set;function logOnce(e){re.has(e)||(re.add(e),console.log(e))}const te=freeze([]);class QueryExecutorBase{#g;constructor(e=te){this.#g=e}get plugins(){return this.#g}transformQuery(e,r){for(const t of this.#g){const o=t.transformQuery({node:e,queryId:r});if(o.kind!==e.kind)throw new Error(["KyselyPlugin.transformQuery must return a node","of the same kind that was given to it.",`The plugin was given a ${e.kind}`,`but it returned a ${o.kind}`].join(" "));e=o}return e}async executeQuery(e,r){return await this.provideConnection((async t=>{const o=await t.executeQuery(e),n=await this.#x(o,r);return function warnOfOutdatedDriverOrPlugins(e,r){const{numAffectedRows:t}=e;if(void 0===t&&void 0===e.numUpdatedOrDeletedRows||void 0!==t&&void 0!==r.numAffectedRows)return;logOnce("kysely:warning: outdated driver/plugin detected! QueryResult.numUpdatedOrDeletedRows is deprecated and will be removed in a future release.")}(o,n),n}))}async*stream(e,r,t){const o=new Deferred,n=new Deferred;this.provideConnection((async e=>(o.resolve(e),await n.promise))).catch((e=>o.reject(e)));const i=await o.promise;try{for await(const o of i.streamQuery(e,r))yield await this.#x(o,t)}finally{n.resolve()}}async#x(e,r){for(const t of this.#g)e=await t.transformResult({result:e,queryId:r});return e}}class NoopQueryExecutor extends QueryExecutorBase{get adapter(){throw new Error("this query cannot be compiled to SQL")}compileQuery(){throw new Error("this query cannot be compiled to SQL")}provideConnection(){throw new Error("this query cannot be executed")}withConnectionProvider(){throw new Error("this query cannot have a connection provider")}withPlugin(e){return new NoopQueryExecutor([...this.plugins,e])}withPlugins(e){return new NoopQueryExecutor([...this.plugins,...e])}withPluginAtFront(e){return new NoopQueryExecutor([e,...this.plugins])}withoutPlugins(){return new NoopQueryExecutor([])}}const oe=new NoopQueryExecutor;function createSelectQueryBuilder(){return new SelectQueryBuilder({queryId:createQueryId(),executor:oe,queryNode:k.create(parseTableExpressionOrList([]))})}function createJoinBuilder(e,r){return new JoinBuilder({joinNode:d.create(e,parseTableExpression(r))})}function parseValueBinaryOperation(e,r,t){if(!isBinaryOperator(r)&&!isOperationNodeSource(r))throw new Error(`invalid binary operator ${JSON.stringify(r)}`);return function isIsComparison(e,r){return("is"===e||"is not"===e)&&(isNull(r)||isBoolean(r))}(r,t)?function parseIs(e,r,t){return u.create(parseReferenceExpression(e),parseOperator(r),E.createImmediate(t))}(e,r,t):u.create(parseReferenceExpression(e),parseOperator(r),parseValueExpressionOrList(t))}function parseReferentialComparison(e,r,t){if(!isComparisonOperator(r)&&!isOperationNodeSource(r))throw new Error(`invalid comparison operator ${JSON.stringify(r)}`);return function parseReferentialBinaryOperation(e,r,t){if(!isBinaryOperator(r)&&!isOperationNodeSource(r))throw new Error(`invalid binary operator ${JSON.stringify(r)}`);return u.create(parseReferenceExpression(e),parseOperator(r),parseReferenceExpression(t))}(e,r,t)}function parseWhere(e){return parseFilter("where",e)}function parseHaving(e){return parseFilter("having",e)}function parseOn(e){return parseFilter("on",e)}function parseFilter(e,r){if(3===r.length)return function parseValueComparison(e,r,t){if(!isComparisonOperator(r)&&!isOperationNodeSource(r))throw new Error(`invalid comparison operator ${JSON.stringify(r)}`);return parseValueBinaryOperation(e,r,t)}(r[0],r[1],r[2]);if(1===r.length)return function parseOneArgFilterExpression(e,r){if(isFunction(r))return ne[e](r);if(isOperationNodeSource(r)){const e=r.toOperationNode();if(p.is(e))return e}throw createFilterExpressionError(e,r)}(e,r[0]);throw createFilterExpressionError(e,r)}function parseOperator(e){if(isString(e)&&m.includes(e))return y.create(e);if(isOperationNodeSource(e))return e.toOperationNode();throw new Error(`invalid operator ${JSON.stringify(e)}`)}function createFilterExpressionError(e,r){return new Error(`invalid arguments passed to a '${e}' method: ${JSON.stringify(r)}`)}const ne=freeze({where(e){const r=createSelectQueryBuilder(),t=expressionBuilder(),o=e(Object.assign(r,t)).toOperationNode();if(k.is(o)){if(!o.where)throw new Error("no `where` methods called inside a group callback");return w.create(o.where.where)}return o},having(e){const r=createSelectQueryBuilder(),t=expressionBuilder(),o=e(Object.assign(r,t)).toOperationNode();if(k.is(o)){if(!o.having)throw new Error("no `having` methods called inside a group callback");return w.create(o.having.having)}return o},on(e){const r=createJoinBuilder("InnerJoin","table"),t=expressionBuilder(),o=e(Object.assign(r,t)).toOperationNode();if(d.is(o)){if(!o.on)throw new Error("no `on` methods called inside a group callback");return w.create(o.on.on)}return o}});function parseJoin(e,r){if(3===r.length)return function parseSingleOnJoin(e,r,t,o){return d.createWithOn(e,parseTableExpression(r),parseReferentialComparison(t,"=",o))}(e,r[0],r[1],r[2]);if(2===r.length)return function parseCallbackJoin(e,r,t){const o=t(createJoinBuilder(e,r));return o.toOperationNode()}(e,r[0],r[1]);throw new Error("not implemented")}const ie=freeze({is:e=>"OffsetNode"===e.kind,create:e=>freeze({kind:"OffsetNode",offset:E.create(e)})}),se=freeze({is:e=>"GroupByItemNode"===e.kind,create:e=>freeze({kind:"GroupByItemNode",groupBy:e})});function parseGroupBy(e){return parseReferenceExpressionOrList(e=isFunction(e)?e(expressionBuilder()):e).map(se.create)}const ae=freeze({is:e=>"SetOperationNode"===e.kind,create:(e,r,t)=>freeze({kind:"SetOperationNode",operator:e,expression:r,all:t})});function parseSetOperation(e,r,t){return ae.create(e,r.toOperationNode(),t)}class SelectQueryBuilder{#e;constructor(e){this.#e=freeze(e)}get expressionType(){}where(...e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseWhere(e))})}whereRef(e,r,t){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseReferentialComparison(e,r,t))})}orWhere(...e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseWhere(e))})}orWhereRef(e,r,t){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseReferentialComparison(e,r,t))})}whereExists(e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseExists(e))})}whereNotExists(e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithWhere(this.#e.queryNode,parseNotExists(e))})}orWhereExists(e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseExists(e))})}orWhereNotExists(e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithOrWhere(this.#e.queryNode,parseNotExists(e))})}having(...e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithHaving(this.#e.queryNode,parseHaving(e))})}havingRef(e,r,t){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithHaving(this.#e.queryNode,parseReferentialComparison(e,r,t))})}orHaving(...e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithOrHaving(this.#e.queryNode,parseHaving(e))})}orHavingRef(e,r,t){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithOrHaving(this.#e.queryNode,parseReferentialComparison(e,r,t))})}havingExists(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithHaving(this.#e.queryNode,parseExists(e))})}havingNotExist(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithHaving(this.#e.queryNode,parseNotExists(e))})}havingNotExists(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithHaving(this.#e.queryNode,parseNotExists(e))})}orHavingExists(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithOrHaving(this.#e.queryNode,parseExists(e))})}orHavingNotExists(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithOrHaving(this.#e.queryNode,parseNotExists(e))})}select(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithSelections(this.#e.queryNode,parseSelectArg(e))})}distinctOn(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithDistinctOn(this.#e.queryNode,parseReferenceExpressionOrList(e))})}modifyFront(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithFrontModifier(this.#e.queryNode,n.createWithExpression(e.toOperationNode()))})}modifyEnd(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithEndModifier(this.#e.queryNode,n.createWithExpression(e.toOperationNode()))})}distinct(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithFrontModifier(this.#e.queryNode,n.create("Distinct"))})}forUpdate(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithEndModifier(this.#e.queryNode,n.create("ForUpdate"))})}forShare(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithEndModifier(this.#e.queryNode,n.create("ForShare"))})}forKeyShare(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithEndModifier(this.#e.queryNode,n.create("ForKeyShare"))})}forNoKeyUpdate(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithEndModifier(this.#e.queryNode,n.create("ForNoKeyUpdate"))})}skipLocked(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithEndModifier(this.#e.queryNode,n.create("SkipLocked"))})}noWait(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithEndModifier(this.#e.queryNode,n.create("NoWait"))})}selectAll(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithSelections(this.#e.queryNode,parseSelectAll(e))})}innerJoin(...e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("InnerJoin",e))})}leftJoin(...e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("LeftJoin",e))})}rightJoin(...e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("RightJoin",e))})}fullJoin(...e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("FullJoin",e))})}innerJoinLateral(...e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("LateralInnerJoin",e))})}leftJoinLateral(...e){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithJoin(this.#e.queryNode,parseJoin("LateralLeftJoin",e))})}orderBy(e,r){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithOrderByItem(this.#e.queryNode,parseOrderBy(e,r))})}groupBy(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithGroupByItems(this.#e.queryNode,parseGroupBy(e))})}limit(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithLimit(this.#e.queryNode,G.create(e))})}offset(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithOffset(this.#e.queryNode,ie.create(e))})}union(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("union",e,!1))})}unionAll(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("union",e,!0))})}intersect(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("intersect",e,!1))})}intersectAll(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("intersect",e,!0))})}except(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("except",e,!1))})}exceptAll(e){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithSetOperation(this.#e.queryNode,parseSetOperation("except",e,!0))})}as(e){return new AliasedSelectQueryBuilder(this,e)}clearSelect(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithoutSelections(this.#e.queryNode)})}clearWhere(){return new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithoutWhere(this.#e.queryNode)})}clearLimit(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithoutLimit(this.#e.queryNode)})}clearOffset(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithoutOffset(this.#e.queryNode)})}clearOrderBy(){return new SelectQueryBuilder({...this.#e,queryNode:k.cloneWithoutOrderBy(this.#e.queryNode)})}$call(e){return e(this)}call(e){return this.$call(e)}$if(e,r){return e?r(this):new SelectQueryBuilder({...this.#e})}if(e,r){return this.$if(e,r)}$castTo(){return new SelectQueryBuilder(this.#e)}castTo(){return this.$castTo()}$assertType(){return new SelectQueryBuilder(this.#e)}assertType(){return new SelectQueryBuilder(this.#e)}withPlugin(e){return new SelectQueryBuilder({...this.#e,executor:this.#e.executor.withPlugin(e)})}toOperationNode(){return this.#e.executor.transformQuery(this.#e.queryNode,this.#e.queryId)}compile(){return this.#e.executor.compileQuery(this.toOperationNode(),this.#e.queryId)}async execute(){const e=this.compile();return(await this.#e.executor.executeQuery(e,this.#e.queryId)).rows}async executeTakeFirst(){const[e]=await this.execute();return e}async executeTakeFirstOrThrow(e=NoResultError){const r=await this.executeTakeFirst();if(void 0===r){throw isNoResultErrorConstructor(e)?new e(this.toOperationNode()):e(this.toOperationNode())}return r}async*stream(e=100){const r=this.compile(),t=this.#e.executor.stream(r,e,this.#e.queryId);for await(const e of t)yield*e.rows}async explain(e,r){const t=new SelectQueryBuilder({...this.#e,queryNode:$.cloneWithExplain(this.#e.queryNode,e,r)});return await t.execute()}}preventAwait(SelectQueryBuilder,"don't await SelectQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");class AliasedSelectQueryBuilder{#O;#B;constructor(e,r){this.#O=e,this.#B=r}get expression(){return this.#O}get alias(){return this.#B}toOperationNode(){return o.create(this.#O.toOperationNode(),e.create(this.#B))}}class ExpressionWrapper{#W;constructor(e){this.#W=e}get expressionType(){}as(e){return new AliasedExpressionWrapper(this,e)}$castTo(){return new ExpressionWrapper(this.#W)}toOperationNode(){return this.#W}}class AliasedExpressionWrapper{#E;#B;constructor(e,r){this.#E=e,this.#B=r}get expression(){return this.#E}get alias(){return this.#B}toOperationNode(){return o.create(this.#E.toOperationNode(),isOperationNodeSource(this.#B)?this.#B.toOperationNode():e.create(this.#B))}}const de=freeze({is:e=>"AggregateFunctionNode"===e.kind,create:(e,r)=>freeze({kind:"AggregateFunctionNode",func:e,aggregated:r}),cloneWithDistinct:e=>freeze({...e,distinct:!0}),cloneWithFilter:(e,r)=>freeze({...e,filter:e.filter?j.cloneWithOperation(e.filter,"And",r):j.create(r)}),cloneWithOrFilter:(e,r)=>freeze({...e,filter:e.filter?j.cloneWithOperation(e.filter,"Or",r):j.create(r)}),cloneWithOver:(e,r)=>freeze({...e,over:r})}),ue=freeze({is:e=>"FunctionNode"===e.kind,create:(e,r)=>freeze({kind:"FunctionNode",func:e,arguments:r})});class AggregateFunctionBuilder{#e;constructor(e){this.#e=freeze(e)}get expressionType(){}as(e){return new AliasedAggregateFunctionBuilder(this,e)}distinct(){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:de.cloneWithDistinct(this.#e.aggregateFunctionNode)})}filterWhere(...e){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:de.cloneWithFilter(this.#e.aggregateFunctionNode,parseWhere(e))})}filterWhereExists(e){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:de.cloneWithFilter(this.#e.aggregateFunctionNode,parseExists(e))})}filterWhereNotExists(e){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:de.cloneWithFilter(this.#e.aggregateFunctionNode,parseNotExists(e))})}filterWhereRef(e,r,t){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:de.cloneWithFilter(this.#e.aggregateFunctionNode,parseReferentialComparison(e,r,t))})}orFilterWhere(...e){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:de.cloneWithOrFilter(this.#e.aggregateFunctionNode,parseWhere(e))})}orFilterWhereExists(e){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:de.cloneWithOrFilter(this.#e.aggregateFunctionNode,parseExists(e))})}orFilterWhereNotExists(e){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:de.cloneWithOrFilter(this.#e.aggregateFunctionNode,parseNotExists(e))})}orFilterWhereRef(e,r,t){return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:de.cloneWithOrFilter(this.#e.aggregateFunctionNode,parseReferentialComparison(e,r,t))})}over(e){const r=function createOverBuilder(){return new OverBuilder({overNode:C.create()})}();return new AggregateFunctionBuilder({...this.#e,aggregateFunctionNode:de.cloneWithOver(this.#e.aggregateFunctionNode,(e?e(r):r).toOperationNode())})}$call(e){return e(this)}toOperationNode(){return this.#e.aggregateFunctionNode}}preventAwait(AggregateFunctionBuilder,"don't await AggregateFunctionBuilder instances. They are never executed directly and are always just a part of a query.");class AliasedAggregateFunctionBuilder{#q;#B;constructor(e,r){this.#q=e,this.#B=r}get expression(){return this.#q}get alias(){return this.#B}toOperationNode(){return o.create(this.#q.toOperationNode(),e.create(this.#B))}}function createFunctionModule(){const fn=(e,r)=>new ExpressionWrapper(ue.create(e,parseReferenceExpressionOrList(r)));return Object.assign(fn,{avg:e=>new AggregateFunctionBuilder({aggregateFunctionNode:de.create("avg",parseSimpleReferenceExpression(e))}),coalesce:(e,...r)=>fn("coalesce",[e,...r]),count:e=>new AggregateFunctionBuilder({aggregateFunctionNode:de.create("count",parseSimpleReferenceExpression(e))}),countAll:e=>new AggregateFunctionBuilder({aggregateFunctionNode:de.create("count",parseSelectAll(e)[0])}),max:e=>new AggregateFunctionBuilder({aggregateFunctionNode:de.create("max",parseSimpleReferenceExpression(e))}),min:e=>new AggregateFunctionBuilder({aggregateFunctionNode:de.create("min",parseSimpleReferenceExpression(e))}),sum:e=>new AggregateFunctionBuilder({aggregateFunctionNode:de.create("sum",parseSimpleReferenceExpression(e))})})}function createExpressionBuilder(e=oe){function unary(e,r){return new ExpressionWrapper(parseUnaryOperation(e,r))}return{get fn(){return createFunctionModule()},selectFrom:r=>new SelectQueryBuilder({queryId:createQueryId(),executor:e,queryNode:k.create(parseTableExpressionOrList(r))}),ref:e=>new ExpressionWrapper(parseStringReference(e)),val:e=>new ExpressionWrapper(parseValueExpressionOrList(e)),cmpr:(e,r,t)=>new ExpressionWrapper(parseValueBinaryOperation(e,r,t)),bxp:(e,r,t)=>new ExpressionWrapper(parseValueBinaryOperation(e,r,t)),unary:unary,not:e=>unary("not",e),exists:e=>unary("exists",e),neg:e=>unary("-",e),and(e){if(0===e.length)return new ExpressionWrapper(E.createImmediate(!0));if(1===e.length)return new ExpressionWrapper(e[0].toOperationNode());let r=i.create(e[0].toOperationNode(),e[1].toOperationNode());for(let t=2;t<e.length;++t)r=i.create(r,e[t].toOperationNode());return new ExpressionWrapper(w.create(r))},or(e){if(0===e.length)return new ExpressionWrapper(E.createImmediate(!1));if(1===e.length)return new ExpressionWrapper(e[0].toOperationNode());let r=s.create(e[0].toOperationNode(),e[1].toOperationNode());for(let t=2;t<e.length;++t)r=s.create(r,e[t].toOperationNode());return new ExpressionWrapper(w.create(r))},withSchema:r=>createExpressionBuilder(e.withPluginAtFront(new WithSchemaPlugin(r)))}}function expressionBuilder(e){return createExpressionBuilder()}function parseExpression(e){if(isOperationNodeSource(e))return e.toOperationNode();if(isFunction(e))return e(expressionBuilder()).toOperationNode();throw new Error(`invalid expression: ${JSON.stringify(e)}`)}function parseAliasedExpression(e){if(isOperationNodeSource(e))return e.toOperationNode();if(isFunction(e))return e(expressionBuilder()).toOperationNode();throw new Error(`invalid aliased expression: ${JSON.stringify(e)}`)}function isExpressionOrFactory(e){return isExpression(e)||isAliasedExpression(e)||isFunction(e)}function parseTableExpressionOrList(e){return isReadonlyArray(e)?e.map((e=>parseTableExpression(e))):[parseTableExpression(e)]}function parseTableExpression(r){return isString(r)?function parseAliasedTable(r){const t=" as ";if(r.includes(t)){const[n,i]=r.split(t).map(trim);return o.create(parseTable(n),e.create(i))}return parseTable(r)}(r):parseAliasedExpression(r)}function parseTable(e){if(e.includes(".")){const[r,o]=e.split(".").map(trim);return t.createWithSchema(r,o)}return t.create(e)}function trim(e){return e.trim()}class RawBuilder{#e;constructor(e){this.#e=freeze(e)}get expressionType(){}as(e){return new AliasedRawBuilder(this,e)}$castTo(){return new RawBuilder({...this.#e})}castTo(){return this.$castTo()}withPlugin(e){return new RawBuilder({...this.#e,plugins:void 0!==this.#e.plugins?freeze([...this.#e.plugins,e]):freeze([e])})}toOperationNode(){return this.#b(this.#C())}compile(e){return this.#S(this.#C(e))}async execute(e){const r=this.#C(e);return r.executeQuery(this.#S(r),this.#e.queryId)}#C(e){const r=void 0!==e?e.getExecutor():oe;return void 0!==this.#e.plugins?r.withPlugins(this.#e.plugins):r}#b(e){return e.transformQuery(this.#e.rawNode,this.#e.queryId)}#S(e){return e.compileQuery(this.#b(e),this.#e.queryId)}}function isRawBuilder(e){return isObject(e)&&isFunction(e.as)&&isFunction(e.$castTo)&&isFunction(e.withPlugin)&&isFunction(e.toOperationNode)&&isFunction(e.execute)}preventAwait(RawBuilder,"don't await RawBuilder instances directly. To execute the query you need to call `execute`");class AliasedRawBuilder{#Q;#B;constructor(e,r){this.#Q=e,this.#B=r}get expression(){return this.#Q}get alias(){return this.#B}toOperationNode(){return o.create(this.#Q.toOperationNode(),isOperationNodeSource(this.#B)?this.#B.toOperationNode():e.create(this.#B))}}const pe=Object.assign(((e,...r)=>new RawBuilder({queryId:createQueryId(),rawNode:p.create(e,r?.map(parseValueExpression)??[])})),{ref:e=>new RawBuilder({queryId:createQueryId(),rawNode:p.createWithChild(parseStringReference(e))}),val:e=>new RawBuilder({queryId:createQueryId(),rawNode:p.createWithChild(parseValueExpression(e))}),value(e){return this.val(e)},table:e=>new RawBuilder({queryId:createQueryId(),rawNode:p.createWithChild(parseTable(e))}),id(...r){const t=new Array(r.length+1).fill(".");return t[0]="",t[t.length-1]="",new RawBuilder({queryId:createQueryId(),rawNode:p.create(t,r.map(e.create))})},lit:e=>new RawBuilder({queryId:createQueryId(),rawNode:p.createWithChild(E.createImmediate(e))}),literal(e){return this.lit(e)},raw:e=>new RawBuilder({queryId:createQueryId(),rawNode:p.createWithSql(e)}),join(e,r=pe`, `){const t=new Array(2*e.length-1),o=r.toOperationNode();for(let r=0;r<e.length;++r)t[2*r]=parseValueExpression(e[r]),r!==e.length-1&&(t[2*r+1]=o);return new RawBuilder({queryId:createQueryId(),rawNode:p.createWithChildren(t)})}});export{InsertResult as $,getLast as A,pe as B,g as C,DynamicReferenceBuilder as D,isBuffer as E,isArrayBufferOrView as F,compare as G,expressionBuilder as H,e as I,logOnce as J,isExpression as K,isAliasedExpression as L,SelectQueryBuilder as M,AliasedSelectQueryBuilder as N,OperationNodeTransformer as O,InsertQueryBuilder as P,$ as Q,O as R,r as S,t as T,UpdateQueryBuilder as U,E as V,WithSchemaPlugin as W,DeleteQueryBuilder as X,NoResultError as Y,isNoResultErrorConstructor as Z,JoinBuilder as _,parseStringReference as a,DeleteResult as a0,UpdateResult as a1,OnConflictBuilder as a2,OnConflictDoNothingBuilder as a3,OnConflictUpdateBuilder as a4,AggregateFunctionBuilder as a5,AliasedAggregateFunctionBuilder as a6,RawBuilder as a7,isRawBuilder as a8,AliasedRawBuilder as a9,isComparisonOperator as aA,isArithmeticOperator as aB,s as aC,R as aD,q as aE,w as aF,B as aG,V as aH,k as aI,A as aJ,U as aK,T as aL,j as aM,Z as aN,P as aO,F as aP,de as aQ,C as aR,b as aS,v as aT,u as aU,I as aV,L as aW,NoopQueryExecutor as aa,oe as ab,o as ac,i as ad,M as ae,X as af,Y as ag,J as ah,S as ai,se as aj,Q as ak,z as al,d as am,G as an,ie as ao,H as ap,K as aq,a as ar,l as as,c as at,h as au,f as av,N as aw,m as ax,isOperator as ay,isBinaryOperator as az,x as b,parseTable as c,parseColumnName as d,p as e,freeze as f,parseWhere as g,W as h,isOperationNodeSource as i,createQueryId as j,QueryExecutorBase as k,isFunction as l,isObject as m,noop as n,QueryCreator as o,preventAwait as p,createFunctionModule as q,D as r,ae as s,isString as t,y as u,isNumber as v,isBoolean as w,isNull as x,isDate as y,isBigInt as z};
