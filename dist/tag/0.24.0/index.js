import{f as e,T as t,I as i,S as s,C as n,i as r,V as o,p as a,a as p,R as d,b as c,c as h,n as l,O as u,d as m,e as y,Q as w,g,h as f,j as v,W as x,D as b,k as C,l as T,m as E,o as I,q as k,r as O,s as A,t as W,u as q,v as D,w as S,x as B,y as Q,z as R,A as F,B as V,E as j,F as G,G as z}from"./sql-Km37cQhN.js";export{at as ARITHMETIC_OPERATORS,a5 as AggregateFunctionBuilder,aQ as AggregateFunctionNode,ac as AliasNode,a6 as AliasedAggregateFunctionBuilder,a9 as AliasedRawBuilder,N as AliasedSelectQueryBuilder,ad as AndNode,au as BINARY_OPERATORS,aU as BinaryOperationNode,as as COMPARISON_OPERATORS,ae as ColumnUpdateNode,ag as CommonTableExpressionNameNode,af as CommonTableExpressionNode,aP as DefaultInsertValueNode,X as DeleteQueryBuilder,ah as DeleteQueryNode,a0 as DeleteResult,aO as ExplainNode,ai as FromNode,aj as GroupByItemNode,ak as GroupByNode,al as HavingNode,P as InsertQueryBuilder,$ as InsertResult,_ as JoinBuilder,am as JoinNode,an as LimitNode,ab as NOOP_QUERY_EXECUTOR,Y as NoResultError,aa as NoopQueryExecutor,ax as OPERATORS,ao as OffsetNode,a2 as OnConflictBuilder,a3 as OnConflictDoNothingBuilder,ap as OnConflictNode,a4 as OnConflictUpdateBuilder,aq as OnDuplicateKeyNode,ar as OnNode,aC as OrNode,aD as OrderByItemNode,aE as OrderByNode,aR as OverNode,aF as ParensNode,aT as PartitionByItemNode,aS as PartitionByNode,aG as PrimitiveValueListNode,a7 as RawBuilder,aH as ReturningNode,M as SelectQueryBuilder,aI as SelectQueryNode,aJ as SelectionNode,av as UNARY_FILTER_OPERATORS,aw as UNARY_OPERATORS,aV as UnaryOperationNode,U as UpdateQueryBuilder,aK as UpdateQueryNode,a1 as UpdateResult,aW as UsingNode,aL as ValuesNode,aM as WhereNode,aN as WithNode,H as expressionBuilder,L as isAliasedExpression,aB as isArithmeticOperator,az as isBinaryOperator,aA as isComparisonOperator,K as isExpression,Z as isNoResultErrorConstructor,ay as isOperator,a8 as isRawBuilder,J as logOnce}from"./sql-Km37cQhN.js";const ee=e({is:e=>"AlterTableNode"===e.kind,create:i=>e({kind:"AlterTableNode",table:t.create(i)}),cloneWithTableProps:(t,i)=>e({...t,...i}),cloneWithColumnAlteration:(t,i)=>e({...t,columnAlterations:t.columnAlterations?[...t.columnAlterations,i]:[i]})}),te=e({is:e=>"CreateIndexNode"===e.kind,create:t=>e({kind:"CreateIndexNode",name:i.create(t)}),cloneWith:(t,i)=>e({...t,...i})}),ie=e({is:e=>"CreateSchemaNode"===e.kind,create:(t,s)=>e({kind:"CreateSchemaNode",schema:i.create(t),...s}),cloneWith:(t,i)=>e({...t,...i})}),se=["preserve rows","delete rows","drop"],ne=e({is:e=>"CreateTableNode"===e.kind,create:t=>e({kind:"CreateTableNode",table:t,columns:e([])}),cloneWithColumn:(t,i)=>e({...t,columns:e([...t.columns,i])}),cloneWithConstraint:(t,i)=>e({...t,constraints:t.constraints?e([...t.constraints,i]):e([i])}),cloneWithFrontModifier:(t,i)=>e({...t,frontModifiers:t.frontModifiers?e([...t.frontModifiers,i]):e([i])}),cloneWithEndModifier:(t,i)=>e({...t,endModifiers:t.endModifiers?e([...t.endModifiers,i]):e([i])}),cloneWith:(t,i)=>e({...t,...i})}),re=e({is:e=>"DropIndexNode"===e.kind,create:(t,i)=>e({kind:"DropIndexNode",name:s.create(t),...i}),cloneWith:(t,i)=>e({...t,...i})}),oe=e({is:e=>"DropSchemaNode"===e.kind,create:(t,s)=>e({kind:"DropSchemaNode",schema:i.create(t),...s}),cloneWith:(t,i)=>e({...t,...i})}),pe=e({is:e=>"DropTableNode"===e.kind,create:(t,i)=>e({kind:"DropTableNode",table:t,...i}),cloneWith:(t,i)=>e({...t,...i})}),de=e({is:e=>"AddColumnNode"===e.kind,create:t=>e({kind:"AddColumnNode",column:t})}),ce=e({is:e=>"AlterColumnNode"===e.kind,create:t=>e({kind:"AlterColumnNode",column:n.create(t)}),cloneWith:(t,i)=>e({...t,...i})}),he=e({is:e=>"ColumnDefinitionNode"===e.kind,create:(t,i)=>e({kind:"ColumnDefinitionNode",column:n.create(t),dataType:i}),cloneWithFrontModifier:(t,i)=>e({...t,frontModifiers:t.frontModifiers?e([...t.frontModifiers,i]):[i]}),cloneWithEndModifier:(t,i)=>e({...t,endModifiers:t.endModifiers?e([...t.endModifiers,i]):[i]}),cloneWith:(t,i)=>e({...t,...i})}),le=e({is:e=>"DropColumnNode"===e.kind,create:t=>e({kind:"DropColumnNode",column:n.create(t)})}),ue=e({is:e=>"RenameColumnNode"===e.kind,create:(t,i)=>e({kind:"RenameColumnNode",column:n.create(t),renameTo:n.create(i)})}),me=e({is:e=>"CheckConstraintNode"===e.kind,create:(t,s)=>e({kind:"CheckConstraintNode",expression:t,name:s?i.create(s):void 0})}),ye=["no action","restrict","cascade","set null","set default"],we=e({is:e=>"ReferencesNode"===e.kind,create:(t,i)=>e({kind:"ReferencesNode",table:t,columns:e([...i])}),cloneWithOnDelete:(t,i)=>e({...t,onDelete:i}),cloneWithOnUpdate:(t,i)=>e({...t,onUpdate:i})});function ge(e){return r(e)?e.toOperationNode():o.createImmediate(e)}const fe=e({is:e=>"GeneratedNode"===e.kind,create:t=>e({kind:"GeneratedNode",...t}),createWithExpression:t=>e({kind:"GeneratedNode",always:!0,expression:t}),cloneWith:(t,i)=>e({...t,...i})}),Ne=e({is:e=>"DefaultValueNode"===e.kind,create:t=>e({kind:"DefaultValueNode",defaultValue:t})});function ve(e){if(ye.includes(e))return e;throw new Error(`invalid OnModifyForeignAction ${e}`)}class xe{#e;constructor(e){this.#e=e}autoIncrement(){return new xe(he.cloneWith(this.#e,{autoIncrement:!0}))}primaryKey(){return new xe(he.cloneWith(this.#e,{primaryKey:!0}))}references(e){const t=p(e);if(!d.is(t)||c.is(t.column))throw new Error(`invalid call references('${e}'). The reference must have format table.column or schema.table.column`);return new xe(he.cloneWith(this.#e,{references:we.create(t.table,[t.column])}))}onDelete(e){if(!this.#e.references)throw new Error("on delete constraint can only be added for foreign keys");return new xe(he.cloneWith(this.#e,{references:we.cloneWithOnDelete(this.#e.references,ve(e))}))}onUpdate(e){if(!this.#e.references)throw new Error("on update constraint can only be added for foreign keys");return new xe(he.cloneWith(this.#e,{references:we.cloneWithOnUpdate(this.#e.references,ve(e))}))}unique(){return new xe(he.cloneWith(this.#e,{unique:!0}))}notNull(){return new xe(he.cloneWith(this.#e,{notNull:!0}))}unsigned(){return new xe(he.cloneWith(this.#e,{unsigned:!0}))}defaultTo(e){return new xe(he.cloneWith(this.#e,{defaultTo:Ne.create(ge(e))}))}check(e){return new xe(he.cloneWith(this.#e,{check:me.create(e.toOperationNode())}))}generatedAlwaysAs(e){return new xe(he.cloneWith(this.#e,{generated:fe.createWithExpression(e.toOperationNode())}))}generatedAlwaysAsIdentity(){return new xe(he.cloneWith(this.#e,{generated:fe.create({identity:!0,always:!0})}))}generatedByDefaultAsIdentity(){return new xe(he.cloneWith(this.#e,{generated:fe.create({identity:!0,byDefault:!0})}))}stored(){if(!this.#e.generated)throw new Error("stored() can only be called after generatedAlwaysAs");return new xe(he.cloneWith(this.#e,{generated:fe.cloneWith(this.#e.generated,{stored:!0})}))}modifyFront(e){return new xe(he.cloneWithFrontModifier(this.#e,e.toOperationNode()))}modifyEnd(e){return new xe(he.cloneWithEndModifier(this.#e,e.toOperationNode()))}$call(e){return e(this)}toOperationNode(){return this.#e}}a(xe,"don't await ColumnDefinitionBuilder instances directly.");const be=e({is:e=>"ModifyColumnNode"===e.kind,create:t=>e({kind:"ModifyColumnNode",column:t})}),Ce=e({is:e=>"DataTypeNode"===e.kind,create:t=>e({kind:"DataTypeNode",dataType:t})});function Te(e){return r(e)?e.toOperationNode():Ce.create(e)}const Ee=e({is:e=>"ForeignKeyConstraintNode"===e.kind,create:(t,s,n,r)=>e({kind:"ForeignKeyConstraintNode",columns:t,references:we.create(s,n),name:r?i.create(r):void 0}),cloneWith:(t,i)=>e({...t,...i})});class Ie{#e;constructor(e){this.#e=e}onDelete(e){return new Ie(Ee.cloneWith(this.#e,{onDelete:ve(e)}))}onUpdate(e){return new Ie(Ee.cloneWith(this.#e,{onUpdate:ve(e)}))}$call(e){return e(this)}toOperationNode(){return this.#e}}a(Ie,"don't await ForeignKeyConstraintBuilder instances directly.");const ke=e({is:e=>"AddConstraintNode"===e.kind,create:t=>e({kind:"AddConstraintNode",constraint:t})}),Oe=e({is:e=>"UniqueConstraintNode"===e.kind,create:(t,s)=>e({kind:"UniqueConstraintNode",columns:e(t.map(n.create)),name:s?i.create(s):void 0})}),Ae=e({is:e=>"DropConstraintNode"===e.kind,create:t=>e({kind:"DropConstraintNode",constraintName:i.create(t)}),cloneWith:(t,i)=>e({...t,...i})});class We{alterColumnNode;constructor(e){this.alterColumnNode=e}setDataType(e){return new Le(ce.cloneWith(this.alterColumnNode,{dataType:Ce.create(e)}))}setDefault(e){return new Le(ce.cloneWith(this.alterColumnNode,{setDefault:ge(e)}))}dropDefault(){return new Le(ce.cloneWith(this.alterColumnNode,{dropDefault:!0}))}setNotNull(){return new Le(ce.cloneWith(this.alterColumnNode,{setNotNull:!0}))}dropNotNull(){return new Le(ce.cloneWith(this.alterColumnNode,{dropNotNull:!0}))}$call(e){return e(this)}}class Le extends We{toOperationNode(){return this.alterColumnNode}}class qe{#t;constructor(t){this.#t=e(t)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(qe,"don't await AlterTableExecutor instances directly. To execute the query you need to call `execute`");class De{#t;constructor(t){this.#t=e(t)}onDelete(e){return new De({...this.#t,constraintBuilder:this.#t.constraintBuilder.onDelete(e)})}onUpdate(e){return new De({...this.#t,constraintBuilder:this.#t.constraintBuilder.onUpdate(e)})}$call(e){return e(this)}toOperationNode(){return this.#t.executor.transformQuery(ee.cloneWithTableProps(this.#t.node,{addConstraint:ke.create(this.#t.constraintBuilder.toOperationNode())}),this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(De,"don't await AlterTableAddForeignKeyConstraintBuilder instances directly. To execute the query you need to call `execute`");class Pe{#t;constructor(t){this.#t=e(t)}ifExists(){return new Pe({...this.#t,node:ee.cloneWithTableProps(this.#t.node,{dropConstraint:Ae.cloneWith(this.#t.node.dropConstraint,{ifExists:!0})})})}cascade(){return new Pe({...this.#t,node:ee.cloneWithTableProps(this.#t.node,{dropConstraint:Ae.cloneWith(this.#t.node.dropConstraint,{modifier:"cascade"})})})}restrict(){return new Pe({...this.#t,node:ee.cloneWithTableProps(this.#t.node,{dropConstraint:Ae.cloneWith(this.#t.node.dropConstraint,{modifier:"restrict"})})})}$call(e){return e(this)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(Pe,"don't await AlterTableDropConstraintBuilder instances directly. To execute the query you need to call `execute`");class Me{#t;constructor(t){this.#t=e(t)}renameTo(e){return new qe({...this.#t,node:ee.cloneWithTableProps(this.#t.node,{renameTo:h(e)})})}setSchema(e){return new qe({...this.#t,node:ee.cloneWithTableProps(this.#t.node,{setSchema:i.create(e)})})}alterColumn(e,t){const i=t(new We(ce.create(e)));return new Se({...this.#t,node:ee.cloneWithColumnAlteration(this.#t.node,i.toOperationNode())})}dropColumn(e){return new Se({...this.#t,node:ee.cloneWithColumnAlteration(this.#t.node,le.create(e))})}renameColumn(e,t){return new Se({...this.#t,node:ee.cloneWithColumnAlteration(this.#t.node,ue.create(e,t))})}addColumn(e,t,i=l){const s=i(new xe(he.create(e,Te(t))));return new Se({...this.#t,node:ee.cloneWithColumnAlteration(this.#t.node,de.create(s.toOperationNode()))})}modifyColumn(e,t,i=l){const s=i(new xe(he.create(e,Te(t))));return new Se({...this.#t,node:ee.cloneWithColumnAlteration(this.#t.node,be.create(s.toOperationNode()))})}addUniqueConstraint(e,t){return new qe({...this.#t,node:ee.cloneWithTableProps(this.#t.node,{addConstraint:ke.create(Oe.create(t,e))})})}addCheckConstraint(e,t){return new qe({...this.#t,node:ee.cloneWithTableProps(this.#t.node,{addConstraint:ke.create(me.create(t.toOperationNode(),e))})})}addForeignKeyConstraint(e,t,i,s){return new De({...this.#t,constraintBuilder:new Ie(Ee.create(t.map(n.create),h(i),s.map(n.create),e))})}dropConstraint(e){return new Pe({...this.#t,node:ee.cloneWithTableProps(this.#t.node,{dropConstraint:Ae.create(e)})})}$call(e){return e(this)}call(e){return this.$call(e)}}class Se{#t;constructor(t){this.#t=e(t)}alterColumn(e,t){const i=t(new We(ce.create(e)));return new Se({...this.#t,node:ee.cloneWithColumnAlteration(this.#t.node,i.toOperationNode())})}dropColumn(e){return new Se({...this.#t,node:ee.cloneWithColumnAlteration(this.#t.node,le.create(e))})}renameColumn(e,t){return new Se({...this.#t,node:ee.cloneWithColumnAlteration(this.#t.node,ue.create(e,t))})}addColumn(e,t,i=l){const s=i(new xe(he.create(e,Te(t))));return new Se({...this.#t,node:ee.cloneWithColumnAlteration(this.#t.node,de.create(s.toOperationNode()))})}modifyColumn(e,t,i=l){const s=i(new xe(he.create(e,Te(t))));return new Se({...this.#t,node:ee.cloneWithColumnAlteration(this.#t.node,be.create(s.toOperationNode()))})}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(Me,"don't await AlterTableBuilder instances"),a(We,"don't await AlterColumnBuilder instances"),a(Se,"don't await AlterTableColumnAlteringBuilder instances directly. To execute the query you need to call `execute`");const Be=e({is:e=>"ListNode"===e.kind,create:t=>e({kind:"ListNode",items:e(t)})});class Qe extends u{transformValue(e){return{...super.transformValue(e),immediate:!0}}}class Re{#t;constructor(t){this.#t=e(t)}ifNotExists(){return new Re({...this.#t,node:te.cloneWith(this.#t.node,{ifNotExists:!0})})}unique(){return new Re({...this.#t,node:te.cloneWith(this.#t.node,{unique:!0})})}on(e){return new Re({...this.#t,node:te.cloneWith(this.#t.node,{table:h(e)})})}column(e){return new Re({...this.#t,node:te.cloneWith(this.#t.node,{expression:m(e)})})}columns(e){return new Re({...this.#t,node:te.cloneWith(this.#t.node,{expression:Be.create(e.map(m))})})}expression(e){return new Re({...this.#t,node:te.cloneWith(this.#t.node,{expression:e.toOperationNode()})})}using(e){return new Re({...this.#t,node:te.cloneWith(this.#t.node,{using:y.createWithSql(e)})})}where(...e){const t=new Qe;return new Re({...this.#t,node:w.cloneWithWhere(this.#t.node,t.transformNode(g(e)))})}$call(e){return e(this)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(Re,"don't await CreateIndexBuilder instances directly. To execute the query you need to call `execute`");class _e{#t;constructor(t){this.#t=e(t)}ifNotExists(){return new _e({...this.#t,node:ie.cloneWith(this.#t.node,{ifNotExists:!0})})}$call(e){return e(this)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(_e,"don't await CreateSchemaBuilder instances directly. To execute the query you need to call `execute`");const Ue=e({is:e=>"PrimaryKeyConstraintNode"===e.kind,create:(t,s)=>e({kind:"PrimaryKeyConstraintNode",columns:e(t.map(n.create)),name:s?i.create(s):void 0})});function Fe(e){if(se.includes(e))return e;throw new Error(`invalid OnCommitAction ${e}`)}class Ve{#t;constructor(t){this.#t=e(t)}temporary(){return new Ve({...this.#t,node:ne.cloneWith(this.#t.node,{temporary:!0})})}onCommit(e){return new Ve({...this.#t,node:ne.cloneWith(this.#t.node,{onCommit:Fe(e)})})}ifNotExists(){return new Ve({...this.#t,node:ne.cloneWith(this.#t.node,{ifNotExists:!0})})}addColumn(e,t,i=l){const s=i(new xe(he.create(e,Te(t))));return new Ve({...this.#t,node:ne.cloneWithColumn(this.#t.node,s.toOperationNode())})}addPrimaryKeyConstraint(e,t){return new Ve({...this.#t,node:ne.cloneWithConstraint(this.#t.node,Ue.create(t,e))})}addUniqueConstraint(e,t){return new Ve({...this.#t,node:ne.cloneWithConstraint(this.#t.node,Oe.create(t,e))})}addCheckConstraint(e,t){return new Ve({...this.#t,node:ne.cloneWithConstraint(this.#t.node,me.create(t.toOperationNode(),e))})}addForeignKeyConstraint(e,t,i,s,r=l){const o=r(new Ie(Ee.create(t.map(n.create),h(i),s.map(n.create),e)));return new Ve({...this.#t,node:ne.cloneWithConstraint(this.#t.node,o.toOperationNode())})}modifyFront(e){return new Ve({...this.#t,node:ne.cloneWithFrontModifier(this.#t.node,e.toOperationNode())})}modifyEnd(e){return new Ve({...this.#t,node:ne.cloneWithEndModifier(this.#t.node,e.toOperationNode())})}$call(e){return e(this)}call(e){return this.$call(e)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(Ve,"don't await CreateTableBuilder instances directly. To execute the query you need to call `execute`");class $e{#t;constructor(t){this.#t=e(t)}on(e){return new $e({...this.#t,node:re.cloneWith(this.#t.node,{table:h(e)})})}ifExists(){return new $e({...this.#t,node:re.cloneWith(this.#t.node,{ifExists:!0})})}cascade(){return new $e({...this.#t,node:re.cloneWith(this.#t.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a($e,"don't await DropIndexBuilder instances directly. To execute the query you need to call `execute`");class Ke{#t;constructor(t){this.#t=e(t)}ifExists(){return new Ke({...this.#t,node:oe.cloneWith(this.#t.node,{ifExists:!0})})}cascade(){return new Ke({...this.#t,node:oe.cloneWith(this.#t.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(Ke,"don't await DropSchemaBuilder instances directly. To execute the query you need to call `execute`");class je{#t;constructor(t){this.#t=e(t)}ifExists(){return new je({...this.#t,node:pe.cloneWith(this.#t.node,{ifExists:!0})})}cascade(){return new je({...this.#t,node:pe.cloneWith(this.#t.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(je,"don't await DropTableBuilder instances directly. To execute the query you need to call `execute`");const Je=e({is:e=>"CreateViewNode"===e.kind,create:t=>e({kind:"CreateViewNode",name:s.create(t)}),cloneWith:(t,i)=>e({...t,...i})});class Ge{#i=new Qe;transformQuery(e){return this.#i.transformNode(e.node)}transformResult(e){return Promise.resolve(e.result)}}class ze{#t;constructor(t){this.#t=e(t)}temporary(){return new ze({...this.#t,node:Je.cloneWith(this.#t.node,{temporary:!0})})}materialized(){return new ze({...this.#t,node:Je.cloneWith(this.#t.node,{materialized:!0})})}ifNotExists(){return new ze({...this.#t,node:Je.cloneWith(this.#t.node,{ifNotExists:!0})})}orReplace(){return new ze({...this.#t,node:Je.cloneWith(this.#t.node,{orReplace:!0})})}columns(e){return new ze({...this.#t,node:Je.cloneWith(this.#t.node,{columns:e.map(m)})})}as(e){const t=e.withPlugin(new Ge).toOperationNode();return new ze({...this.#t,node:Je.cloneWith(this.#t.node,{as:t})})}$call(e){return e(this)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(ze,"don't await CreateViewBuilder instances directly. To execute the query you need to call `execute`");const He=e({is:e=>"DropViewNode"===e.kind,create:t=>e({kind:"DropViewNode",name:s.create(t)}),cloneWith:(t,i)=>e({...t,...i})});class Ye{#t;constructor(t){this.#t=e(t)}materialized(){return new Ye({...this.#t,node:He.cloneWith(this.#t.node,{materialized:!0})})}ifExists(){return new Ye({...this.#t,node:He.cloneWith(this.#t.node,{ifExists:!0})})}cascade(){return new Ye({...this.#t,node:He.cloneWith(this.#t.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(Ye,"don't await DropViewBuilder instances directly. To execute the query you need to call `execute`");const Xe=e({is:e=>"CreateTypeNode"===e.kind,create:t=>e({kind:"CreateTypeNode",name:t}),cloneWithEnum:(t,i)=>e({...t,enum:f.create(i.map((e=>o.createImmediate(e))))})});class Ze{#t;constructor(t){this.#t=e(t)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}asEnum(e){return new Ze({...this.#t,node:Xe.cloneWithEnum(this.#t.node,e)})}$call(e){return e(this)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}a(Ze,"don't await CreateTypeBuilder instances directly. To execute the query you need to call `execute`");const et=e({is:e=>"DropTypeNode"===e.kind,create:t=>e({kind:"DropTypeNode",name:t}),cloneWith:(t,i)=>e({...t,...i})});class tt{#t;constructor(t){this.#t=e(t)}ifExists(){return new tt({...this.#t,node:et.cloneWith(this.#t.node,{ifExists:!0})})}$call(e){return e(this)}toOperationNode(){return this.#t.executor.transformQuery(this.#t.node,this.#t.queryId)}compile(){return this.#t.executor.compileQuery(this.toOperationNode(),this.#t.queryId)}async execute(){await this.#t.executor.executeQuery(this.compile(),this.#t.queryId)}}function it(e){if(e.includes(".")){const t=e.split(".").map(st);if(2===t.length)return s.createWithSchema(t[0],t[1]);throw new Error(`invalid schemable identifier ${e}`)}return s.create(e)}function st(e){return e.trim()}a(tt,"don't await DropTypeBuilder instances directly. To execute the query you need to call `execute`");class nt{#s;constructor(e){this.#s=e}createTable(e){return new Ve({queryId:v(),executor:this.#s,node:ne.create(h(e))})}dropTable(e){return new je({queryId:v(),executor:this.#s,node:pe.create(h(e))})}createIndex(e){return new Re({queryId:v(),executor:this.#s,node:te.create(e)})}dropIndex(e){return new $e({queryId:v(),executor:this.#s,node:re.create(e)})}createSchema(e){return new _e({queryId:v(),executor:this.#s,node:ie.create(e)})}dropSchema(e){return new Ke({queryId:v(),executor:this.#s,node:oe.create(e)})}alterTable(e){return new Me({queryId:v(),executor:this.#s,node:ee.create(e)})}createView(e){return new ze({queryId:v(),executor:this.#s,node:Je.create(e)})}dropView(e){return new Ye({queryId:v(),executor:this.#s,node:He.create(e)})}createType(e){return new Ze({queryId:v(),executor:this.#s,node:Xe.create(it(e))})}dropType(e){return new tt({queryId:v(),executor:this.#s,node:et.create(it(e))})}withPlugin(e){return new nt(this.#s.withPlugin(e))}withoutPlugins(){return new nt(this.#s.withoutPlugins())}withSchema(e){return new nt(this.#s.withPluginAtFront(new x(e)))}}class rt{ref(e){return new b(e)}}class ot{#n;constructor(e){this.#n=e}async provideConnection(e){const t=await this.#n.acquireConnection();try{return await e(t)}finally{await this.#n.releaseConnection(t)}}}class pt extends C{#r;#o;#a;constructor(e,t,i,s=[]){super(s),this.#r=e,this.#o=t,this.#a=i}get adapter(){return this.#o}compileQuery(e){return this.#r.compileQuery(e)}provideConnection(e){return this.#a.provideConnection(e)}withPlugins(e){return new pt(this.#r,this.#o,this.#a,[...this.plugins,...e])}withPlugin(e){return new pt(this.#r,this.#o,this.#a,[...this.plugins,e])}withPluginAtFront(e){return new pt(this.#r,this.#o,this.#a,[e,...this.plugins])}withConnectionProvider(e){return new pt(this.#r,this.#o,e,[...this.plugins])}withoutPlugins(){return new pt(this.#r,this.#o,this.#a,[])}}function dt(){return"undefined"!=typeof performance&&T(performance.now)?performance.now():Date.now()}class ct{#n;#p;#d;#c;#h=new WeakSet;constructor(e,t){this.#n=e,this.#p=t}async init(){this.#d||(this.#d=this.#n.init().catch((e=>(this.#d=void 0,Promise.reject(e))))),await this.#d}async acquireConnection(){await this.init();const e=await this.#n.acquireConnection();return this.#h.has(e)||(this.#l()&&this.#u(e),this.#h.add(e)),e}async releaseConnection(e){await this.#n.releaseConnection(e)}beginTransaction(e,t){return this.#n.beginTransaction(e,t)}commitTransaction(e){return this.#n.commitTransaction(e)}rollbackTransaction(e){return this.#n.rollbackTransaction(e)}async destroy(){this.#d&&(await this.#d,this.#c||(this.#c=this.#n.destroy().catch((e=>(this.#c=void 0,Promise.reject(e))))),await this.#c)}#l(){return this.#p.isLevelEnabled("query")||this.#p.isLevelEnabled("error")}#u(e){const t=e.executeQuery;e.executeQuery=async i=>{const s=dt();try{return await t.call(e,i)}catch(e){throw this.#m(e,i,s),e}finally{this.#y(i,s)}}}#m(e,t,i){this.#p.error((()=>({level:"error",error:e,query:t,queryDurationMillis:this.#w(i)})))}#y(e,t){this.#p.query((()=>({level:"query",query:e,queryDurationMillis:this.#w(t)})))}#w(e){return dt()-e}}class ht{#g;#f;constructor(e){this.#g=e}async provideConnection(e){for(;this.#f;)await this.#f;const t=this.#N(e);return this.#f=t.then((()=>{this.#f=void 0})).catch((()=>{this.#f=void 0})),t}async#N(e){return await e(this.#g)}}const lt=["read uncommitted","read committed","repeatable read","serializable"],ut=e(["query","error"]);class mt{#v;#x;constructor(t){T(t)?(this.#x=t,this.#v=e({query:!0,error:!0})):(this.#x=yt,this.#v=e({query:t.includes("query"),error:t.includes("error")}))}isLevelEnabled(e){return this.#v[e]}query(e){this.#v.query&&this.#x(e())}error(e){this.#v.error&&this.#x(e())}}function yt(e){"query"===e.level?(console.log(`kysely:query: ${e.query.sql}`),console.log(`kysely:query: duration: ${e.queryDurationMillis.toFixed(1)}ms`)):"error"===e.level&&(e.error instanceof Error?console.error(`kysely:error: ${e.error.stack??e.error.message}`):console.error(`kysely:error: ${e}`))}function wt(e){return E(e)&&T(e.compile)}class gt extends I{#t;constructor(t){let i,s;if(Nt(t))i={executor:t.executor},s={...t};else{const e=t.dialect,n=e.createDriver(),r=e.createQueryCompiler(),o=e.createAdapter(),a=new mt(t.log??[]),p=new ct(n,a),d=new ot(p),c=new pt(r,o,d,t.plugins??[]);i={executor:c},s={config:t,executor:c,dialect:e,driver:p}}super(i),this.#t=e(s)}get schema(){return new nt(this.#t.executor)}get dynamic(){return new rt}get introspection(){return this.#t.dialect.createIntrospector(this.withoutPlugins())}get fn(){return k()}transaction(){return new xt({...this.#t})}connection(){return new vt({...this.#t})}withPlugin(e){return new gt({...this.#t,executor:this.#t.executor.withPlugin(e)})}withoutPlugins(){return new gt({...this.#t,executor:this.#t.executor.withoutPlugins()})}withTables(){return new gt({...this.#t})}async destroy(){await this.#t.driver.destroy()}get isTransaction(){return!1}getExecutor(){return this.#t.executor}executeQuery(e,t=v()){const i=wt(e)?e.compile():e;return this.getExecutor().executeQuery(i,t)}}class ft extends gt{#t;constructor(e){super(e),this.#t=e}get isTransaction(){return!0}transaction(){throw new Error("calling the transaction method for a Transaction is not supported")}connection(){throw new Error("calling the connection method for a Transaction is not supported")}async destroy(){throw new Error("calling the destroy method for a Transaction is not supported")}withPlugin(e){return new ft({...this.#t,executor:this.#t.executor.withPlugin(e)})}withoutPlugins(){return new ft({...this.#t,executor:this.#t.executor.withoutPlugins()})}withTables(){return new ft({...this.#t})}}function Nt(e){return E(e)&&E(e.config)&&E(e.driver)&&E(e.executor)&&E(e.dialect)}class vt{#t;constructor(t){this.#t=e(t)}async execute(e){return this.#t.executor.provideConnection((async t=>{const i=this.#t.executor.withConnectionProvider(new ht(t)),s=new gt({...this.#t,executor:i});return await e(s)}))}}a(vt,"don't await ConnectionBuilder instances directly. To execute the query you need to call the `execute` method");class xt{#t;constructor(t){this.#t=e(t)}setIsolationLevel(e){return new xt({...this.#t,isolationLevel:e})}async execute(e){const{isolationLevel:t,...i}=this.#t,s={isolationLevel:t};return function(e){if(e.isolationLevel&&!lt.includes(e.isolationLevel))throw new Error(`invalid transaction isolation level ${e.isolationLevel}`)}(s),this.#t.executor.provideConnection((async t=>{const n=this.#t.executor.withConnectionProvider(new ht(t)),r=new ft({...i,executor:n});try{await this.#t.driver.beginTransaction(t,s);const i=await e(r);return await this.#t.driver.commitTransaction(t),i}catch(e){throw await this.#t.driver.rollbackTransaction(t),e}}))}}a(xt,"don't await TransactionBuilder instances directly. To execute the transaction you need to call the `execute` method");class bt{nodeStack=[];get parentNode(){return this.nodeStack[this.nodeStack.length-2]}#b=e({AliasNode:this.visitAlias.bind(this),ColumnNode:this.visitColumn.bind(this),IdentifierNode:this.visitIdentifier.bind(this),SchemableIdentifierNode:this.visitSchemableIdentifier.bind(this),RawNode:this.visitRaw.bind(this),ReferenceNode:this.visitReference.bind(this),SelectQueryNode:this.visitSelectQuery.bind(this),SelectionNode:this.visitSelection.bind(this),TableNode:this.visitTable.bind(this),FromNode:this.visitFrom.bind(this),SelectAllNode:this.visitSelectAll.bind(this),AndNode:this.visitAnd.bind(this),OrNode:this.visitOr.bind(this),ValueNode:this.visitValue.bind(this),ValueListNode:this.visitValueList.bind(this),PrimitiveValueListNode:this.visitPrimitiveValueList.bind(this),ParensNode:this.visitParens.bind(this),JoinNode:this.visitJoin.bind(this),OperatorNode:this.visitOperator.bind(this),WhereNode:this.visitWhere.bind(this),InsertQueryNode:this.visitInsertQuery.bind(this),DeleteQueryNode:this.visitDeleteQuery.bind(this),ReturningNode:this.visitReturning.bind(this),CreateTableNode:this.visitCreateTable.bind(this),AddColumnNode:this.visitAddColumn.bind(this),ColumnDefinitionNode:this.visitColumnDefinition.bind(this),DropTableNode:this.visitDropTable.bind(this),DataTypeNode:this.visitDataType.bind(this),OrderByNode:this.visitOrderBy.bind(this),OrderByItemNode:this.visitOrderByItem.bind(this),GroupByNode:this.visitGroupBy.bind(this),GroupByItemNode:this.visitGroupByItem.bind(this),UpdateQueryNode:this.visitUpdateQuery.bind(this),ColumnUpdateNode:this.visitColumnUpdate.bind(this),LimitNode:this.visitLimit.bind(this),OffsetNode:this.visitOffset.bind(this),OnConflictNode:this.visitOnConflict.bind(this),OnDuplicateKeyNode:this.visitOnDuplicateKey.bind(this),CreateIndexNode:this.visitCreateIndex.bind(this),DropIndexNode:this.visitDropIndex.bind(this),ListNode:this.visitList.bind(this),PrimaryKeyConstraintNode:this.visitPrimaryKeyConstraint.bind(this),UniqueConstraintNode:this.visitUniqueConstraint.bind(this),ReferencesNode:this.visitReferences.bind(this),CheckConstraintNode:this.visitCheckConstraint.bind(this),WithNode:this.visitWith.bind(this),CommonTableExpressionNode:this.visitCommonTableExpression.bind(this),CommonTableExpressionNameNode:this.visitCommonTableExpressionName.bind(this),HavingNode:this.visitHaving.bind(this),CreateSchemaNode:this.visitCreateSchema.bind(this),DropSchemaNode:this.visitDropSchema.bind(this),AlterTableNode:this.visitAlterTable.bind(this),DropColumnNode:this.visitDropColumn.bind(this),RenameColumnNode:this.visitRenameColumn.bind(this),AlterColumnNode:this.visitAlterColumn.bind(this),ModifyColumnNode:this.visitModifyColumn.bind(this),AddConstraintNode:this.visitAddConstraint.bind(this),DropConstraintNode:this.visitDropConstraint.bind(this),ForeignKeyConstraintNode:this.visitForeignKeyConstraint.bind(this),CreateViewNode:this.visitCreateView.bind(this),DropViewNode:this.visitDropView.bind(this),GeneratedNode:this.visitGenerated.bind(this),DefaultValueNode:this.visitDefaultValue.bind(this),OnNode:this.visitOn.bind(this),ValuesNode:this.visitValues.bind(this),SelectModifierNode:this.visitSelectModifier.bind(this),CreateTypeNode:this.visitCreateType.bind(this),DropTypeNode:this.visitDropType.bind(this),ExplainNode:this.visitExplain.bind(this),DefaultInsertValueNode:this.visitDefaultInsertValue.bind(this),AggregateFunctionNode:this.visitAggregateFunction.bind(this),OverNode:this.visitOver.bind(this),PartitionByNode:this.visitPartitionBy.bind(this),PartitionByItemNode:this.visitPartitionByItem.bind(this),SetOperationNode:this.visitSetOperation.bind(this),BinaryOperationNode:this.visitBinaryOperation.bind(this),UnaryOperationNode:this.visitUnaryOperation.bind(this),UsingNode:this.visitUsing.bind(this),FunctionNode:this.visitFunction.bind(this)});visitNode=e=>{this.nodeStack.push(e),this.#b[e.kind](e),this.nodeStack.pop()}}class Ct extends bt{#C="";#T=[];get numParameters(){return this.#T.length}compileQuery(t){return this.#C="",this.#T=[],this.visitNode(t),e({query:t,sql:this.getSql(),parameters:[...this.#T]})}getSql(){return this.#C}visitSelectQuery(e){const t=void 0!==this.parentNode&&!O.is(this.parentNode)&&!Je.is(this.parentNode)&&!A.is(this.parentNode);void 0===this.parentNode&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append("select "),e.distinctOn&&(this.compileDistinctOn(e.distinctOn),this.append(" ")),e.frontModifiers&&e.frontModifiers.length>0&&(this.compileList(e.frontModifiers," "),this.append(" ")),e.selections&&(this.compileList(e.selections),this.append(" ")),this.visitNode(e.from),e.joins&&(this.append(" "),this.compileList(e.joins," ")),e.where&&(this.append(" "),this.visitNode(e.where)),e.groupBy&&(this.append(" "),this.visitNode(e.groupBy)),e.having&&(this.append(" "),this.visitNode(e.having)),e.setOperations&&(this.append(" "),this.compileList(e.setOperations," ")),e.orderBy&&(this.append(" "),this.visitNode(e.orderBy)),e.limit&&(this.append(" "),this.visitNode(e.limit)),e.offset&&(this.append(" "),this.visitNode(e.offset)),e.endModifiers&&e.endModifiers.length>0&&(this.append(" "),this.compileList(e.endModifiers," ")),t&&this.append(")")}visitFrom(e){this.append("from "),this.compileList(e.froms)}visitSelection(e){this.visitNode(e.selection)}visitColumn(e){this.visitNode(e.column)}compileDistinctOn(e){this.append("distinct on ("),this.compileList(e),this.append(")")}compileList(e,t=", "){const i=e.length-1;for(let s=0;s<=i;s++)this.visitNode(e[s]),s<i&&this.append(t)}visitWhere(e){this.append("where "),this.visitNode(e.where)}visitHaving(e){this.append("having "),this.visitNode(e.having)}visitInsertQuery(e){const t=this.nodeStack.find(w.is)!==e;!t&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append(e.replace?"replace":"insert"),e.ignore&&this.append(" ignore"),this.append(" into "),this.visitNode(e.into),e.columns&&(this.append(" ("),this.compileList(e.columns),this.append(")")),e.values&&(this.append(" "),this.visitNode(e.values)),e.onConflict&&(this.append(" "),this.visitNode(e.onConflict)),e.onDuplicateKey&&(this.append(" "),this.visitNode(e.onDuplicateKey)),e.returning&&(this.append(" "),this.visitNode(e.returning)),t&&this.append(")")}visitValues(e){this.append("values "),this.compileList(e.values)}visitDeleteQuery(e){const t=this.nodeStack.find(w.is)!==e;!t&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append("delete "),this.visitNode(e.from),e.using&&(this.append(" "),this.visitNode(e.using)),e.joins&&(this.append(" "),this.compileList(e.joins," ")),e.where&&(this.append(" "),this.visitNode(e.where)),e.orderBy&&(this.append(" "),this.visitNode(e.orderBy)),e.limit&&(this.append(" "),this.visitNode(e.limit)),e.returning&&(this.append(" "),this.visitNode(e.returning)),t&&this.append(")")}visitReturning(e){this.append("returning "),this.compileList(e.selections)}visitAlias(e){this.visitNode(e.node),this.append(" as "),this.visitNode(e.alias)}visitReference(e){this.visitNode(e.table),this.append("."),this.visitNode(e.column)}visitSelectAll(e){this.append("*")}visitIdentifier(e){this.append(this.getLeftIdentifierWrapper()),this.compileUnwrappedIdentifier(e),this.append(this.getRightIdentifierWrapper())}compileUnwrappedIdentifier(e){if(!W(e.name))throw new Error("a non-string identifier was passed to compileUnwrappedIdentifier.");this.append(this.sanitizeIdentifier(e.name))}visitAnd(e){this.visitNode(e.left),this.append(" and "),this.visitNode(e.right)}visitOr(e){this.visitNode(e.left),this.append(" or "),this.visitNode(e.right)}visitValue(e){e.immediate?this.appendImmediateValue(e.value):this.appendValue(e.value)}visitValueList(e){this.append("("),this.compileList(e.values),this.append(")")}visitPrimitiveValueList(e){this.append("(");const{values:t}=e;for(let e=0;e<t.length;++e)this.appendValue(t[e]),e!==t.length-1&&this.append(", ");this.append(")")}visitParens(e){this.append("("),this.visitNode(e.node),this.append(")")}visitJoin(e){this.append(Et[e.joinType]),this.append(" "),this.visitNode(e.table),e.on&&(this.append(" "),this.visitNode(e.on))}visitOn(e){this.append("on "),this.visitNode(e.on)}visitRaw(e){const{sqlFragments:t,parameters:i}=e;for(let e=0;e<t.length;++e)this.append(t[e]),i.length>e&&this.visitNode(i[e])}visitOperator(e){this.append(e.operator)}visitTable(e){this.visitNode(e.table)}visitSchemableIdentifier(e){e.schema&&(this.visitNode(e.schema),this.append(".")),this.visitNode(e.identifier)}visitCreateTable(e){this.append("create "),e.frontModifiers&&e.frontModifiers.length>0&&(this.compileList(e.frontModifiers," "),this.append(" ")),e.temporary&&this.append("temporary "),this.append("table "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.table),this.append(" ("),this.compileList([...e.columns,...e.constraints??[]]),this.append(")"),e.onCommit&&(this.append(" on commit "),this.append(e.onCommit)),e.endModifiers&&e.endModifiers.length>0&&(this.append(" "),this.compileList(e.endModifiers," "))}visitColumnDefinition(e){this.visitNode(e.column),this.append(" "),this.visitNode(e.dataType),e.unsigned&&this.append(" unsigned"),e.frontModifiers&&e.frontModifiers.length>0&&(this.append(" "),this.compileList(e.frontModifiers," ")),e.generated&&(this.append(" "),this.visitNode(e.generated)),e.defaultTo&&(this.append(" "),this.visitNode(e.defaultTo)),e.notNull&&this.append(" not null"),e.unique&&this.append(" unique"),e.primaryKey&&this.append(" primary key"),e.autoIncrement&&(this.append(" "),this.append(this.getAutoIncrement())),e.references&&(this.append(" "),this.visitNode(e.references)),e.check&&(this.append(" "),this.visitNode(e.check)),e.endModifiers&&e.endModifiers.length>0&&(this.append(" "),this.compileList(e.endModifiers," "))}getAutoIncrement(){return"auto_increment"}visitReferences(e){this.append("references "),this.visitNode(e.table),this.append(" ("),this.compileList(e.columns),this.append(")"),e.onDelete&&(this.append(" on delete "),this.append(e.onDelete)),e.onUpdate&&(this.append(" on update "),this.append(e.onUpdate))}visitDropTable(e){this.append("drop table "),e.ifExists&&this.append("if exists "),this.visitNode(e.table),e.cascade&&this.append(" cascade")}visitDataType(e){this.append(e.dataType)}visitOrderBy(e){this.append("order by "),this.compileList(e.items)}visitOrderByItem(e){this.visitNode(e.orderBy),e.direction&&(this.append(" "),this.visitNode(e.direction))}visitGroupBy(e){this.append("group by "),this.compileList(e.items)}visitGroupByItem(e){this.visitNode(e.groupBy)}visitUpdateQuery(e){const t=this.nodeStack.find(w.is)!==e;!t&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append("update "),this.visitNode(e.table),this.append(" set "),e.updates&&this.compileList(e.updates),e.from&&(this.append(" "),this.visitNode(e.from)),e.joins&&(this.append(" "),this.compileList(e.joins," ")),e.where&&(this.append(" "),this.visitNode(e.where)),e.returning&&(this.append(" "),this.visitNode(e.returning)),t&&this.append(")")}visitColumnUpdate(e){this.visitNode(e.column),this.append(" = "),this.visitNode(e.value)}visitLimit(e){this.append("limit "),this.visitNode(e.limit)}visitOffset(e){this.append("offset "),this.visitNode(e.offset)}visitOnConflict(e){this.append("on conflict"),e.columns?(this.append(" ("),this.compileList(e.columns),this.append(")")):e.constraint?(this.append(" on constraint "),this.visitNode(e.constraint)):e.indexExpression&&(this.append(" ("),this.visitNode(e.indexExpression),this.append(")")),e.indexWhere&&(this.append(" "),this.visitNode(e.indexWhere)),!0===e.doNothing?this.append(" do nothing"):e.updates&&(this.append(" do update set "),this.compileList(e.updates),e.updateWhere&&(this.append(" "),this.visitNode(e.updateWhere)))}visitOnDuplicateKey(e){this.append("on duplicate key update "),this.compileList(e.updates)}visitCreateIndex(e){this.append("create "),e.unique&&this.append("unique "),this.append("index "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.name),e.table&&(this.append(" on "),this.visitNode(e.table)),e.using&&(this.append(" using "),this.visitNode(e.using)),e.expression&&(this.append(" ("),this.visitNode(e.expression),this.append(")")),e.where&&(this.append(" "),this.visitNode(e.where))}visitDropIndex(e){this.append("drop index "),e.ifExists&&this.append("if exists "),this.visitNode(e.name),e.table&&(this.append(" on "),this.visitNode(e.table)),e.cascade&&this.append(" cascade")}visitCreateSchema(e){this.append("create schema "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.schema)}visitDropSchema(e){this.append("drop schema "),e.ifExists&&this.append("if exists "),this.visitNode(e.schema),e.cascade&&this.append(" cascade")}visitPrimaryKeyConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("primary key ("),this.compileList(e.columns),this.append(")")}visitUniqueConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("unique ("),this.compileList(e.columns),this.append(")")}visitCheckConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("check ("),this.visitNode(e.expression),this.append(")")}visitForeignKeyConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("foreign key ("),this.compileList(e.columns),this.append(") "),this.visitNode(e.references),e.onDelete&&(this.append(" on delete "),this.append(e.onDelete)),e.onUpdate&&(this.append(" on update "),this.append(e.onUpdate))}visitList(e){this.compileList(e.items)}visitWith(e){this.append("with "),e.recursive&&this.append("recursive "),this.compileList(e.expressions)}visitCommonTableExpression(e){this.visitNode(e.name),this.append(" as "),this.visitNode(e.expression)}visitCommonTableExpressionName(e){this.visitNode(e.table),e.columns&&(this.append("("),this.compileList(e.columns),this.append(")"))}visitAlterTable(e){this.append("alter table "),this.visitNode(e.table),this.append(" "),e.renameTo&&(this.append("rename to "),this.visitNode(e.renameTo)),e.setSchema&&(this.append("set schema "),this.visitNode(e.setSchema)),e.addConstraint&&this.visitNode(e.addConstraint),e.dropConstraint&&this.visitNode(e.dropConstraint),e.columnAlterations&&this.compileList(e.columnAlterations)}visitAddColumn(e){this.append("add column "),this.visitNode(e.column)}visitRenameColumn(e){this.append("rename column "),this.visitNode(e.column),this.append(" to "),this.visitNode(e.renameTo)}visitDropColumn(e){this.append("drop column "),this.visitNode(e.column)}visitAlterColumn(e){this.append("alter column "),this.visitNode(e.column),this.append(" "),e.dataType&&(this.append("type "),this.visitNode(e.dataType),e.dataTypeExpression&&(this.append("using "),this.visitNode(e.dataTypeExpression))),e.setDefault&&(this.append("set default "),this.visitNode(e.setDefault)),e.dropDefault&&this.append("drop default"),e.setNotNull&&this.append("set not null"),e.dropNotNull&&this.append("drop not null")}visitModifyColumn(e){this.append("modify column "),this.visitNode(e.column)}visitAddConstraint(e){this.append("add "),this.visitNode(e.constraint)}visitDropConstraint(e){this.append("drop constraint "),e.ifExists&&this.append("if exists "),this.visitNode(e.constraintName),"cascade"===e.modifier?this.append(" cascade"):"restrict"===e.modifier&&this.append(" restrict")}visitSetOperation(e){this.append(e.operator),this.append(" "),e.all&&this.append("all "),this.visitNode(e.expression)}visitCreateView(e){this.append("create "),e.orReplace&&this.append("or replace "),e.materialized&&this.append("materialized "),e.temporary&&this.append("temporary "),this.append("view "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.name),this.append(" "),e.columns&&(this.append("("),this.compileList(e.columns),this.append(") ")),e.as&&(this.append("as "),this.visitNode(e.as))}visitDropView(e){this.append("drop "),e.materialized&&this.append("materialized "),this.append("view "),e.ifExists&&this.append("if exists "),this.visitNode(e.name),e.cascade&&this.append(" cascade")}visitGenerated(e){this.append("generated "),e.always&&this.append("always "),e.byDefault&&this.append("by default "),this.append("as "),e.identity&&this.append("identity"),e.expression&&(this.append("("),this.visitNode(e.expression),this.append(")")),e.stored&&this.append(" stored")}visitDefaultValue(e){this.append("default "),this.visitNode(e.defaultValue)}visitSelectModifier(e){e.rawModifier?this.visitNode(e.rawModifier):this.append(Tt[e.modifier])}visitCreateType(e){this.append("create type "),this.visitNode(e.name),e.enum&&(this.append(" as enum "),this.visitNode(e.enum))}visitDropType(e){this.append("drop type "),e.ifExists&&this.append("if exists "),this.visitNode(e.name)}visitExplain(e){this.append("explain"),(e.options||e.format)&&(this.append(" "),this.append(this.getLeftExplainOptionsWrapper()),e.options&&(this.visitNode(e.options),e.format&&this.append(this.getExplainOptionsDelimiter())),e.format&&(this.append("format"),this.append(this.getExplainOptionAssignment()),this.append(e.format)),this.append(this.getRightExplainOptionsWrapper()))}visitDefaultInsertValue(e){this.append("default")}visitAggregateFunction(e){this.append(e.func),this.append("("),e.distinct&&this.append("distinct "),this.visitNode(e.aggregated),this.append(")"),e.filter&&(this.append(" filter("),this.visitNode(e.filter),this.append(")")),e.over&&(this.append(" "),this.visitNode(e.over))}visitOver(e){this.append("over("),e.partitionBy&&(this.visitNode(e.partitionBy),e.orderBy&&this.append(" ")),e.orderBy&&this.visitNode(e.orderBy),this.append(")")}visitPartitionBy(e){this.append("partition by "),this.compileList(e.items)}visitPartitionByItem(e){this.visitNode(e.partitionBy)}visitBinaryOperation(e){this.visitNode(e.leftOperand),this.append(" "),this.visitNode(e.operator),this.append(" "),this.visitNode(e.rightOperand)}visitUnaryOperation(e){this.visitNode(e.operator),this.isMinusOperator(e.operator)||this.append(" "),this.visitNode(e.operand)}isMinusOperator(e){return q.is(e)&&"-"===e.operator}visitUsing(e){this.append("using "),this.compileList(e.tables)}visitFunction(e){this.append(e.func),this.append("("),this.compileList(e.arguments),this.append(")")}append(e){this.#C+=e}appendValue(e){this.addParameter(e),this.append(this.getCurrentParameterPlaceholder())}getLeftIdentifierWrapper(){return'"'}getRightIdentifierWrapper(){return'"'}getCurrentParameterPlaceholder(){return"$"+this.numParameters}getLeftExplainOptionsWrapper(){return"("}getExplainOptionAssignment(){return" "}getExplainOptionsDelimiter(){return", "}getRightExplainOptionsWrapper(){return")"}sanitizeIdentifier(e){const t=this.getLeftIdentifierWrapper(),i=this.getRightIdentifierWrapper();let s="";for(const n of e)s+=n,n===t?s+=t:n===i&&(s+=i);return s}addParameter(e){this.#T.push(e)}appendImmediateValue(e){if(W(e))this.append(`'${e}'`);else if(D(e)||S(e))this.append(e.toString());else if(B(e))this.append("null");else if(Q(e))this.appendImmediateValue(e.toISOString());else{if(!R(e))throw new Error(`invalid immediate value ${e}`);this.appendImmediateValue(e.toString())}}}const Tt=e({ForKeyShare:"for key share",ForNoKeyUpdate:"for no key update",ForUpdate:"for update",ForShare:"for share",NoWait:"nowait",SkipLocked:"skip locked",Distinct:"distinct"}),Et=e({InnerJoin:"inner join",LeftJoin:"left join",RightJoin:"right join",FullJoin:"full join",LateralInnerJoin:"inner join lateral",LateralLeftJoin:"left join lateral"}),It=e({raw:t=>e({sql:t,query:y.createWithSql(t),parameters:e([])})});class kt{async init(){}async acquireConnection(){return new Ot}async beginTransaction(){}async commitTransaction(){}async rollbackTransaction(){}async releaseConnection(){}async destroy(){}}class Ot{async executeQuery(){return{rows:[]}}async*streamQuery(){}}class At{get supportsTransactionalDdl(){return!1}get supportsReturning(){return!1}}class Wt{#E;#I=new qt;#k;#g;constructor(t){this.#E=e({...t})}async init(){this.#k=T(this.#E.database)?await this.#E.database():this.#E.database,this.#g=new Lt(this.#k),this.#E.onCreateConnection&&await this.#E.onCreateConnection(this.#g)}async acquireConnection(){return await this.#I.lock(),this.#g}async beginTransaction(e){await e.executeQuery(It.raw("begin"))}async commitTransaction(e){await e.executeQuery(It.raw("commit"))}async rollbackTransaction(e){await e.executeQuery(It.raw("rollback"))}async releaseConnection(){this.#I.unlock()}async destroy(){this.#k?.close()}}class Lt{#k;constructor(e){this.#k=e}executeQuery(e){const{sql:t,parameters:i}=e,s=this.#k.prepare(t);if(s.reader)return Promise.resolve({rows:s.all(i)});{const{changes:e,lastInsertRowid:t}=s.run(i),n=null!=e?BigInt(e):void 0;return Promise.resolve({numUpdatedOrDeletedRows:n,numAffectedRows:n,insertId:null!=t?BigInt(t):void 0,rows:[]})}}async*streamQuery(){throw new Error("Sqlite driver doesn't support streaming")}}class qt{#O;#A;async lock(){for(;this.#O;)await this.#O;this.#O=new Promise((e=>{this.#A=e}))}unlock(){const e=this.#A;this.#O=void 0,this.#A=void 0,e?.()}}const Dt=/"/g;class Pt extends Ct{getCurrentParameterPlaceholder(){return"?"}getLeftExplainOptionsWrapper(){return""}getRightExplainOptionsWrapper(){return""}getLeftIdentifierWrapper(){return'"'}getRightIdentifierWrapper(){return'"'}getAutoIncrement(){return"autoincrement"}sanitizeIdentifier(e){return e.replace(Dt,'""')}visitDefaultInsertValue(e){this.append("null")}}class Mt{transformQuery(e){return e.node}async transformResult(e){return e.result}}const St="kysely_migration",Bt="kysely_migration_lock",Qt="migration_lock",Rt=e({__noMigrations__:!0});class _t{#t;constructor(t){this.#t=e(t)}async getMigrations(){const e=await this.#W(this.#L)?await this.#t.db.withPlugin(this.#q).selectFrom(this.#L).select(["name","timestamp"]).execute():[];return(await this.#D()).map((({name:t,...i})=>{const s=e.find((e=>e.name===t));return{name:t,migration:i,executedAt:s?new Date(s.timestamp):void 0}}))}async migrateToLatest(){return this.#P((({migrations:e})=>e.length-1))}async migrateTo(e){return this.#P((({migrations:t})=>{if(e===Rt)return-1;const i=t.findIndex((t=>t.name===e));if(-1===i)throw new Error(`migration "${e}" doesn't exist`);return i}))}async migrateUp(){return this.#P((({currentIndex:e,migrations:t})=>Math.min(e+1,t.length-1)))}async migrateDown(){return this.#P((({currentIndex:e})=>Math.max(e-1,-1)))}async#P(e){try{return await this.#M(),await this.#S(e)}catch(e){return e instanceof Ut?e.resultSet:{error:e}}}get#B(){return this.#t.migrationTableSchema}get#L(){return this.#t.migrationTableName??St}get#Q(){return this.#t.migrationLockTableName??Bt}get#q(){return this.#B?new x(this.#B):new Mt}async#M(){await this.#R(),await this.#_(),await this.#U(),await this.#F()}async#R(){if(this.#B&&!await this.#V())try{await this.#t.db.schema.createSchema(this.#B).ifNotExists().execute()}catch(e){if(!await this.#V())throw e}}async#_(){if(!await this.#W(this.#L))try{this.#B&&await this.#t.db.schema.createSchema(this.#B).ifNotExists().execute(),await this.#t.db.schema.withPlugin(this.#q).createTable(this.#L).ifNotExists().addColumn("name","varchar(255)",(e=>e.notNull().primaryKey())).addColumn("timestamp","varchar(255)",(e=>e.notNull())).execute()}catch(e){if(!await this.#W(this.#L))throw e}}async#U(){if(!await this.#W(this.#Q))try{await this.#t.db.schema.withPlugin(this.#q).createTable(this.#Q).ifNotExists().addColumn("id","varchar(255)",(e=>e.notNull().primaryKey())).addColumn("is_locked","integer",(e=>e.notNull().defaultTo(0))).execute()}catch(e){if(!await this.#W(this.#Q))throw e}}async#F(){if(!await this.#$())try{await this.#t.db.withPlugin(this.#q).insertInto(this.#Q).values({id:Qt,is_locked:0}).execute()}catch(e){if(!await this.#$())throw e}}async#V(){return(await this.#t.db.introspection.getSchemas()).some((e=>e.name===this.#B))}async#W(e){const t=this.#B;return(await this.#t.db.introspection.getTables({withInternalKyselyTables:!0})).some((i=>i.name===e&&(!t||i.schema===t)))}async#$(){return!!await this.#t.db.withPlugin(this.#q).selectFrom(this.#Q).where("id","=",Qt).select("id").executeTakeFirst()}async#S(t){const i=this.#t.db.getExecutor().adapter,s=e({lockTable:this.#t.migrationLockTableName??Bt,lockRowId:Qt,lockTableSchema:this.#t.migrationTableSchema}),n=async e=>{try{await i.acquireMigrationLock(e,s);const n=await this.#K(e);if(0===n.migrations.length)return{results:[]};const r=t(n);return void 0===r?{results:[]}:r<n.currentIndex?await this.#j(e,n,r):r>n.currentIndex?await this.#J(e,n,r):{results:[]}}finally{await i.releaseMigrationLock(e,s)}};return i.supportsTransactionalDdl?this.#t.db.transaction().execute(n):this.#t.db.connection().execute(n)}async#K(t){const i=await this.#D(),s=await this.#G(t);return this.#z(i,s),e({migrations:i,currentIndex:i.findIndex((e=>e.name===F(s)))})}async#D(){const e=await this.#t.provider.getMigrations();return Object.keys(e).sort().map((t=>({...e[t],name:t})))}async#G(e){return(await e.withPlugin(this.#q).selectFrom(this.#L).select("name").orderBy("name").execute()).map((e=>e.name))}#z(e,t){for(const i of t)if(!e.some((e=>e.name===i)))throw new Error(`corrupted migrations: previously executed migration ${i} is missing`);for(let i=0;i<t.length;++i)if(e[i].name!==t[i])throw new Error(`corrupted migrations: expected previously executed migration ${t[i]} to be at index ${i} but ${e[i].name} was found in its place. New migrations must always have a name that comes alphabetically after the last executed migration.`)}async#j(e,t,i){const s=[];for(let e=t.currentIndex;e>i;--e)s.push({migrationName:t.migrations[e].name,direction:"Down",status:"NotExecuted"});for(let i=0;i<s.length;++i){const n=t.migrations.find((e=>e.name===s[i].migrationName));try{n.down&&(await n.down(e),await e.withPlugin(this.#q).deleteFrom(this.#L).where("name","=",n.name).execute(),s[i]={migrationName:n.name,direction:"Down",status:"Success"})}catch(e){throw s[i]={migrationName:n.name,direction:"Down",status:"Error"},new Ut({error:e,results:s})}}return{results:s}}async#J(e,t,i){const s=[];for(let e=t.currentIndex+1;e<=i;++e)s.push({migrationName:t.migrations[e].name,direction:"Up",status:"NotExecuted"});for(let i=0;i<s.length;++i){const n=t.migrations.find((e=>e.name===s[i].migrationName));try{await n.up(e),await e.withPlugin(this.#q).insertInto(this.#L).values({name:n.name,timestamp:(new Date).toISOString()}).execute(),s[i]={migrationName:n.name,direction:"Up",status:"Success"}}catch(e){throw s[i]={migrationName:n.name,direction:"Up",status:"Error"},new Ut({error:e,results:s})}}return{results:s}}}class Ut extends Error{#H;constructor(e){super(),this.#H=e}get resultSet(){return this.#H}}class Ft{#k;constructor(e){this.#k=e}async getSchemas(){return[]}async getTables(e={withInternalKyselyTables:!1}){let t=this.#k.selectFrom("sqlite_schema").where("type","in",["table","view"]).where("name","not like","sqlite_%").select("name").orderBy("name").$castTo();e.withInternalKyselyTables||(t=t.where("name","!=",St).where("name","!=",Bt));const i=await t.execute();return Promise.all(i.map((({name:e})=>this.#Y(e))))}async getMetadata(e){return{tables:await this.getTables(e)}}async#Y(e){const t=this.#k,i=await t.selectFrom("sqlite_master").where("name","=",e).select(["sql","type"]).$castTo().executeTakeFirstOrThrow(),s=i.sql?.split(/[\(\),]/)?.find((e=>e.toLowerCase().includes("autoincrement")))?.trimStart()?.split(/\s+/)?.[0]?.replace(/["`]/g,""),n=await t.selectFrom(V`pragma_table_info(${e})`.as("table_info")).select(["name","type","notnull","dflt_value"]).orderBy("cid").execute();return{name:e,isView:"view"===i.type,columns:n.map((e=>({name:e.name,dataType:e.type,isNullable:!e.notnull,isAutoIncrementing:e.name===s,hasDefaultValue:null!=e.dflt_value})))}}}class Vt{get supportsTransactionalDdl(){return!1}get supportsReturning(){return!0}async acquireMigrationLock(){}async releaseMigrationLock(){}}class $t{#E;constructor(t){this.#E=e({...t})}createDriver(){return new Wt(this.#E)}createQueryCompiler(){return new Pt}createAdapter(){return new Vt}createIntrospector(e){return new Ft(e)}}const Kt=/"/g;class jt extends Ct{sanitizeIdentifier(e){return e.replace(Kt,'""')}}class Jt{#k;constructor(e){this.#k=e}async getSchemas(){return(await this.#k.selectFrom("pg_catalog.pg_namespace").select("nspname").$castTo().execute()).map((e=>({name:e.nspname})))}async getTables(e={withInternalKyselyTables:!1}){let t=this.#k.selectFrom("pg_catalog.pg_attribute as a").innerJoin("pg_catalog.pg_class as c","a.attrelid","c.oid").innerJoin("pg_catalog.pg_namespace as ns","c.relnamespace","ns.oid").innerJoin("pg_catalog.pg_type as typ","a.atttypid","typ.oid").innerJoin("pg_catalog.pg_namespace as dtns","typ.typnamespace","dtns.oid").select(["a.attname as column","a.attnotnull as not_null","a.atthasdef as has_default","c.relname as table","c.relkind as table_type","ns.nspname as schema","typ.typname as type","dtns.nspname as type_schema",this.#k.selectFrom("pg_class").select(V`true`.as("auto_incrementing")).whereRef("relnamespace","=","c.relnamespace").where("relkind","=","S").where("relname","=",V`c.relname || '_' || a.attname || '_seq'`).as("auto_incrementing")]).where("c.relkind","in",["r","v"]).where("ns.nspname","!~","^pg_").where("ns.nspname","!=","information_schema").where("a.attnum",">=",0).where("a.attisdropped","!=",!0).orderBy("ns.nspname").orderBy("c.relname").orderBy("a.attnum").$castTo();e.withInternalKyselyTables||(t=t.where("c.relname","!=",St).where("c.relname","!=",Bt));const i=await t.execute();return this.#X(i)}async getMetadata(e){return{tables:await this.getTables(e)}}#X(t){return t.reduce(((t,i)=>{let s=t.find((e=>e.name===i.table&&e.schema===i.schema));return s||(s=e({name:i.table,isView:"v"===i.table_type,schema:i.schema,columns:[]}),t.push(s)),s.columns.push(e({name:i.column,dataType:i.type,dataTypeSchema:i.type_schema,isNullable:!i.not_null,isAutoIncrementing:!!i.auto_incrementing,hasDefaultValue:i.has_default})),t}),[])}}const Gt=BigInt("3853314791062309107");class zt extends At{get supportsTransactionalDdl(){return!0}get supportsReturning(){return!0}async acquireMigrationLock(e){await V`select pg_advisory_xact_lock(${V.lit(Gt)})`.execute(e)}async releaseMigrationLock(){}}function Ht(e,t){if(E(i=e)&&W(i.stack)&&t.stack){const i=t.stack.split("\n").slice(1).join("\n");return e.stack+=`\n${i}`,e}var i;return e}const Yt=Symbol();class Xt{#E;#h=new WeakMap;#Z;constructor(t){this.#E=e({...t})}async init(){this.#Z=T(this.#E.pool)?await this.#E.pool():this.#E.pool}async acquireConnection(){const e=await this.#ee();let t=this.#h.get(e);return t||(t=new Zt(e),this.#h.set(e,t),this.#E?.onCreateConnection&&await this.#E.onCreateConnection(t)),t}async#ee(){return new Promise(((e,t)=>{this.#Z.getConnection((async(i,s)=>{i?t(i):e(s)}))}))}async beginTransaction(e,t){t.isolationLevel&&await e.executeQuery(It.raw(`set transaction isolation level ${t.isolationLevel}`)),await e.executeQuery(It.raw("begin"))}async commitTransaction(e){await e.executeQuery(It.raw("commit"))}async rollbackTransaction(e){await e.executeQuery(It.raw("rollback"))}async releaseConnection(e){e[Yt]()}async destroy(){return new Promise(((e,t)=>{this.#Z.end((i=>{i?t(i):e()}))}))}}class Zt{#te;constructor(e){this.#te=e}async executeQuery(e){try{const i=await this.#ie(e);if(E(t=i)&&"insertId"in t&&"affectedRows"in t){const{insertId:e,affectedRows:t}=i,s=null!=t?BigInt(t):void 0;return{insertId:null!=e&&"0"!==e.toString()?BigInt(e):void 0,numUpdatedOrDeletedRows:s,numAffectedRows:s,rows:[]}}return Array.isArray(i)?{rows:i}:{rows:[]}}catch(e){throw Ht(e,new Error)}var t}#ie(e){return new Promise(((t,i)=>{this.#te.query(e.sql,e.parameters,((e,s)=>{e?i(e):t(s)}))}))}async*streamQuery(e,t){const i=this.#te.query(e.sql,e.parameters).stream({objectMode:!0});try{for await(const e of i)yield{rows:[e]}}catch(e){if(e&&"object"==typeof e&&"code"in e&&"ERR_STREAM_PREMATURE_CLOSE"===e.code)return;throw e}}[Yt](){this.#te.release()}}const ei=/`/g;class ti extends Ct{getCurrentParameterPlaceholder(){return"?"}getLeftExplainOptionsWrapper(){return""}getExplainOptionAssignment(){return"="}getExplainOptionsDelimiter(){return" "}getRightExplainOptionsWrapper(){return""}getLeftIdentifierWrapper(){return"`"}getRightIdentifierWrapper(){return"`"}sanitizeIdentifier(e){return e.replace(ei,"``")}}class ii{#k;constructor(e){this.#k=e}async getSchemas(){return(await this.#k.selectFrom("information_schema.schemata").select("schema_name").$castTo().execute()).map((e=>({name:e.SCHEMA_NAME})))}async getTables(e={withInternalKyselyTables:!1}){let t=this.#k.selectFrom("information_schema.columns as columns").innerJoin("information_schema.tables as tables",(e=>e.onRef("columns.TABLE_CATALOG","=","tables.TABLE_CATALOG").onRef("columns.TABLE_SCHEMA","=","tables.TABLE_SCHEMA").onRef("columns.TABLE_NAME","=","tables.TABLE_NAME"))).select(["columns.COLUMN_NAME","columns.COLUMN_DEFAULT","columns.TABLE_NAME","columns.TABLE_SCHEMA","tables.TABLE_TYPE","columns.IS_NULLABLE","columns.DATA_TYPE","columns.EXTRA"]).where("columns.TABLE_SCHEMA","=",V`database()`).orderBy("columns.TABLE_NAME").orderBy("columns.ORDINAL_POSITION").$castTo();e.withInternalKyselyTables||(t=t.where("columns.TABLE_NAME","!=",St).where("columns.TABLE_NAME","!=",Bt));const i=await t.execute();return this.#X(i)}async getMetadata(e){return{tables:await this.getTables(e)}}#X(t){return t.reduce(((t,i)=>{let s=t.find((e=>e.name===i.TABLE_NAME));return s||(s=e({name:i.TABLE_NAME,isView:"VIEW"===i.TABLE_TYPE,schema:i.TABLE_SCHEMA,columns:[]}),t.push(s)),s.columns.push(e({name:i.COLUMN_NAME,dataType:i.DATA_TYPE,isNullable:"YES"===i.IS_NULLABLE,isAutoIncrementing:i.EXTRA.toLowerCase().includes("auto_increment"),hasDefaultValue:null!==i.COLUMN_DEFAULT})),t}),[])}}const si="ea586330-2c93-47c8-908d-981d9d270f9d";class ni extends At{get supportsTransactionalDdl(){return!1}get supportsReturning(){return!1}async acquireMigrationLock(e){await V`select get_lock(${V.lit(si)}, ${V.lit(3600)})`.execute(e)}async releaseMigrationLock(e){await V`select release_lock(${V.lit(si)})`.execute(e)}}class ri{#E;constructor(e){this.#E=e}createDriver(){return new Xt(this.#E)}createQueryCompiler(){return new ti}createAdapter(){return new ni}createIntrospector(e){return new ii(e)}}const oi=Symbol();class pi{#E;#h=new WeakMap;#Z;constructor(t){this.#E=e({...t})}async init(){this.#Z=T(this.#E.pool)?await this.#E.pool():this.#E.pool}async acquireConnection(){const e=await this.#Z.connect();let t=this.#h.get(e);return t||(t=new di(e,{cursor:this.#E.cursor??null}),this.#h.set(e,t),this.#E?.onCreateConnection&&await this.#E.onCreateConnection(t)),t}async beginTransaction(e,t){t.isolationLevel?await e.executeQuery(It.raw(`start transaction isolation level ${t.isolationLevel}`)):await e.executeQuery(It.raw("begin"))}async commitTransaction(e){await e.executeQuery(It.raw("commit"))}async rollbackTransaction(e){await e.executeQuery(It.raw("rollback"))}async releaseConnection(e){e[oi]()}async destroy(){if(this.#Z){const e=this.#Z;this.#Z=void 0,await e.end()}}}class di{#se;#ne;constructor(e,t){this.#se=e,this.#ne=t}async executeQuery(e){try{const t=await this.#se.query(e.sql,[...e.parameters]);if("INSERT"===t.command||"UPDATE"===t.command||"DELETE"===t.command){const e=BigInt(t.rowCount);return{numUpdatedOrDeletedRows:e,numAffectedRows:e,rows:t.rows??[]}}return{rows:t.rows??[]}}catch(e){throw Ht(e,new Error)}}async*streamQuery(e,t){if(!this.#ne.cursor)throw new Error("'cursor' is not present in your postgres dialect config. It's required to make streaming work in postgres.");if(!Number.isInteger(t)||t<=0)throw new Error("chunkSize must be a positive integer");const i=this.#se.query(new this.#ne.cursor(e.sql,e.parameters.slice()));try{for(;;){const e=await i.read(t);if(0===e.length)break;yield{rows:e}}}finally{await i.close()}}[oi](){this.#se.release()}}class ci{#E;constructor(e){this.#E=e}createDriver(){return new pi(this.#E)}createQueryCompiler(){return new jt}createAdapter(){return new zt}createIntrospector(e){return new Jt(e)}}class hi{#t;constructor(e){this.#t=e}async getMigrations(){const e={},t=await this.#t.fs.readdir(this.#t.migrationFolder);for(const i of t)if(i.endsWith(".js")||i.endsWith(".ts")&&!i.endsWith(".d.ts")||i.endsWith(".mjs")||i.endsWith(".mts")&&!i.endsWith(".d.mts")){const t=await import(this.#t.path.join(this.#t.migrationFolder,i)),s=i.substring(0,i.lastIndexOf("."));li(t?.default)?e[s]=t.default:li(t)&&(e[s]=t)}return e}}function li(e){return E(e)&&T(e.up)}class ui extends u{#re;constructor(e){super(),this.#re=e}transformIdentifier(e){return e=super.transformIdentifier(e),{...e,name:this.#re(e.name)}}}function mi(e){return e>="0"&&e<="9"}function yi(e){const t=new Map;return i=>{let s=t.get(i);return s||(s=e(i),t.set(i,s)),s}}class wi{opt;#oe;#re;#ae;constructor(e={}){this.opt=e,this.#oe=function({upperCase:e=!1}={}){return yi((t=>{if(0===t.length)return t;e&&function(e){for(let t=1,i=e.length;t<i;++t){const i=e[t];if("_"!==i&&i!==i.toUpperCase())return!1}return!0}(t)&&(t=t.toLowerCase());let i=t[0];for(let e=1,s=t.length;e<s;++e){const s=t[e],n=t[e-1];"_"!==s&&(i+="_"===n?s.toUpperCase():s)}return i}))}(e),this.#re=function({upperCase:e=!1,underscoreBeforeDigits:t=!1,underscoreBetweenUppercaseLetters:i=!1}={}){return yi((s=>{if(0===s.length)return s;const n=s.toUpperCase(),r=s.toLowerCase();let o=r[0];for(let e=1,a=s.length;e<a;++e){const a=s[e],p=s[e-1],d=n[e],c=n[e-1],h=r[e],l=r[e-1];t&&mi(a)&&!mi(p)?o+="_"+a:o+=a===d&&d!==h?i||p!==c||c===l?"_"+h:h:a}return e?o.toUpperCase():o}))}(e),this.#ae=new ui(this.snakeCase.bind(this))}transformQuery(e){return this.#ae.transformNode(e.node)}async transformResult(e){return e.result.rows&&Array.isArray(e.result.rows)?{...e.result,rows:e.result.rows.map((e=>this.mapRow(e)))}:e.result}mapRow(e){return Object.keys(e).reduce(((t,i)=>{let s=e[i];return Array.isArray(s)?s=s.map((e=>gi(e,this.opt)?this.mapRow(e):e)):gi(s,this.opt)&&(s=this.mapRow(s)),t[this.camelCase(i)]=s,t}),{})}snakeCase(e){return this.#re(e)}camelCase(e){return this.#oe(e)}}function gi(e,t){return E(e)&&!Q(e)&&!j(e)&&!G(e)&&!t?.maintainNestedObjectKeys}class fi extends u{transformSelectQuery(e){return this.#pe(super.transformSelectQuery(e))}transformUpdateQuery(e){return this.#pe(super.transformUpdateQuery(e))}transformDeleteQuery(e){return this.#pe(super.transformDeleteQuery(e))}#pe(t){return t.joins&&0!==t.joins.length?e({...t,joins:this.#de(t.joins)}):t}#de(t){const i=[];for(let e=0;e<t.length;++e){let s=!1;for(let i=e+1;i<t.length;++i)if(z(t[e],t[i])){s=!0;break}s||i.push(t[e])}return e(i)}}class Ni{#i=new fi;transformQuery(e){return this.#i.transformNode(e.node)}transformResult(e){return Promise.resolve(e.result)}}export{de as AddColumnNode,ke as AddConstraintNode,We as AlterColumnBuilder,ce as AlterColumnNode,Me as AlterTableBuilder,Se as AlterTableColumnAlteringBuilder,ee as AlterTableNode,Le as AlteredColumnBuilder,wi as CamelCasePlugin,me as CheckConstraintNode,xe as ColumnDefinitionBuilder,he as ColumnDefinitionNode,n as ColumnNode,It as CompiledQuery,vt as ConnectionBuilder,Re as CreateIndexBuilder,te as CreateIndexNode,_e as CreateSchemaBuilder,ie as CreateSchemaNode,Ve as CreateTableBuilder,ne as CreateTableNode,Ze as CreateTypeBuilder,Xe as CreateTypeNode,ze as CreateViewBuilder,Je as CreateViewNode,Bt as DEFAULT_MIGRATION_LOCK_TABLE,St as DEFAULT_MIGRATION_TABLE,Ce as DataTypeNode,Ni as DeduplicateJoinsPlugin,ot as DefaultConnectionProvider,Ct as DefaultQueryCompiler,pt as DefaultQueryExecutor,Ne as DefaultValueNode,At as DialectAdapterBase,le as DropColumnNode,Ae as DropConstraintNode,$e as DropIndexBuilder,re as DropIndexNode,Ke as DropSchemaBuilder,oe as DropSchemaNode,je as DropTableBuilder,pe as DropTableNode,tt as DropTypeBuilder,et as DropTypeNode,Ye as DropViewBuilder,He as DropViewNode,kt as DummyDriver,rt as DynamicModule,hi as FileMigrationProvider,Ie as ForeignKeyConstraintBuilder,Ee as ForeignKeyConstraintNode,fe as GeneratedNode,i as IdentifierNode,O as InsertQueryNode,gt as Kysely,ut as LOG_LEVELS,Be as ListNode,mt as Log,Qt as MIGRATION_LOCK_ID,_t as Migrator,be as ModifyColumnNode,ni as MysqlAdapter,ri as MysqlDialect,Xt as MysqlDriver,ii as MysqlIntrospector,ti as MysqlQueryCompiler,Rt as NO_MIGRATIONS,se as ON_COMMIT_ACTIONS,ye as ON_MODIFY_FOREIGN_ACTIONS,u as OperationNodeTransformer,bt as OperationNodeVisitor,q as OperatorNode,zt as PostgresAdapter,ci as PostgresDialect,pi as PostgresDriver,Jt as PostgresIntrospector,jt as PostgresQueryCompiler,Ue as PrimaryConstraintNode,I as QueryCreator,w as QueryNode,y as RawNode,d as ReferenceNode,we as ReferencesNode,ue as RenameColumnNode,nt as SchemaModule,c as SelectAllNode,A as SetOperationNode,ht as SingleConnectionProvider,Vt as SqliteAdapter,$t as SqliteDialect,Wt as SqliteDriver,Ft as SqliteIntrospector,Pt as SqliteQueryCompiler,lt as TRANSACTION_ISOLATION_LEVELS,t as TableNode,ft as Transaction,xt as TransactionBuilder,Oe as UniqueConstraintNode,f as ValueListNode,o as ValueNode,x as WithSchemaPlugin,k as createFunctionModule,wt as isCompilable,Nt as isKyselyProps,r as isOperationNodeSource,V as sql};
