import{f as e,I as t,S as i,C as s,i as n,V as r,p as o,a,b as d,c,R as p,d as h,n as l,O as u,Q as m,e as y,g as w,h as f,j as g,k as N,W as v,D as b,l as x,m as C,o as T,q as E,r as I,s as O,t as A,u as k,P as q,v as P,w as L,x as W,y as D,z as S,A as M,B,E as R,F as Q,G as F,H as V,J,K as j,L as K,M as z,N as G,T as H}from"./sql-_-gR90hb.js";export{aH as ARITHMETIC_OPERATORS,af as AggregateFunctionBuilder,b5 as AggregateFunctionNode,aq as AliasNode,ag as AliasedAggregateFunctionBuilder,$ as AliasedExpressionWrapper,am as AliasedJSONPathBuilder,ar as AndNode,a1 as AndWrapper,aJ as BINARY_OPERATORS,b9 as BinaryOperationNode,aG as COMPARISON_OPERATORS,aj as CaseEndBuilder,ah as CaseThenBuilder,ai as CaseWhenBuilder,as as ColumnUpdateNode,au as CommonTableExpressionNameNode,at as CommonTableExpressionNode,b4 as DefaultInsertValueNode,a5 as DeleteQueryBuilder,av as DeleteQueryNode,aa as DeleteResult,b3 as ExplainNode,_ as ExpressionWrapper,aw as FromNode,ax as GroupByItemNode,ay as GroupByNode,az as HavingNode,a3 as InsertQueryBuilder,a9 as InsertResult,bf as JSONOperatorChainNode,ak as JSONPathBuilder,bd as JSONPathLegNode,be as JSONPathNode,bc as JSONReferenceNode,aI as JSON_OPERATORS,a8 as JoinBuilder,aA as JoinNode,aB as LimitNode,ap as NOOP_QUERY_EXECUTOR,a6 as NoResultError,ao as NoopQueryExecutor,aM as OPERATORS,aC as OffsetNode,ac as OnConflictBuilder,ad as OnConflictDoNothingBuilder,aD as OnConflictNode,ae as OnConflictUpdateBuilder,aE as OnDuplicateKeyNode,aF as OnNode,aS as OrNode,a0 as OrWrapper,aT as OrderByItemNode,aU as OrderByNode,b6 as OverNode,b8 as PartitionByItemNode,b7 as PartitionByNode,aV as PrimitiveValueListNode,aW as ReferenceNode,aX as ReturningNode,aY as SelectionNode,aZ as TableNode,al as TraversedJSONPathBuilder,bg as TupleNode,aK as UNARY_FILTER_OPERATORS,aL as UNARY_OPERATORS,ba as UnaryOperationNode,a4 as UpdateQueryBuilder,a_ as UpdateQueryNode,ab as UpdateResult,bb as UsingNode,a$ as ValuesNode,b0 as WhenNode,b1 as WhereNode,b2 as WithNode,an as createRawBuilder,a2 as createSelectQueryBuilder,U as expressionBuilder,Z as isAliasedExpression,aQ as isArithmeticOperator,aO as isBinaryOperator,aP as isComparisonOperator,Y as isExpression,aR as isJSONOperator,a7 as isNoResultErrorConstructor,aN as isOperator,X as logOnce}from"./sql-_-gR90hb.js";const ee=e({is:e=>"AlterTableNode"===e.kind,create:t=>e({kind:"AlterTableNode",table:t}),cloneWithTableProps:(t,i)=>e({...t,...i}),cloneWithColumnAlteration:(t,i)=>e({...t,columnAlterations:t.columnAlterations?[...t.columnAlterations,i]:[i]})}),te=e({is:e=>"CreateIndexNode"===e.kind,create:i=>e({kind:"CreateIndexNode",name:t.create(i)}),cloneWith:(t,i)=>e({...t,...i}),cloneWithColumns:(t,i)=>e({...t,columns:[...t.columns||[],...i]})}),ie=e({is:e=>"CreateSchemaNode"===e.kind,create:(i,s)=>e({kind:"CreateSchemaNode",schema:t.create(i),...s}),cloneWith:(t,i)=>e({...t,...i})}),se=["preserve rows","delete rows","drop"],ne=e({is:e=>"CreateTableNode"===e.kind,create:t=>e({kind:"CreateTableNode",table:t,columns:e([])}),cloneWithColumn:(t,i)=>e({...t,columns:e([...t.columns,i])}),cloneWithConstraint:(t,i)=>e({...t,constraints:t.constraints?e([...t.constraints,i]):e([i])}),cloneWithFrontModifier:(t,i)=>e({...t,frontModifiers:t.frontModifiers?e([...t.frontModifiers,i]):e([i])}),cloneWithEndModifier:(t,i)=>e({...t,endModifiers:t.endModifiers?e([...t.endModifiers,i]):e([i])}),cloneWith:(t,i)=>e({...t,...i})}),re=e({is:e=>"DropIndexNode"===e.kind,create:(t,s)=>e({kind:"DropIndexNode",name:i.create(t),...s}),cloneWith:(t,i)=>e({...t,...i})}),oe=e({is:e=>"DropSchemaNode"===e.kind,create:(i,s)=>e({kind:"DropSchemaNode",schema:t.create(i),...s}),cloneWith:(t,i)=>e({...t,...i})}),de=e({is:e=>"DropTableNode"===e.kind,create:(t,i)=>e({kind:"DropTableNode",table:t,...i}),cloneWith:(t,i)=>e({...t,...i})}),ce=e({is:e=>"AddColumnNode"===e.kind,create:t=>e({kind:"AddColumnNode",column:t})}),pe=e({is:e=>"ColumnDefinitionNode"===e.kind,create:(t,i)=>e({kind:"ColumnDefinitionNode",column:s.create(t),dataType:i}),cloneWithFrontModifier:(t,i)=>e({...t,frontModifiers:t.frontModifiers?e([...t.frontModifiers,i]):[i]}),cloneWithEndModifier:(t,i)=>e({...t,endModifiers:t.endModifiers?e([...t.endModifiers,i]):[i]}),cloneWith:(t,i)=>e({...t,...i})}),he=e({is:e=>"DropColumnNode"===e.kind,create:t=>e({kind:"DropColumnNode",column:s.create(t)})}),le=e({is:e=>"RenameColumnNode"===e.kind,create:(t,i)=>e({kind:"RenameColumnNode",column:s.create(t),renameTo:s.create(i)})}),ue=e({is:e=>"CheckConstraintNode"===e.kind,create:(i,s)=>e({kind:"CheckConstraintNode",expression:i,name:s?t.create(s):void 0})}),me=["no action","restrict","cascade","set null","set default"],ye=e({is:e=>"ReferencesNode"===e.kind,create:(t,i)=>e({kind:"ReferencesNode",table:t,columns:e([...i])}),cloneWithOnDelete:(t,i)=>e({...t,onDelete:i}),cloneWithOnUpdate:(t,i)=>e({...t,onUpdate:i})});function we(e){return n(e)?e.toOperationNode():r.createImmediate(e)}const fe=e({is:e=>"GeneratedNode"===e.kind,create:t=>e({kind:"GeneratedNode",...t}),createWithExpression:t=>e({kind:"GeneratedNode",always:!0,expression:t}),cloneWith:(t,i)=>e({...t,...i})}),ge=e({is:e=>"DefaultValueNode"===e.kind,create:t=>e({kind:"DefaultValueNode",defaultValue:t})});function Ne(e){if(me.includes(e))return e;throw new Error(`invalid OnModifyForeignAction ${e}`)}class ve{#e;constructor(e){this.#e=e}autoIncrement(){return new ve(pe.cloneWith(this.#e,{autoIncrement:!0}))}primaryKey(){return new ve(pe.cloneWith(this.#e,{primaryKey:!0}))}references(e){const t=a(e);if(!t.table||d.is(t.column))throw new Error(`invalid call references('${e}'). The reference must have format table.column or schema.table.column`);return new ve(pe.cloneWith(this.#e,{references:ye.create(t.table,[t.column])}))}onDelete(e){if(!this.#e.references)throw new Error("on delete constraint can only be added for foreign keys");return new ve(pe.cloneWith(this.#e,{references:ye.cloneWithOnDelete(this.#e.references,Ne(e))}))}onUpdate(e){if(!this.#e.references)throw new Error("on update constraint can only be added for foreign keys");return new ve(pe.cloneWith(this.#e,{references:ye.cloneWithOnUpdate(this.#e.references,Ne(e))}))}unique(){return new ve(pe.cloneWith(this.#e,{unique:!0}))}notNull(){return new ve(pe.cloneWith(this.#e,{notNull:!0}))}unsigned(){return new ve(pe.cloneWith(this.#e,{unsigned:!0}))}defaultTo(e){return new ve(pe.cloneWith(this.#e,{defaultTo:ge.create(we(e))}))}check(e){return new ve(pe.cloneWith(this.#e,{check:ue.create(e.toOperationNode())}))}generatedAlwaysAs(e){return new ve(pe.cloneWith(this.#e,{generated:fe.createWithExpression(e.toOperationNode())}))}generatedAlwaysAsIdentity(){return new ve(pe.cloneWith(this.#e,{generated:fe.create({identity:!0,always:!0})}))}generatedByDefaultAsIdentity(){return new ve(pe.cloneWith(this.#e,{generated:fe.create({identity:!0,byDefault:!0})}))}stored(){if(!this.#e.generated)throw new Error("stored() can only be called after generatedAlwaysAs");return new ve(pe.cloneWith(this.#e,{generated:fe.cloneWith(this.#e.generated,{stored:!0})}))}modifyFront(e){return new ve(pe.cloneWithFrontModifier(this.#e,e.toOperationNode()))}nullsNotDistinct(){return new ve(pe.cloneWith(this.#e,{nullsNotDistinct:!0}))}modifyEnd(e){return new ve(pe.cloneWithEndModifier(this.#e,e.toOperationNode()))}$call(e){return e(this)}toOperationNode(){return this.#e}}o(ve,"don't await ColumnDefinitionBuilder instances directly.");const xe=e({is:e=>"ModifyColumnNode"===e.kind,create:t=>e({kind:"ModifyColumnNode",column:t})}),Ce=e({is:e=>"DataTypeNode"===e.kind,create:t=>e({kind:"DataTypeNode",dataType:t})});function Te(e){return n(e)?e.toOperationNode():Ce.create(e)}const Ee=e({is:e=>"ForeignKeyConstraintNode"===e.kind,create:(i,s,n,r)=>e({kind:"ForeignKeyConstraintNode",columns:i,references:ye.create(s,n),name:r?t.create(r):void 0}),cloneWith:(t,i)=>e({...t,...i})});class Ie{#e;constructor(e){this.#e=e}onDelete(e){return new Ie(Ee.cloneWith(this.#e,{onDelete:Ne(e)}))}onUpdate(e){return new Ie(Ee.cloneWith(this.#e,{onUpdate:Ne(e)}))}$call(e){return e(this)}toOperationNode(){return this.#e}}o(Ie,"don't await ForeignKeyConstraintBuilder instances directly.");const _e=e({is:e=>"AddConstraintNode"===e.kind,create:t=>e({kind:"AddConstraintNode",constraint:t})}),Oe=e({is:e=>"UniqueConstraintNode"===e.kind,create:(i,n,r)=>e({kind:"UniqueConstraintNode",columns:e(i.map(s.create)),name:n?t.create(n):void 0,nullsNotDistinct:r}),cloneWith:(t,i)=>e({...t,...i})}),Ae=e({is:e=>"DropConstraintNode"===e.kind,create:i=>e({kind:"DropConstraintNode",constraintName:t.create(i)}),cloneWith:(t,i)=>e({...t,...i})}),ke=e({is:e=>"AlterColumnNode"===e.kind,create:(t,i,n)=>e({kind:"AlterColumnNode",column:s.create(t),[i]:n})});class qe{#t;constructor(e){this.#t=e}setDataType(e){return new Pe(ke.create(this.#t,"dataType",Te(e)))}setDefault(e){return new Pe(ke.create(this.#t,"setDefault",we(e)))}dropDefault(){return new Pe(ke.create(this.#t,"dropDefault",!0))}setNotNull(){return new Pe(ke.create(this.#t,"setNotNull",!0))}dropNotNull(){return new Pe(ke.create(this.#t,"dropNotNull",!0))}$call(e){return e(this)}}class Pe{#i;constructor(e){this.#i=e}toOperationNode(){return this.#i}}class Le{#s;constructor(t){this.#s=e(t)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Le,"don't await AlterTableExecutor instances directly. To execute the query you need to call `execute`");class We{#s;constructor(t){this.#s=e(t)}onDelete(e){return new We({...this.#s,constraintBuilder:this.#s.constraintBuilder.onDelete(e)})}onUpdate(e){return new We({...this.#s,constraintBuilder:this.#s.constraintBuilder.onUpdate(e)})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(ee.cloneWithTableProps(this.#s.node,{addConstraint:_e.create(this.#s.constraintBuilder.toOperationNode())}),this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(We,"don't await AlterTableAddForeignKeyConstraintBuilder instances directly. To execute the query you need to call `execute`");class De{#s;constructor(t){this.#s=e(t)}ifExists(){return new De({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{dropConstraint:Ae.cloneWith(this.#s.node.dropConstraint,{ifExists:!0})})})}cascade(){return new De({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{dropConstraint:Ae.cloneWith(this.#s.node.dropConstraint,{modifier:"cascade"})})})}restrict(){return new De({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{dropConstraint:Ae.cloneWith(this.#s.node.dropConstraint,{modifier:"restrict"})})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(De,"don't await AlterTableDropConstraintBuilder instances directly. To execute the query you need to call `execute`");const Se=e({is:e=>"PrimaryKeyConstraintNode"===e.kind,create:(i,n)=>e({kind:"PrimaryKeyConstraintNode",columns:e(i.map(s.create)),name:n?t.create(n):void 0})}),Me=e({is:e=>"AddIndexNode"===e.kind,create:i=>e({kind:"AddIndexNode",name:t.create(i)}),cloneWith:(t,i)=>e({...t,...i}),cloneWithColumns:(t,i)=>e({...t,columns:[...t.columns||[],...i]})});class Be{#s;constructor(t){this.#s=e(t)}unique(){return new Be({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addIndex:Me.cloneWith(this.#s.node.addIndex,{unique:!0})})})}column(e){return new Be({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addIndex:Me.cloneWithColumns(this.#s.node.addIndex,[c(e)])})})}columns(e){return new Be({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addIndex:Me.cloneWithColumns(this.#s.node.addIndex,e.map(c))})})}expression(e){return new Be({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addIndex:Me.cloneWithColumns(this.#s.node.addIndex,[e.toOperationNode()])})})}using(e){return new Be({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addIndex:Me.cloneWith(this.#s.node.addIndex,{using:p.createWithSql(e)})})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Be,"don't await AlterTableAddIndexBuilder instances directly. To execute the query you need to call `execute`");class Re{#e;constructor(e){this.#e=e}toOperationNode(){return this.#e}nullsNotDistinct(){return new Re(Oe.cloneWith(this.#e,{nullsNotDistinct:!0}))}}o(Re,"don't await UniqueConstraintNodeBuilder instances directly.");class Qe{#s;constructor(t){this.#s=e(t)}renameTo(e){return new Le({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{renameTo:h(e)})})}setSchema(e){return new Le({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{setSchema:t.create(e)})})}alterColumn(e,t){const i=t(new qe(e));return new Ue({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,i.toOperationNode())})}dropColumn(e){return new Ue({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,he.create(e))})}renameColumn(e,t){return new Ue({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,le.create(e,t))})}addColumn(e,t,i=l){const s=i(new ve(pe.create(e,Te(t))));return new Ue({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,ce.create(s.toOperationNode()))})}modifyColumn(e,t,i=l){const s=i(new ve(pe.create(e,Te(t))));return new Ue({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,xe.create(s.toOperationNode()))})}addUniqueConstraint(e,t,i=l){const s=i(new Re(Oe.create(t,e)));return new Le({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addConstraint:_e.create(s.toOperationNode())})})}addCheckConstraint(e,t){return new Le({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addConstraint:_e.create(ue.create(t.toOperationNode(),e))})})}addForeignKeyConstraint(e,t,i,n){return new We({...this.#s,constraintBuilder:new Ie(Ee.create(t.map(s.create),h(i),n.map(s.create),e))})}addPrimaryKeyConstraint(e,t){return new Le({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addConstraint:_e.create(Se.create(t,e))})})}dropConstraint(e){return new De({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{dropConstraint:Ae.create(e)})})}addIndex(e){return new Be({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{addIndex:Me.create(e)})})}dropIndex(e){return new Le({...this.#s,node:ee.cloneWithTableProps(this.#s.node,{dropIndex:re.create(e)})})}$call(e){return e(this)}}class Ue{#s;constructor(t){this.#s=e(t)}alterColumn(e,t){const i=t(new qe(e));return new Ue({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,i.toOperationNode())})}dropColumn(e){return new Ue({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,he.create(e))})}renameColumn(e,t){return new Ue({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,le.create(e,t))})}addColumn(e,t,i=l){const s=i(new ve(pe.create(e,Te(t))));return new Ue({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,ce.create(s.toOperationNode()))})}modifyColumn(e,t,i=l){const s=i(new ve(pe.create(e,Te(t))));return new Ue({...this.#s,node:ee.cloneWithColumnAlteration(this.#s.node,xe.create(s.toOperationNode()))})}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Qe,"don't await AlterTableBuilder instances"),o(qe,"don't await AlterColumnBuilder instances"),o(Ue,"don't await AlterTableColumnAlteringBuilder instances directly. To execute the query you need to call `execute`");class Fe extends u{transformValue(e){return{...super.transformValue(e),immediate:!0}}}class Ve{#s;constructor(t){this.#s=e(t)}ifNotExists(){return new Ve({...this.#s,node:te.cloneWith(this.#s.node,{ifNotExists:!0})})}unique(){return new Ve({...this.#s,node:te.cloneWith(this.#s.node,{unique:!0})})}nullsNotDistinct(){return new Ve({...this.#s,node:te.cloneWith(this.#s.node,{nullsNotDistinct:!0})})}on(e){return new Ve({...this.#s,node:te.cloneWith(this.#s.node,{table:h(e)})})}column(e){return new Ve({...this.#s,node:te.cloneWithColumns(this.#s.node,[c(e)])})}columns(e){return new Ve({...this.#s,node:te.cloneWithColumns(this.#s.node,e.map(c))})}expression(e){return new Ve({...this.#s,node:te.cloneWithColumns(this.#s.node,[e.toOperationNode()])})}using(e){return new Ve({...this.#s,node:te.cloneWith(this.#s.node,{using:p.createWithSql(e)})})}where(...e){const t=new Fe;return new Ve({...this.#s,node:m.cloneWithWhere(this.#s.node,t.transformNode(y(e)))})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Ve,"don't await CreateIndexBuilder instances directly. To execute the query you need to call `execute`");class $e{#s;constructor(t){this.#s=e(t)}ifNotExists(){return new $e({...this.#s,node:ie.cloneWith(this.#s.node,{ifNotExists:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}function Je(e){if(se.includes(e))return e;throw new Error(`invalid OnCommitAction ${e}`)}o($e,"don't await CreateSchemaBuilder instances directly. To execute the query you need to call `execute`");class je{#s;constructor(t){this.#s=e(t)}temporary(){return new je({...this.#s,node:ne.cloneWith(this.#s.node,{temporary:!0})})}onCommit(e){return new je({...this.#s,node:ne.cloneWith(this.#s.node,{onCommit:Je(e)})})}ifNotExists(){return new je({...this.#s,node:ne.cloneWith(this.#s.node,{ifNotExists:!0})})}addColumn(e,t,i=l){const s=i(new ve(pe.create(e,Te(t))));return new je({...this.#s,node:ne.cloneWithColumn(this.#s.node,s.toOperationNode())})}addPrimaryKeyConstraint(e,t){return new je({...this.#s,node:ne.cloneWithConstraint(this.#s.node,Se.create(t,e))})}addUniqueConstraint(e,t,i=l){const s=i(new Re(Oe.create(t,e)));return new je({...this.#s,node:ne.cloneWithConstraint(this.#s.node,s.toOperationNode())})}addCheckConstraint(e,t){return new je({...this.#s,node:ne.cloneWithConstraint(this.#s.node,ue.create(t.toOperationNode(),e))})}addForeignKeyConstraint(e,t,i,n,r=l){const o=r(new Ie(Ee.create(t.map(s.create),h(i),n.map(s.create),e)));return new je({...this.#s,node:ne.cloneWithConstraint(this.#s.node,o.toOperationNode())})}modifyFront(e){return new je({...this.#s,node:ne.cloneWithFrontModifier(this.#s.node,e.toOperationNode())})}modifyEnd(e){return new je({...this.#s,node:ne.cloneWithEndModifier(this.#s.node,e.toOperationNode())})}as(e){return new je({...this.#s,node:ne.cloneWith(this.#s.node,{selectQuery:w(e)})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(je,"don't await CreateTableBuilder instances directly. To execute the query you need to call `execute`");class Ke{#s;constructor(t){this.#s=e(t)}on(e){return new Ke({...this.#s,node:re.cloneWith(this.#s.node,{table:h(e)})})}ifExists(){return new Ke({...this.#s,node:re.cloneWith(this.#s.node,{ifExists:!0})})}cascade(){return new Ke({...this.#s,node:re.cloneWith(this.#s.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Ke,"don't await DropIndexBuilder instances directly. To execute the query you need to call `execute`");class ze{#s;constructor(t){this.#s=e(t)}ifExists(){return new ze({...this.#s,node:oe.cloneWith(this.#s.node,{ifExists:!0})})}cascade(){return new ze({...this.#s,node:oe.cloneWith(this.#s.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(ze,"don't await DropSchemaBuilder instances directly. To execute the query you need to call `execute`");class Ye{#s;constructor(t){this.#s=e(t)}ifExists(){return new Ye({...this.#s,node:de.cloneWith(this.#s.node,{ifExists:!0})})}cascade(){return new Ye({...this.#s,node:de.cloneWith(this.#s.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Ye,"don't await DropTableBuilder instances directly. To execute the query you need to call `execute`");const Ge=e({is:e=>"CreateViewNode"===e.kind,create:t=>e({kind:"CreateViewNode",name:i.create(t)}),cloneWith:(t,i)=>e({...t,...i})});class He{#n=new Fe;transformQuery(e){return this.#n.transformNode(e.node)}transformResult(e){return Promise.resolve(e.result)}}class Xe{#s;constructor(t){this.#s=e(t)}temporary(){return new Xe({...this.#s,node:Ge.cloneWith(this.#s.node,{temporary:!0})})}materialized(){return new Xe({...this.#s,node:Ge.cloneWith(this.#s.node,{materialized:!0})})}ifNotExists(){return new Xe({...this.#s,node:Ge.cloneWith(this.#s.node,{ifNotExists:!0})})}orReplace(){return new Xe({...this.#s,node:Ge.cloneWith(this.#s.node,{orReplace:!0})})}columns(e){return new Xe({...this.#s,node:Ge.cloneWith(this.#s.node,{columns:e.map(f)})})}as(e){const t=e.withPlugin(new He).toOperationNode();return new Xe({...this.#s,node:Ge.cloneWith(this.#s.node,{as:t})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(Xe,"don't await CreateViewBuilder instances directly. To execute the query you need to call `execute`");const Ze=e({is:e=>"DropViewNode"===e.kind,create:t=>e({kind:"DropViewNode",name:i.create(t)}),cloneWith:(t,i)=>e({...t,...i})});class et{#s;constructor(t){this.#s=e(t)}materialized(){return new et({...this.#s,node:Ze.cloneWith(this.#s.node,{materialized:!0})})}ifExists(){return new et({...this.#s,node:Ze.cloneWith(this.#s.node,{ifExists:!0})})}cascade(){return new et({...this.#s,node:Ze.cloneWith(this.#s.node,{cascade:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(et,"don't await DropViewBuilder instances directly. To execute the query you need to call `execute`");const tt=e({is:e=>"CreateTypeNode"===e.kind,create:t=>e({kind:"CreateTypeNode",name:t}),cloneWithEnum:(t,i)=>e({...t,enum:g.create(i.map((e=>r.createImmediate(e))))})});class it{#s;constructor(t){this.#s=e(t)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}asEnum(e){return new it({...this.#s,node:tt.cloneWithEnum(this.#s.node,e)})}$call(e){return e(this)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}o(it,"don't await CreateTypeBuilder instances directly. To execute the query you need to call `execute`");const st=e({is:e=>"DropTypeNode"===e.kind,create:t=>e({kind:"DropTypeNode",name:t}),cloneWith:(t,i)=>e({...t,...i})});class nt{#s;constructor(t){this.#s=e(t)}ifExists(){return new nt({...this.#s,node:st.cloneWith(this.#s.node,{ifExists:!0})})}$call(e){return e(this)}toOperationNode(){return this.#s.executor.transformQuery(this.#s.node,this.#s.queryId)}compile(){return this.#s.executor.compileQuery(this.toOperationNode(),this.#s.queryId)}async execute(){await this.#s.executor.executeQuery(this.compile(),this.#s.queryId)}}function rt(e){if(e.includes(".")){const t=e.split(".").map(ot);if(2===t.length)return i.createWithSchema(t[0],t[1]);throw new Error(`invalid schemable identifier ${e}`)}return i.create(e)}function ot(e){return e.trim()}o(nt,"don't await DropTypeBuilder instances directly. To execute the query you need to call `execute`");class dt{#r;constructor(e){this.#r=e}createTable(e){return new je({queryId:N(),executor:this.#r,node:ne.create(h(e))})}dropTable(e){return new Ye({queryId:N(),executor:this.#r,node:de.create(h(e))})}createIndex(e){return new Ve({queryId:N(),executor:this.#r,node:te.create(e)})}dropIndex(e){return new Ke({queryId:N(),executor:this.#r,node:re.create(e)})}createSchema(e){return new $e({queryId:N(),executor:this.#r,node:ie.create(e)})}dropSchema(e){return new ze({queryId:N(),executor:this.#r,node:oe.create(e)})}alterTable(e){return new Qe({queryId:N(),executor:this.#r,node:ee.create(h(e))})}createView(e){return new Xe({queryId:N(),executor:this.#r,node:Ge.create(e)})}dropView(e){return new et({queryId:N(),executor:this.#r,node:Ze.create(e)})}createType(e){return new it({queryId:N(),executor:this.#r,node:tt.create(rt(e))})}dropType(e){return new nt({queryId:N(),executor:this.#r,node:st.create(rt(e))})}withPlugin(e){return new dt(this.#r.withPlugin(e))}withoutPlugins(){return new dt(this.#r.withoutPlugins())}withSchema(e){return new dt(this.#r.withPluginAtFront(new v(e)))}}class ct{ref(e){return new b(e)}}class pt{#o;constructor(e){this.#o=e}async provideConnection(e){const t=await this.#o.acquireConnection();try{return await e(t)}finally{await this.#o.releaseConnection(t)}}}class ht extends x{#a;#d;#c;constructor(e,t,i,s=[]){super(s),this.#a=e,this.#d=t,this.#c=i}get adapter(){return this.#d}compileQuery(e){return this.#a.compileQuery(e)}provideConnection(e){return this.#c.provideConnection(e)}withPlugins(e){return new ht(this.#a,this.#d,this.#c,[...this.plugins,...e])}withPlugin(e){return new ht(this.#a,this.#d,this.#c,[...this.plugins,e])}withPluginAtFront(e){return new ht(this.#a,this.#d,this.#c,[e,...this.plugins])}withConnectionProvider(e){return new ht(this.#a,this.#d,e,[...this.plugins])}withoutPlugins(){return new ht(this.#a,this.#d,this.#c,[])}}function lt(){return"undefined"!=typeof performance&&C(performance.now)?performance.now():Date.now()}class ut{#o;#p;#h;#l;#u;#m=new WeakSet;constructor(e,t){this.#l=!1,this.#o=e,this.#p=t}async init(){if(this.#u)throw new Error("driver has already been destroyed");this.#h||(this.#h=this.#o.init().then((()=>{this.#l=!0})).catch((e=>(this.#h=void 0,Promise.reject(e))))),await this.#h}async acquireConnection(){if(this.#u)throw new Error("driver has already been destroyed");this.#l||await this.init();const e=await this.#o.acquireConnection();return this.#m.has(e)||(this.#y()&&this.#w(e),this.#m.add(e)),e}async releaseConnection(e){await this.#o.releaseConnection(e)}beginTransaction(e,t){return this.#o.beginTransaction(e,t)}commitTransaction(e){return this.#o.commitTransaction(e)}rollbackTransaction(e){return this.#o.rollbackTransaction(e)}async destroy(){this.#h&&(await this.#h,this.#u||(this.#u=this.#o.destroy().catch((e=>(this.#u=void 0,Promise.reject(e))))),await this.#u)}#y(){return this.#p.isLevelEnabled("query")||this.#p.isLevelEnabled("error")}#w(e){const t=e.executeQuery;e.executeQuery=async i=>{let s;const n=lt();try{return await t.call(e,i)}catch(e){throw s=e,await this.#f(e,i,n),e}finally{s||await this.#g(i,n)}}}async#f(e,t,i){await this.#p.error((()=>({level:"error",error:e,query:t,queryDurationMillis:this.#N(i)})))}async#g(e,t){await this.#p.query((()=>({level:"query",query:e,queryDurationMillis:this.#N(t)})))}#N(e){return lt()-e}}const mt=()=>{};class yt{#v;#b;constructor(e){this.#v=e}async provideConnection(e){for(;this.#b;)await this.#b.catch(mt);return this.#b=this.#x(e).finally((()=>{this.#b=void 0})),this.#b}async#x(e){return await e(this.#v)}}const wt=["read uncommitted","read committed","repeatable read","serializable","snapshot"],ft=e(["query","error"]);class gt{#C;#T;constructor(t){C(t)?(this.#T=t,this.#C=e({query:!0,error:!0})):(this.#T=Nt,this.#C=e({query:t.includes("query"),error:t.includes("error")}))}isLevelEnabled(e){return this.#C[e]}async query(e){this.#C.query&&await this.#T(e())}async error(e){this.#C.error&&await this.#T(e())}}function Nt(e){"query"===e.level?(console.log(`kysely:query: ${e.query.sql}`),console.log(`kysely:query: duration: ${e.queryDurationMillis.toFixed(1)}ms`)):"error"===e.level&&(e.error instanceof Error?console.error(`kysely:error: ${e.error.stack??e.error.message}`):console.error(`kysely:error: ${JSON.stringify({error:e.error,query:e.query.sql,queryDurationMillis:e.queryDurationMillis})}`))}function vt(e){return T(e)&&C(e.compile)}class bt extends E{#s;constructor(t){let i,s;if(Ct(t))i={executor:t.executor},s={...t};else{const e=t.dialect,n=e.createDriver(),r=e.createQueryCompiler(),o=e.createAdapter(),a=new gt(t.log??[]),d=new ut(n,a),c=new pt(d),p=new ht(r,o,c,t.plugins??[]);i={executor:p},s={config:t,executor:p,dialect:e,driver:d}}super(i),this.#s=e(s)}get schema(){return new dt(this.#s.executor)}get dynamic(){return new ct}get introspection(){return this.#s.dialect.createIntrospector(this.withoutPlugins())}case(e){return new I({node:O.create(A(e)?void 0:w(e))})}get fn(){return k()}transaction(){return new Et({...this.#s})}connection(){return new Tt({...this.#s})}withPlugin(e){return new bt({...this.#s,executor:this.#s.executor.withPlugin(e)})}withoutPlugins(){return new bt({...this.#s,executor:this.#s.executor.withoutPlugins()})}withSchema(e){return new bt({...this.#s,executor:this.#s.executor.withPluginAtFront(new v(e))})}withTables(){return new bt({...this.#s})}async destroy(){await this.#s.driver.destroy()}get isTransaction(){return!1}getExecutor(){return this.#s.executor}executeQuery(e,t=N()){const i=vt(e)?e.compile():e;return this.getExecutor().executeQuery(i,t)}}class xt extends bt{#s;constructor(e){super(e),this.#s=e}get isTransaction(){return!0}transaction(){throw new Error("calling the transaction method for a Transaction is not supported")}connection(){throw new Error("calling the connection method for a Transaction is not supported")}async destroy(){throw new Error("calling the destroy method for a Transaction is not supported")}withPlugin(e){return new xt({...this.#s,executor:this.#s.executor.withPlugin(e)})}withoutPlugins(){return new xt({...this.#s,executor:this.#s.executor.withoutPlugins()})}withSchema(e){return new xt({...this.#s,executor:this.#s.executor.withPluginAtFront(new v(e))})}withTables(){return new xt({...this.#s})}}function Ct(e){return T(e)&&T(e.config)&&T(e.driver)&&T(e.executor)&&T(e.dialect)}class Tt{#s;constructor(t){this.#s=e(t)}async execute(e){return this.#s.executor.provideConnection((async t=>{const i=this.#s.executor.withConnectionProvider(new yt(t)),s=new bt({...this.#s,executor:i});return await e(s)}))}}o(Tt,"don't await ConnectionBuilder instances directly. To execute the query you need to call the `execute` method");class Et{#s;constructor(t){this.#s=e(t)}setIsolationLevel(e){return new Et({...this.#s,isolationLevel:e})}async execute(e){const{isolationLevel:t,...i}=this.#s,s={isolationLevel:t};return function(e){if(e.isolationLevel&&!wt.includes(e.isolationLevel))throw new Error(`invalid transaction isolation level ${e.isolationLevel}`)}(s),this.#s.executor.provideConnection((async t=>{const n=this.#s.executor.withConnectionProvider(new yt(t)),r=new xt({...i,executor:n});try{await this.#s.driver.beginTransaction(t,s);const i=await e(r);return await this.#s.driver.commitTransaction(t),i}catch(e){throw await this.#s.driver.rollbackTransaction(t),e}}))}}o(Et,"don't await TransactionBuilder instances directly. To execute the transaction you need to call the `execute` method");class It{nodeStack=[];get parentNode(){return this.nodeStack[this.nodeStack.length-2]}#E=e({AliasNode:this.visitAlias.bind(this),ColumnNode:this.visitColumn.bind(this),IdentifierNode:this.visitIdentifier.bind(this),SchemableIdentifierNode:this.visitSchemableIdentifier.bind(this),RawNode:this.visitRaw.bind(this),ReferenceNode:this.visitReference.bind(this),SelectQueryNode:this.visitSelectQuery.bind(this),SelectionNode:this.visitSelection.bind(this),TableNode:this.visitTable.bind(this),FromNode:this.visitFrom.bind(this),SelectAllNode:this.visitSelectAll.bind(this),AndNode:this.visitAnd.bind(this),OrNode:this.visitOr.bind(this),ValueNode:this.visitValue.bind(this),ValueListNode:this.visitValueList.bind(this),PrimitiveValueListNode:this.visitPrimitiveValueList.bind(this),ParensNode:this.visitParens.bind(this),JoinNode:this.visitJoin.bind(this),OperatorNode:this.visitOperator.bind(this),WhereNode:this.visitWhere.bind(this),InsertQueryNode:this.visitInsertQuery.bind(this),DeleteQueryNode:this.visitDeleteQuery.bind(this),ReturningNode:this.visitReturning.bind(this),CreateTableNode:this.visitCreateTable.bind(this),AddColumnNode:this.visitAddColumn.bind(this),ColumnDefinitionNode:this.visitColumnDefinition.bind(this),DropTableNode:this.visitDropTable.bind(this),DataTypeNode:this.visitDataType.bind(this),OrderByNode:this.visitOrderBy.bind(this),OrderByItemNode:this.visitOrderByItem.bind(this),GroupByNode:this.visitGroupBy.bind(this),GroupByItemNode:this.visitGroupByItem.bind(this),UpdateQueryNode:this.visitUpdateQuery.bind(this),ColumnUpdateNode:this.visitColumnUpdate.bind(this),LimitNode:this.visitLimit.bind(this),OffsetNode:this.visitOffset.bind(this),OnConflictNode:this.visitOnConflict.bind(this),OnDuplicateKeyNode:this.visitOnDuplicateKey.bind(this),CreateIndexNode:this.visitCreateIndex.bind(this),DropIndexNode:this.visitDropIndex.bind(this),ListNode:this.visitList.bind(this),PrimaryKeyConstraintNode:this.visitPrimaryKeyConstraint.bind(this),UniqueConstraintNode:this.visitUniqueConstraint.bind(this),ReferencesNode:this.visitReferences.bind(this),CheckConstraintNode:this.visitCheckConstraint.bind(this),WithNode:this.visitWith.bind(this),CommonTableExpressionNode:this.visitCommonTableExpression.bind(this),CommonTableExpressionNameNode:this.visitCommonTableExpressionName.bind(this),HavingNode:this.visitHaving.bind(this),CreateSchemaNode:this.visitCreateSchema.bind(this),DropSchemaNode:this.visitDropSchema.bind(this),AlterTableNode:this.visitAlterTable.bind(this),DropColumnNode:this.visitDropColumn.bind(this),RenameColumnNode:this.visitRenameColumn.bind(this),AlterColumnNode:this.visitAlterColumn.bind(this),ModifyColumnNode:this.visitModifyColumn.bind(this),AddConstraintNode:this.visitAddConstraint.bind(this),DropConstraintNode:this.visitDropConstraint.bind(this),ForeignKeyConstraintNode:this.visitForeignKeyConstraint.bind(this),CreateViewNode:this.visitCreateView.bind(this),DropViewNode:this.visitDropView.bind(this),GeneratedNode:this.visitGenerated.bind(this),DefaultValueNode:this.visitDefaultValue.bind(this),OnNode:this.visitOn.bind(this),ValuesNode:this.visitValues.bind(this),SelectModifierNode:this.visitSelectModifier.bind(this),CreateTypeNode:this.visitCreateType.bind(this),DropTypeNode:this.visitDropType.bind(this),ExplainNode:this.visitExplain.bind(this),DefaultInsertValueNode:this.visitDefaultInsertValue.bind(this),AggregateFunctionNode:this.visitAggregateFunction.bind(this),OverNode:this.visitOver.bind(this),PartitionByNode:this.visitPartitionBy.bind(this),PartitionByItemNode:this.visitPartitionByItem.bind(this),SetOperationNode:this.visitSetOperation.bind(this),BinaryOperationNode:this.visitBinaryOperation.bind(this),UnaryOperationNode:this.visitUnaryOperation.bind(this),UsingNode:this.visitUsing.bind(this),FunctionNode:this.visitFunction.bind(this),CaseNode:this.visitCase.bind(this),WhenNode:this.visitWhen.bind(this),JSONReferenceNode:this.visitJSONReference.bind(this),JSONPathNode:this.visitJSONPath.bind(this),JSONPathLegNode:this.visitJSONPathLeg.bind(this),JSONOperatorChainNode:this.visitJSONOperatorChain.bind(this),TupleNode:this.visitTuple.bind(this),AddIndexNode:this.visitAddIndex.bind(this)});visitNode=e=>{this.nodeStack.push(e),this.#E[e.kind](e),this.nodeStack.pop()}}class _t extends It{#I="";#_=[];get numParameters(){return this.#_.length}compileQuery(t){return this.#I="",this.#_=[],this.visitNode(t),e({query:t,sql:this.getSql(),parameters:[...this.#_]})}getSql(){return this.#I}visitSelectQuery(e){const t=!(void 0===this.parentNode||q.is(this.parentNode)||P.is(this.parentNode)||ne.is(this.parentNode)||Ge.is(this.parentNode)||L.is(this.parentNode));void 0===this.parentNode&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append("select"),e.distinctOn&&(this.append(" "),this.compileDistinctOn(e.distinctOn)),e.frontModifiers?.length&&(this.append(" "),this.compileList(e.frontModifiers," ")),e.selections&&(this.append(" "),this.compileList(e.selections)),e.from&&(this.append(" "),this.visitNode(e.from)),e.joins&&(this.append(" "),this.compileList(e.joins," ")),e.where&&(this.append(" "),this.visitNode(e.where)),e.groupBy&&(this.append(" "),this.visitNode(e.groupBy)),e.having&&(this.append(" "),this.visitNode(e.having)),e.setOperations&&(this.append(" "),this.compileList(e.setOperations," ")),e.orderBy&&(this.append(" "),this.visitNode(e.orderBy)),e.limit&&(this.append(" "),this.visitNode(e.limit)),e.offset&&(this.append(" "),this.visitNode(e.offset)),e.endModifiers?.length&&(this.append(" "),this.compileList(this.sortSelectModifiers([...e.endModifiers])," ")),t&&this.append(")")}visitFrom(e){this.append("from "),this.compileList(e.froms)}visitSelection(e){this.visitNode(e.selection)}visitColumn(e){this.visitNode(e.column)}compileDistinctOn(e){this.append("distinct on ("),this.compileList(e),this.append(")")}compileList(e,t=", "){const i=e.length-1;for(let s=0;s<=i;s++)this.visitNode(e[s]),s<i&&this.append(t)}visitWhere(e){this.append("where "),this.visitNode(e.where)}visitHaving(e){this.append("having "),this.visitNode(e.having)}visitInsertQuery(e){const t=this.nodeStack.find(m.is)!==e;!t&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append(e.replace?"replace":"insert"),e.ignore&&this.append(" ignore"),this.append(" into "),this.visitNode(e.into),e.columns&&(this.append(" ("),this.compileList(e.columns),this.append(")")),e.values&&(this.append(" "),this.visitNode(e.values)),e.defaultValues&&(this.append(" "),this.append("default values")),e.onConflict&&(this.append(" "),this.visitNode(e.onConflict)),e.onDuplicateKey&&(this.append(" "),this.visitNode(e.onDuplicateKey)),e.returning&&(this.append(" "),this.visitNode(e.returning)),t&&this.append(")")}visitValues(e){this.append("values "),this.compileList(e.values)}visitDeleteQuery(e){const t=this.nodeStack.find(m.is)!==e;!t&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append("delete "),this.visitNode(e.from),e.using&&(this.append(" "),this.visitNode(e.using)),e.joins&&(this.append(" "),this.compileList(e.joins," ")),e.where&&(this.append(" "),this.visitNode(e.where)),e.orderBy&&(this.append(" "),this.visitNode(e.orderBy)),e.limit&&(this.append(" "),this.visitNode(e.limit)),e.returning&&(this.append(" "),this.visitNode(e.returning)),t&&this.append(")")}visitReturning(e){this.append("returning "),this.compileList(e.selections)}visitAlias(e){this.visitNode(e.node),this.append(" as "),this.visitNode(e.alias)}visitReference(e){e.table&&(this.visitNode(e.table),this.append(".")),this.visitNode(e.column)}visitSelectAll(e){this.append("*")}visitIdentifier(e){this.append(this.getLeftIdentifierWrapper()),this.compileUnwrappedIdentifier(e),this.append(this.getRightIdentifierWrapper())}compileUnwrappedIdentifier(e){if(!W(e.name))throw new Error("a non-string identifier was passed to compileUnwrappedIdentifier.");this.append(this.sanitizeIdentifier(e.name))}visitAnd(e){this.visitNode(e.left),this.append(" and "),this.visitNode(e.right)}visitOr(e){this.visitNode(e.left),this.append(" or "),this.visitNode(e.right)}visitValue(e){e.immediate?this.appendImmediateValue(e.value):this.appendValue(e.value)}visitValueList(e){this.append("("),this.compileList(e.values),this.append(")")}visitTuple(e){this.append("("),this.compileList(e.values),this.append(")")}visitPrimitiveValueList(e){this.append("(");const{values:t}=e;for(let e=0;e<t.length;++e)this.appendValue(t[e]),e!==t.length-1&&this.append(", ");this.append(")")}visitParens(e){this.append("("),this.visitNode(e.node),this.append(")")}visitJoin(e){this.append(kt[e.joinType]),this.append(" "),this.visitNode(e.table),e.on&&(this.append(" "),this.visitNode(e.on))}visitOn(e){this.append("on "),this.visitNode(e.on)}visitRaw(e){const{sqlFragments:t,parameters:i}=e;for(let e=0;e<t.length;++e)this.append(t[e]),i.length>e&&this.visitNode(i[e])}visitOperator(e){this.append(e.operator)}visitTable(e){this.visitNode(e.table)}visitSchemableIdentifier(e){e.schema&&(this.visitNode(e.schema),this.append(".")),this.visitNode(e.identifier)}visitCreateTable(e){this.append("create "),e.frontModifiers&&e.frontModifiers.length>0&&(this.compileList(e.frontModifiers," "),this.append(" ")),e.temporary&&this.append("temporary "),this.append("table "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.table),e.selectQuery?(this.append(" as "),this.visitNode(e.selectQuery)):(this.append(" ("),this.compileList([...e.columns,...e.constraints??[]]),this.append(")"),e.onCommit&&(this.append(" on commit "),this.append(e.onCommit)),e.endModifiers&&e.endModifiers.length>0&&(this.append(" "),this.compileList(e.endModifiers," ")))}visitColumnDefinition(e){this.visitNode(e.column),this.append(" "),this.visitNode(e.dataType),e.unsigned&&this.append(" unsigned"),e.frontModifiers&&e.frontModifiers.length>0&&(this.append(" "),this.compileList(e.frontModifiers," ")),e.generated&&(this.append(" "),this.visitNode(e.generated)),e.defaultTo&&(this.append(" "),this.visitNode(e.defaultTo)),e.notNull&&this.append(" not null"),e.unique&&this.append(" unique"),e.nullsNotDistinct&&this.append(" nulls not distinct"),e.primaryKey&&this.append(" primary key"),e.autoIncrement&&(this.append(" "),this.append(this.getAutoIncrement())),e.references&&(this.append(" "),this.visitNode(e.references)),e.check&&(this.append(" "),this.visitNode(e.check)),e.endModifiers&&e.endModifiers.length>0&&(this.append(" "),this.compileList(e.endModifiers," "))}getAutoIncrement(){return"auto_increment"}visitReferences(e){this.append("references "),this.visitNode(e.table),this.append(" ("),this.compileList(e.columns),this.append(")"),e.onDelete&&(this.append(" on delete "),this.append(e.onDelete)),e.onUpdate&&(this.append(" on update "),this.append(e.onUpdate))}visitDropTable(e){this.append("drop table "),e.ifExists&&this.append("if exists "),this.visitNode(e.table),e.cascade&&this.append(" cascade")}visitDataType(e){this.append(e.dataType)}visitOrderBy(e){this.append("order by "),this.compileList(e.items)}visitOrderByItem(e){this.visitNode(e.orderBy),e.direction&&(this.append(" "),this.visitNode(e.direction))}visitGroupBy(e){this.append("group by "),this.compileList(e.items)}visitGroupByItem(e){this.visitNode(e.groupBy)}visitUpdateQuery(e){const t=this.nodeStack.find(m.is)!==e;!t&&e.explain&&(this.visitNode(e.explain),this.append(" ")),t&&this.append("("),e.with&&(this.visitNode(e.with),this.append(" ")),this.append("update "),this.visitNode(e.table),this.append(" set "),e.updates&&this.compileList(e.updates),e.from&&(this.append(" "),this.visitNode(e.from)),e.joins&&(this.append(" "),this.compileList(e.joins," ")),e.where&&(this.append(" "),this.visitNode(e.where)),e.returning&&(this.append(" "),this.visitNode(e.returning)),t&&this.append(")")}visitColumnUpdate(e){this.visitNode(e.column),this.append(" = "),this.visitNode(e.value)}visitLimit(e){this.append("limit "),this.visitNode(e.limit)}visitOffset(e){this.append("offset "),this.visitNode(e.offset)}visitOnConflict(e){this.append("on conflict"),e.columns?(this.append(" ("),this.compileList(e.columns),this.append(")")):e.constraint?(this.append(" on constraint "),this.visitNode(e.constraint)):e.indexExpression&&(this.append(" ("),this.visitNode(e.indexExpression),this.append(")")),e.indexWhere&&(this.append(" "),this.visitNode(e.indexWhere)),!0===e.doNothing?this.append(" do nothing"):e.updates&&(this.append(" do update set "),this.compileList(e.updates),e.updateWhere&&(this.append(" "),this.visitNode(e.updateWhere)))}visitOnDuplicateKey(e){this.append("on duplicate key update "),this.compileList(e.updates)}visitCreateIndex(e){this.append("create "),e.unique&&this.append("unique "),this.append("index "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.name),e.table&&(this.append(" on "),this.visitNode(e.table)),e.using&&(this.append(" using "),this.visitNode(e.using)),e.columns&&(this.append(" ("),this.compileList(e.columns),this.append(")")),e.nullsNotDistinct&&this.append(" nulls not distinct"),e.where&&(this.append(" "),this.visitNode(e.where))}visitDropIndex(e){this.append("drop index "),e.ifExists&&this.append("if exists "),this.visitNode(e.name),e.table&&(this.append(" on "),this.visitNode(e.table)),e.cascade&&this.append(" cascade")}visitCreateSchema(e){this.append("create schema "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.schema)}visitDropSchema(e){this.append("drop schema "),e.ifExists&&this.append("if exists "),this.visitNode(e.schema),e.cascade&&this.append(" cascade")}visitPrimaryKeyConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("primary key ("),this.compileList(e.columns),this.append(")")}visitUniqueConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("unique"),e.nullsNotDistinct&&this.append(" nulls not distinct"),this.append(" ("),this.compileList(e.columns),this.append(")")}visitCheckConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("check ("),this.visitNode(e.expression),this.append(")")}visitForeignKeyConstraint(e){e.name&&(this.append("constraint "),this.visitNode(e.name),this.append(" ")),this.append("foreign key ("),this.compileList(e.columns),this.append(") "),this.visitNode(e.references),e.onDelete&&(this.append(" on delete "),this.append(e.onDelete)),e.onUpdate&&(this.append(" on update "),this.append(e.onUpdate))}visitList(e){this.compileList(e.items)}visitWith(e){this.append("with "),e.recursive&&this.append("recursive "),this.compileList(e.expressions)}visitCommonTableExpression(e){this.visitNode(e.name),this.append(" as "),D(e.materialized)&&(e.materialized||this.append("not "),this.append("materialized ")),this.visitNode(e.expression)}visitCommonTableExpressionName(e){this.visitNode(e.table),e.columns&&(this.append("("),this.compileList(e.columns),this.append(")"))}visitAlterTable(e){this.append("alter table "),this.visitNode(e.table),this.append(" "),e.renameTo&&(this.append("rename to "),this.visitNode(e.renameTo)),e.setSchema&&(this.append("set schema "),this.visitNode(e.setSchema)),e.addConstraint&&this.visitNode(e.addConstraint),e.dropConstraint&&this.visitNode(e.dropConstraint),e.columnAlterations&&this.compileColumnAlterations(e.columnAlterations),e.addIndex&&this.visitNode(e.addIndex),e.dropIndex&&this.visitNode(e.dropIndex)}visitAddColumn(e){this.append("add column "),this.visitNode(e.column)}visitRenameColumn(e){this.append("rename column "),this.visitNode(e.column),this.append(" to "),this.visitNode(e.renameTo)}visitDropColumn(e){this.append("drop column "),this.visitNode(e.column)}visitAlterColumn(e){this.append("alter column "),this.visitNode(e.column),this.append(" "),e.dataType&&(this.announcesNewColumnDataType()&&this.append("type "),this.visitNode(e.dataType),e.dataTypeExpression&&(this.append("using "),this.visitNode(e.dataTypeExpression))),e.setDefault&&(this.append("set default "),this.visitNode(e.setDefault)),e.dropDefault&&this.append("drop default"),e.setNotNull&&this.append("set not null"),e.dropNotNull&&this.append("drop not null")}visitModifyColumn(e){this.append("modify column "),this.visitNode(e.column)}visitAddConstraint(e){this.append("add "),this.visitNode(e.constraint)}visitDropConstraint(e){this.append("drop constraint "),e.ifExists&&this.append("if exists "),this.visitNode(e.constraintName),"cascade"===e.modifier?this.append(" cascade"):"restrict"===e.modifier&&this.append(" restrict")}visitSetOperation(e){this.append(e.operator),this.append(" "),e.all&&this.append("all "),this.visitNode(e.expression)}visitCreateView(e){this.append("create "),e.orReplace&&this.append("or replace "),e.materialized&&this.append("materialized "),e.temporary&&this.append("temporary "),this.append("view "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.name),this.append(" "),e.columns&&(this.append("("),this.compileList(e.columns),this.append(") ")),e.as&&(this.append("as "),this.visitNode(e.as))}visitDropView(e){this.append("drop "),e.materialized&&this.append("materialized "),this.append("view "),e.ifExists&&this.append("if exists "),this.visitNode(e.name),e.cascade&&this.append(" cascade")}visitGenerated(e){this.append("generated "),e.always&&this.append("always "),e.byDefault&&this.append("by default "),this.append("as "),e.identity&&this.append("identity"),e.expression&&(this.append("("),this.visitNode(e.expression),this.append(")")),e.stored&&this.append(" stored")}visitDefaultValue(e){this.append("default "),this.visitNode(e.defaultValue)}visitSelectModifier(e){e.rawModifier?this.visitNode(e.rawModifier):this.append(Ot[e.modifier]),e.of&&(this.append(" of "),this.compileList(e.of,", "))}visitCreateType(e){this.append("create type "),this.visitNode(e.name),e.enum&&(this.append(" as enum "),this.visitNode(e.enum))}visitDropType(e){this.append("drop type "),e.ifExists&&this.append("if exists "),this.visitNode(e.name)}visitExplain(e){this.append("explain"),(e.options||e.format)&&(this.append(" "),this.append(this.getLeftExplainOptionsWrapper()),e.options&&(this.visitNode(e.options),e.format&&this.append(this.getExplainOptionsDelimiter())),e.format&&(this.append("format"),this.append(this.getExplainOptionAssignment()),this.append(e.format)),this.append(this.getRightExplainOptionsWrapper()))}visitDefaultInsertValue(e){this.append("default")}visitAggregateFunction(e){this.append(e.func),this.append("("),e.distinct&&this.append("distinct "),this.compileList(e.aggregated),this.append(")"),e.filter&&(this.append(" filter("),this.visitNode(e.filter),this.append(")")),e.over&&(this.append(" "),this.visitNode(e.over))}visitOver(e){this.append("over("),e.partitionBy&&(this.visitNode(e.partitionBy),e.orderBy&&this.append(" ")),e.orderBy&&this.visitNode(e.orderBy),this.append(")")}visitPartitionBy(e){this.append("partition by "),this.compileList(e.items)}visitPartitionByItem(e){this.visitNode(e.partitionBy)}visitBinaryOperation(e){this.visitNode(e.leftOperand),this.append(" "),this.visitNode(e.operator),this.append(" "),this.visitNode(e.rightOperand)}visitUnaryOperation(e){this.visitNode(e.operator),this.isMinusOperator(e.operator)||this.append(" "),this.visitNode(e.operand)}isMinusOperator(e){return S.is(e)&&"-"===e.operator}visitUsing(e){this.append("using "),this.compileList(e.tables)}visitFunction(e){this.append(e.func),this.append("("),this.compileList(e.arguments),this.append(")")}visitCase(e){this.append("case"),e.value&&(this.append(" "),this.visitNode(e.value)),e.when&&(this.append(" "),this.compileList(e.when," ")),e.else&&(this.append(" else "),this.visitNode(e.else)),this.append(" end"),e.isStatement&&this.append(" case")}visitWhen(e){this.append("when "),this.visitNode(e.condition),e.result&&(this.append(" then "),this.visitNode(e.result))}visitJSONReference(e){this.visitNode(e.reference),this.visitNode(e.traversal)}visitJSONPath(e){e.inOperator&&this.visitNode(e.inOperator),this.append("'$");for(const t of e.pathLegs)this.visitNode(t);this.append("'")}visitJSONPathLeg(e){const t="ArrayLocation"===e.type;this.append(t?"[":"."),this.append(String(e.value)),t&&this.append("]")}visitJSONOperatorChain(e){for(let t=0,i=e.values.length;t<i;t++)t===i-1?this.visitNode(e.operator):this.append("->"),this.visitNode(e.values[t])}visitAddIndex(e){this.append("add "),e.unique&&this.append("unique "),this.append("index "),this.visitNode(e.name),e.columns&&(this.append(" ("),this.compileList(e.columns),this.append(")")),e.using&&(this.append(" using "),this.visitNode(e.using))}append(e){this.#I+=e}appendValue(e){this.addParameter(e),this.append(this.getCurrentParameterPlaceholder())}getLeftIdentifierWrapper(){return'"'}getRightIdentifierWrapper(){return'"'}getCurrentParameterPlaceholder(){return"$"+this.numParameters}getLeftExplainOptionsWrapper(){return"("}getExplainOptionAssignment(){return" "}getExplainOptionsDelimiter(){return", "}getRightExplainOptionsWrapper(){return")"}sanitizeIdentifier(e){const t=this.getLeftIdentifierWrapper(),i=this.getRightIdentifierWrapper();let s="";for(const n of e)s+=n,n===t?s+=t:n===i&&(s+=i);return s}addParameter(e){this.#_.push(e)}appendImmediateValue(e){if(W(e))this.append(`'${e}'`);else if(M(e)||D(e))this.append(e.toString());else if(B(e))this.append("null");else if(R(e))this.appendImmediateValue(e.toISOString());else{if(!Q(e))throw new Error(`invalid immediate value ${e}`);this.appendImmediateValue(e.toString())}}sortSelectModifiers(t){return t.sort(((e,t)=>e.modifier&&t.modifier?At[e.modifier]-At[t.modifier]:1)),e(t)}compileColumnAlterations(e){this.compileList(e)}announcesNewColumnDataType(){return!0}}const Ot=e({ForKeyShare:"for key share",ForNoKeyUpdate:"for no key update",ForUpdate:"for update",ForShare:"for share",NoWait:"nowait",SkipLocked:"skip locked",Distinct:"distinct"}),At=e({ForKeyShare:1,ForNoKeyUpdate:1,ForUpdate:1,ForShare:1,NoWait:2,SkipLocked:2,Distinct:0}),kt=e({InnerJoin:"inner join",LeftJoin:"left join",RightJoin:"right join",FullJoin:"full join",LateralInnerJoin:"inner join lateral",LateralLeftJoin:"left join lateral"}),qt=e({raw:(t,i=[])=>e({sql:t,query:p.createWithSql(t),parameters:e(i)})});class Pt{async init(){}async acquireConnection(){return new Lt}async beginTransaction(){}async commitTransaction(){}async rollbackTransaction(){}async releaseConnection(){}async destroy(){}}class Lt{async executeQuery(){return{rows:[]}}async*streamQuery(){}}class Wt{get supportsCreateIfNotExists(){return!0}get supportsTransactionalDdl(){return!1}get supportsReturning(){return!1}}class Dt{#O;#A=new Mt;#k;#v;constructor(t){this.#O=e({...t})}async init(){this.#k=C(this.#O.database)?await this.#O.database():this.#O.database,this.#v=new St(this.#k),this.#O.onCreateConnection&&await this.#O.onCreateConnection(this.#v)}async acquireConnection(){return await this.#A.lock(),this.#v}async beginTransaction(e){await e.executeQuery(qt.raw("begin"))}async commitTransaction(e){await e.executeQuery(qt.raw("commit"))}async rollbackTransaction(e){await e.executeQuery(qt.raw("rollback"))}async releaseConnection(){this.#A.unlock()}async destroy(){this.#k?.close()}}class St{#k;constructor(e){this.#k=e}executeQuery(e){const{sql:t,parameters:i}=e,s=this.#k.prepare(t);if(s.reader)return Promise.resolve({rows:s.all(i)});{const{changes:e,lastInsertRowid:t}=s.run(i),n=null!=e?BigInt(e):void 0;return Promise.resolve({numUpdatedOrDeletedRows:n,numAffectedRows:n,insertId:null!=t?BigInt(t):void 0,rows:[]})}}async*streamQuery(e,t){const{sql:i,parameters:s,query:n}=e,r=this.#k.prepare(i);if(!F.is(n))throw new Error("Sqlite driver only supports streaming of select queries");{const e=r.iterate(s);for(const t of e)yield{rows:[t]}}}}class Mt{#q;#P;async lock(){for(;this.#q;)await this.#q;this.#q=new Promise((e=>{this.#P=e}))}unlock(){const e=this.#P;this.#q=void 0,this.#P=void 0,e?.()}}const Bt=/"/g;class Rt extends _t{getCurrentParameterPlaceholder(){return"?"}getLeftExplainOptionsWrapper(){return""}getRightExplainOptionsWrapper(){return""}getLeftIdentifierWrapper(){return'"'}getRightIdentifierWrapper(){return'"'}getAutoIncrement(){return"autoincrement"}sanitizeIdentifier(e){return e.replace(Bt,'""')}visitDefaultInsertValue(e){this.append("null")}}class Qt{transformQuery(e){return e.node}async transformResult(e){return e.result}}const Ut="kysely_migration",Ft="kysely_migration_lock",Vt="migration_lock",$t=e({__noMigrations__:!0});class Jt{#s;constructor(t){this.#s=e(t)}async getMigrations(){const e=await this.#L(this.#W)?await this.#s.db.withPlugin(this.#D).selectFrom(this.#W).select(["name","timestamp"]).execute():[];return(await this.#S()).map((({name:t,...i})=>{const s=e.find((e=>e.name===t));return{name:t,migration:i,executedAt:s?new Date(s.timestamp):void 0}}))}async migrateToLatest(){return this.#M((({migrations:e})=>e.length-1))}async migrateTo(e){return this.#M((({migrations:t})=>{if(e===$t)return-1;const i=t.findIndex((t=>t.name===e));if(-1===i)throw new Error(`migration "${e}" doesn't exist`);return i}))}async migrateUp(){return this.#M((({currentIndex:e,migrations:t})=>Math.min(e+1,t.length-1)))}async migrateDown(){return this.#M((({currentIndex:e})=>Math.max(e-1,-1)))}async#M(e){try{return await this.#B(),await this.#R(e)}catch(e){return e instanceof jt?e.resultSet:{error:e}}}get#Q(){return this.#s.migrationTableSchema}get#W(){return this.#s.migrationTableName??Ut}get#U(){return this.#s.migrationLockTableName??Ft}get#D(){return this.#Q?new v(this.#Q):new Qt}async#B(){await this.#F(),await this.#V(),await this.#$(),await this.#J()}async#F(){if(this.#Q&&!await this.#j())try{await this.#K(this.#s.db.schema.createSchema(this.#Q))}catch(e){if(!await this.#j())throw e}}async#V(){if(!await this.#L(this.#W))try{this.#Q&&await this.#K(this.#s.db.schema.createSchema(this.#Q)),await this.#K(this.#s.db.schema.withPlugin(this.#D).createTable(this.#W).addColumn("name","varchar(255)",(e=>e.notNull().primaryKey())).addColumn("timestamp","varchar(255)",(e=>e.notNull())))}catch(e){if(!await this.#L(this.#W))throw e}}async#$(){if(!await this.#L(this.#U))try{await this.#K(this.#s.db.schema.withPlugin(this.#D).createTable(this.#U).addColumn("id","varchar(255)",(e=>e.notNull().primaryKey())).addColumn("is_locked","integer",(e=>e.notNull().defaultTo(0))))}catch(e){if(!await this.#L(this.#U))throw e}}async#J(){if(!await this.#z())try{await this.#s.db.withPlugin(this.#D).insertInto(this.#U).values({id:Vt,is_locked:0}).execute()}catch(e){if(!await this.#z())throw e}}async#j(){return(await this.#s.db.introspection.getSchemas()).some((e=>e.name===this.#Q))}async#L(e){const t=this.#Q;return(await this.#s.db.introspection.getTables({withInternalKyselyTables:!0})).some((i=>i.name===e&&(!t||i.schema===t)))}async#z(){return!!await this.#s.db.withPlugin(this.#D).selectFrom(this.#U).where("id","=",Vt).select("id").executeTakeFirst()}async#R(t){const i=this.#s.db.getExecutor().adapter,s=e({lockTable:this.#s.migrationLockTableName??Ft,lockRowId:Vt,lockTableSchema:this.#s.migrationTableSchema}),n=async e=>{try{await i.acquireMigrationLock(e,s);const n=await this.#Y(e);if(0===n.migrations.length)return{results:[]};const r=t(n);return void 0===r?{results:[]}:r<n.currentIndex?await this.#G(e,n,r):r>n.currentIndex?await this.#H(e,n,r):{results:[]}}finally{await i.releaseMigrationLock(e,s)}};return i.supportsTransactionalDdl?this.#s.db.transaction().execute(n):this.#s.db.connection().execute(n)}async#Y(t){const i=await this.#S(),s=await this.#X(t);return this.#Z(i,s),e({migrations:i,currentIndex:i.findIndex((e=>e.name===V(s)))})}async#S(){const e=await this.#s.provider.getMigrations();return Object.keys(e).sort().map((t=>({...e[t],name:t})))}async#X(e){return(await e.withPlugin(this.#D).selectFrom(this.#W).select("name").orderBy("name").execute()).map((e=>e.name))}#Z(e,t){for(const i of t)if(!e.some((e=>e.name===i)))throw new Error(`corrupted migrations: previously executed migration ${i} is missing`);for(let i=0;i<t.length;++i)if(e[i].name!==t[i])throw new Error(`corrupted migrations: expected previously executed migration ${t[i]} to be at index ${i} but ${e[i].name} was found in its place. New migrations must always have a name that comes alphabetically after the last executed migration.`)}async#G(e,t,i){const s=[];for(let e=t.currentIndex;e>i;--e)s.push({migrationName:t.migrations[e].name,direction:"Down",status:"NotExecuted"});for(let i=0;i<s.length;++i){const n=t.migrations.find((e=>e.name===s[i].migrationName));try{n.down&&(await n.down(e),await e.withPlugin(this.#D).deleteFrom(this.#W).where("name","=",n.name).execute(),s[i]={migrationName:n.name,direction:"Down",status:"Success"})}catch(e){throw s[i]={migrationName:n.name,direction:"Down",status:"Error"},new jt({error:e,results:s})}}return{results:s}}async#H(e,t,i){const s=[];for(let e=t.currentIndex+1;e<=i;++e)s.push({migrationName:t.migrations[e].name,direction:"Up",status:"NotExecuted"});for(let i=0;i<s.length;++i){const n=t.migrations.find((e=>e.name===s[i].migrationName));try{await n.up(e),await e.withPlugin(this.#D).insertInto(this.#W).values({name:n.name,timestamp:(new Date).toISOString()}).execute(),s[i]={migrationName:n.name,direction:"Up",status:"Success"}}catch(e){throw s[i]={migrationName:n.name,direction:"Up",status:"Error"},new jt({error:e,results:s})}}return{results:s}}async#K(e){this.#s.db.getExecutor().adapter.supportsCreateIfNotExists&&(e=e.ifNotExists()),await e.execute()}}class jt extends Error{#ee;constructor(e){super(),this.#ee=e}get resultSet(){return this.#ee}}class Kt{#k;constructor(e){this.#k=e}async getSchemas(){return[]}async getTables(e={withInternalKyselyTables:!1}){let t=this.#k.selectFrom("sqlite_master").where("type","in",["table","view"]).where("name","not like","sqlite_%").select("name").orderBy("name").$castTo();e.withInternalKyselyTables||(t=t.where("name","!=",Ut).where("name","!=",Ft));const i=await t.execute();return Promise.all(i.map((({name:e})=>this.#te(e))))}async getMetadata(e){return{tables:await this.getTables(e)}}async#te(e){const t=this.#k,i=await t.selectFrom("sqlite_master").where("name","=",e).select(["sql","type"]).$castTo().executeTakeFirstOrThrow(),s=i.sql?.split(/[\(\),]/)?.find((e=>e.toLowerCase().includes("autoincrement")))?.trimStart()?.split(/\s+/)?.[0]?.replace(/["`]/g,""),n=await t.selectFrom(J`pragma_table_info(${e})`.as("table_info")).select(["name","type","notnull","dflt_value"]).orderBy("cid").execute();return{name:e,isView:"view"===i.type,columns:n.map((e=>({name:e.name,dataType:e.type,isNullable:!e.notnull,isAutoIncrementing:e.name===s,hasDefaultValue:null!=e.dflt_value})))}}}class zt extends Wt{get supportsTransactionalDdl(){return!1}get supportsReturning(){return!0}async acquireMigrationLock(e,t){}async releaseMigrationLock(e,t){}}class Yt{#O;constructor(t){this.#O=e({...t})}createDriver(){return new Dt(this.#O)}createQueryCompiler(){return new Rt}createAdapter(){return new zt}createIntrospector(e){return new Kt(e)}}const Gt=/"/g;class Ht extends _t{sanitizeIdentifier(e){return e.replace(Gt,'""')}}class Xt{#k;constructor(e){this.#k=e}async getSchemas(){return(await this.#k.selectFrom("pg_catalog.pg_namespace").select("nspname").$castTo().execute()).map((e=>({name:e.nspname})))}async getTables(e={withInternalKyselyTables:!1}){let t=this.#k.selectFrom("pg_catalog.pg_attribute as a").innerJoin("pg_catalog.pg_class as c","a.attrelid","c.oid").innerJoin("pg_catalog.pg_namespace as ns","c.relnamespace","ns.oid").innerJoin("pg_catalog.pg_type as typ","a.atttypid","typ.oid").innerJoin("pg_catalog.pg_namespace as dtns","typ.typnamespace","dtns.oid").select(["a.attname as column","a.attnotnull as not_null","a.atthasdef as has_default","c.relname as table","c.relkind as table_type","ns.nspname as schema","typ.typname as type","dtns.nspname as type_schema",this.#k.selectFrom("pg_class").select(J`true`.as("auto_incrementing")).whereRef("relnamespace","=","c.relnamespace").where("relkind","=","S").where("relname","=",J`c.relname || '_' || a.attname || '_seq'`).as("auto_incrementing")]).where((e=>e.or([e("c.relkind","=","r"),e("c.relkind","=","v")]))).where("ns.nspname","!~","^pg_").where("ns.nspname","!=","information_schema").where("a.attnum",">=",0).where("a.attisdropped","!=",!0).orderBy("ns.nspname").orderBy("c.relname").orderBy("a.attnum").$castTo();e.withInternalKyselyTables||(t=t.where("c.relname","!=",Ut).where("c.relname","!=",Ft));const i=await t.execute();return this.#ie(i)}async getMetadata(e){return{tables:await this.getTables(e)}}#ie(t){return t.reduce(((t,i)=>{let s=t.find((e=>e.name===i.table&&e.schema===i.schema));return s||(s=e({name:i.table,isView:"v"===i.table_type,schema:i.schema,columns:[]}),t.push(s)),s.columns.push(e({name:i.column,dataType:i.type,dataTypeSchema:i.type_schema,isNullable:!i.not_null,isAutoIncrementing:!!i.auto_incrementing,hasDefaultValue:i.has_default})),t}),[])}}const Zt=BigInt("3853314791062309107");class ei extends Wt{get supportsTransactionalDdl(){return!0}get supportsReturning(){return!0}async acquireMigrationLock(e,t){await J`select pg_advisory_xact_lock(${J.lit(Zt)})`.execute(e)}async releaseMigrationLock(e,t){}}function ti(e,t){if(T(i=e)&&W(i.stack)&&t.stack){const i=t.stack.split("\n").slice(1).join("\n");return e.stack+=`\n${i}`,e}var i;return e}const ii=Symbol();class si{#O;#m=new WeakMap;#se;constructor(t){this.#O=e({...t})}async init(){this.#se=C(this.#O.pool)?await this.#O.pool():this.#O.pool}async acquireConnection(){const e=await this.#ne();let t=this.#m.get(e);return t||(t=new ni(e),this.#m.set(e,t),this.#O?.onCreateConnection&&await this.#O.onCreateConnection(t)),t}async#ne(){return new Promise(((e,t)=>{this.#se.getConnection((async(i,s)=>{i?t(i):e(s)}))}))}async beginTransaction(e,t){t.isolationLevel&&await e.executeQuery(qt.raw(`set transaction isolation level ${t.isolationLevel}`)),await e.executeQuery(qt.raw("begin"))}async commitTransaction(e){await e.executeQuery(qt.raw("commit"))}async rollbackTransaction(e){await e.executeQuery(qt.raw("rollback"))}async releaseConnection(e){e[ii]()}async destroy(){return new Promise(((e,t)=>{this.#se.end((i=>{i?t(i):e()}))}))}}class ni{#re;constructor(e){this.#re=e}async executeQuery(e){try{const i=await this.#oe(e);if(T(t=i)&&"insertId"in t&&"affectedRows"in t){const{insertId:e,affectedRows:t,changedRows:s}=i,n=null!=t?BigInt(t):void 0,r=null!=s?BigInt(s):void 0;return{insertId:null!=e&&"0"!==e.toString()?BigInt(e):void 0,numUpdatedOrDeletedRows:n,numAffectedRows:n,numChangedRows:r,rows:[]}}return Array.isArray(i)?{rows:i}:{rows:[]}}catch(e){throw ti(e,new Error)}var t}#oe(e){return new Promise(((t,i)=>{this.#re.query(e.sql,e.parameters,((e,s)=>{e?i(e):t(s)}))}))}async*streamQuery(e,t){const i=this.#re.query(e.sql,e.parameters).stream({objectMode:!0});try{for await(const e of i)yield{rows:[e]}}catch(e){if(e&&"object"==typeof e&&"code"in e&&"ERR_STREAM_PREMATURE_CLOSE"===e.code)return;throw e}}[ii](){this.#re.release()}}const ri=/`/g;class oi extends _t{getCurrentParameterPlaceholder(){return"?"}getLeftExplainOptionsWrapper(){return""}getExplainOptionAssignment(){return"="}getExplainOptionsDelimiter(){return" "}getRightExplainOptionsWrapper(){return""}getLeftIdentifierWrapper(){return"`"}getRightIdentifierWrapper(){return"`"}sanitizeIdentifier(e){return e.replace(ri,"``")}visitCreateIndex(e){this.append("create "),e.unique&&this.append("unique "),this.append("index "),e.ifNotExists&&this.append("if not exists "),this.visitNode(e.name),e.using&&(this.append(" using "),this.visitNode(e.using)),e.table&&(this.append(" on "),this.visitNode(e.table)),e.columns&&(this.append(" ("),this.compileList(e.columns),this.append(")")),e.where&&(this.append(" "),this.visitNode(e.where))}}class di{#k;constructor(e){this.#k=e}async getSchemas(){return(await this.#k.selectFrom("information_schema.schemata").select("schema_name").$castTo().execute()).map((e=>({name:e.SCHEMA_NAME})))}async getTables(e={withInternalKyselyTables:!1}){let t=this.#k.selectFrom("information_schema.columns as columns").innerJoin("information_schema.tables as tables",(e=>e.onRef("columns.TABLE_CATALOG","=","tables.TABLE_CATALOG").onRef("columns.TABLE_SCHEMA","=","tables.TABLE_SCHEMA").onRef("columns.TABLE_NAME","=","tables.TABLE_NAME"))).select(["columns.COLUMN_NAME","columns.COLUMN_DEFAULT","columns.TABLE_NAME","columns.TABLE_SCHEMA","tables.TABLE_TYPE","columns.IS_NULLABLE","columns.DATA_TYPE","columns.EXTRA"]).where("columns.TABLE_SCHEMA","=",J`database()`).orderBy("columns.TABLE_NAME").orderBy("columns.ORDINAL_POSITION").$castTo();e.withInternalKyselyTables||(t=t.where("columns.TABLE_NAME","!=",Ut).where("columns.TABLE_NAME","!=",Ft));const i=await t.execute();return this.#ie(i)}async getMetadata(e){return{tables:await this.getTables(e)}}#ie(t){return t.reduce(((t,i)=>{let s=t.find((e=>e.name===i.TABLE_NAME));return s||(s=e({name:i.TABLE_NAME,isView:"VIEW"===i.TABLE_TYPE,schema:i.TABLE_SCHEMA,columns:[]}),t.push(s)),s.columns.push(e({name:i.COLUMN_NAME,dataType:i.DATA_TYPE,isNullable:"YES"===i.IS_NULLABLE,isAutoIncrementing:i.EXTRA.toLowerCase().includes("auto_increment"),hasDefaultValue:null!==i.COLUMN_DEFAULT})),t}),[])}}const ci="ea586330-2c93-47c8-908d-981d9d270f9d";class pi extends Wt{get supportsTransactionalDdl(){return!1}get supportsReturning(){return!1}async acquireMigrationLock(e,t){await J`select get_lock(${J.lit(ci)}, ${J.lit(3600)})`.execute(e)}async releaseMigrationLock(e,t){await J`select release_lock(${J.lit(ci)})`.execute(e)}}class hi{#O;constructor(e){this.#O=e}createDriver(){return new si(this.#O)}createQueryCompiler(){return new oi}createAdapter(){return new pi}createIntrospector(e){return new di(e)}}const li=Symbol();class ui{#O;#m=new WeakMap;#se;constructor(t){this.#O=e({...t})}async init(){this.#se=C(this.#O.pool)?await this.#O.pool():this.#O.pool}async acquireConnection(){const e=await this.#se.connect();let t=this.#m.get(e);return t||(t=new mi(e,{cursor:this.#O.cursor??null}),this.#m.set(e,t),this.#O.onCreateConnection&&await this.#O.onCreateConnection(t)),t}async beginTransaction(e,t){t.isolationLevel?await e.executeQuery(qt.raw(`start transaction isolation level ${t.isolationLevel}`)):await e.executeQuery(qt.raw("begin"))}async commitTransaction(e){await e.executeQuery(qt.raw("commit"))}async rollbackTransaction(e){await e.executeQuery(qt.raw("rollback"))}async releaseConnection(e){e[li]()}async destroy(){if(this.#se){const e=this.#se;this.#se=void 0,await e.end()}}}class mi{#ae;#de;constructor(e,t){this.#ae=e,this.#de=t}async executeQuery(e){try{const t=await this.#ae.query(e.sql,[...e.parameters]);if("INSERT"===t.command||"UPDATE"===t.command||"DELETE"===t.command){const e=BigInt(t.rowCount);return{numUpdatedOrDeletedRows:e,numAffectedRows:e,rows:t.rows??[]}}return{rows:t.rows??[]}}catch(e){throw ti(e,new Error)}}async*streamQuery(e,t){if(!this.#de.cursor)throw new Error("'cursor' is not present in your postgres dialect config. It's required to make streaming work in postgres.");if(!Number.isInteger(t)||t<=0)throw new Error("chunkSize must be a positive integer");const i=this.#ae.query(new this.#de.cursor(e.sql,e.parameters.slice()));try{for(;;){const e=await i.read(t);if(0===e.length)break;yield{rows:e}}}finally{await i.close()}}[li](){this.#ae.release()}}class yi{#O;constructor(e){this.#O=e}createDriver(){return new ui(this.#O)}createQueryCompiler(){return new Ht}createAdapter(){return new ei}createIntrospector(e){return new Xt(e)}}class wi extends Wt{get supportsCreateIfNotExists(){return!1}get supportsTransactionalDdl(){return!0}get supportsReturning(){return!1}async acquireMigrationLock(e){await J`exec sp_getapplock @DbPrincipal = ${J.lit("dbo")}, @Resource = ${J.lit(Ut)}, @LockMode = ${J.lit("Exclusive")}`.execute(e)}async releaseMigrationLock(){}}const fi=Symbol(),gi=Symbol();class Ni{#O;#se;constructor(t){this.#O=e({...t}),this.#se=new this.#O.tarn.Pool({...this.#O.tarn.options,create:async()=>{const e=await this.#O.tedious.connectionFactory();return await new Promise(((t,i)=>e.connect((e=>{e?i(e):t(void 0)})))),new vi(e,this.#O.tedious)},destroy:async e=>{await e[gi]()},validate:e=>e.validate()})}async init(){}async acquireConnection(){return await this.#se.acquire().promise}async beginTransaction(e,t){await e.beginTransaction(t)}async commitTransaction(e){await e.commitTransaction()}async rollbackTransaction(e){await e.rollbackTransaction()}async releaseConnection(e){await e[fi](),this.#se.release(e)}async destroy(){await this.#se.destroy()}}class vi{#v;#ce;constructor(e,t){this.#v=e,this.#ce=t}async beginTransaction(e){const{isolationLevel:t}=e;await new Promise(((e,i)=>this.#v.beginTransaction((t=>{t?i(t):e(void 0)}),t?j(8):void 0,t?this.#pe(t):void 0)))}async commitTransaction(){await new Promise(((e,t)=>this.#v.commitTransaction((i=>{i?t(i):e(void 0)}))))}async executeQuery(e){try{const t=new K,i=new bi(this.#ce,e,t);this.#v.execSql(i.request);const{rowCount:s,rows:n}=await t.promise;return{numAffectedRows:void 0!==s?BigInt(s):void 0,rows:n}}catch(e){throw ti(e,new Error)}}async rollbackTransaction(){await new Promise(((e,t)=>this.#v.rollbackTransaction((i=>{i?t(i):e(void 0)}))))}async*streamQuery(e,t){if(!Number.isInteger(t)||t<=0)throw new Error("chunkSize must be a positive integer");const i=new bi(this.#ce,e);this.#v.execSql(i.request);try{for(;;){const e=await i.readChunk(t);if(0===e.length)break;if(yield{rows:e},e.length<t)break}}finally{this.#v.cancel()}}async validate(){try{const e=new K,t=new bi(this.#ce,qt.raw("select 1"),e);return this.#v.execSql(t.request),await e.promise,!0}catch{return!1}}#pe(e){const{ISOLATION_LEVEL:t}=this.#ce,i={"read committed":t.READ_COMMITTED,"read uncommitted":t.READ_UNCOMMITTED,"repeatable read":t.REPEATABLE_READ,serializable:t.SERIALIZABLE,snapshot:t.SNAPSHOT}[e];if(void 0===i)throw new Error(`Unknown isolation level: ${e}`);return i}[fi](){return new Promise(((e,t)=>{this.#v.reset((i=>{i?t(i):e(void 0)}))}))}[gi](){return new Promise((e=>{this.#v.once("end",(()=>{e(void 0)})),this.#v.close()}))}}class bi{#he;#le;#ce;#ue;#me;#ye;constructor(e,t,i){this.#ue=!1,this.#le=[],this.#ce=e;const{parameters:s,sql:n}=t;this.#he=new this.#ce.Request(n,((e,t)=>{e?(this.#me=e instanceof AggregateError?e.errors:e,i?.reject(this.#me)):this.#ye=t})),this.#we(s),this.#fe(i)}get request(){return this.#he}readChunk(e){return new Promise(((t,i)=>{const s=setInterval((()=>{this.#me?(clearInterval(s),i(this.#me)):(this.#ue||this.#le.length>=e)&&(clearInterval(s),t(this.#le.splice(0,e)))}),0)}))}#we(e){for(let t=0;t<e.length;t++){const i=e[t];this.#he.addParameter(String(t+1),this.#ge(i),i)}}#fe(e){const t=e=>{const t={};for(const i of e)t[i.metadata.colName]=i.value;this.#le.push(t)};this.#he.on("row",t),this.#he.once("requestCompleted",(()=>{this.#ue=!0,this.#he.off("row",t),e?.resolve({rowCount:this.#ye,rows:this.#le})}))}#ge(e){return B(e)||A(e)||W(e)?this.#ce.TYPES.NVarChar:Q(e)||M(e)&&e%1==0?e<-2147483648||e>2147483647?this.#ce.TYPES.BigInt:this.#ce.TYPES.Int:M(e)?this.#ce.TYPES.Float:D(e)?this.#ce.TYPES.Bit:R(e)?this.#ce.TYPES.DateTime:z(e)?this.#ce.TYPES.VarBinary:this.#ce.TYPES.NVarChar}}class xi{#k;constructor(e){this.#k=e}async getSchemas(){return await this.#k.selectFrom("sys.schemas").select("name").execute()}async getTables(t={withInternalKyselyTables:!1}){const i=await this.#k.selectFrom("sys.tables as tables").leftJoin("sys.schemas as table_schemas","table_schemas.schema_id","tables.schema_id").innerJoin("sys.columns as columns","columns.object_id","tables.object_id").innerJoin("sys.types as types","types.system_type_id","columns.system_type_id").leftJoin("sys.schemas as type_schemas","type_schemas.schema_id","types.schema_id").$if(!t.withInternalKyselyTables,(e=>e.where("tables.name","!=",Ut).where("tables.name","!=",Ft))).select(["tables.name as table_name",e=>e.ref("tables.type").$castTo().as("table_type"),"table_schemas.name as table_schema_name","columns.default_object_id as column_default_object_id","columns.generated_always_type_desc as column_generated_always_type","columns.is_computed as column_is_computed","columns.is_identity as column_is_identity","columns.is_nullable as column_is_nullable","columns.is_rowguidcol as column_is_rowguidcol","columns.name as column_name","types.is_nullable as type_is_nullable","types.name as type_name","type_schemas.name as type_schema_name"]).unionAll(this.#k.selectFrom("sys.views as views").leftJoin("sys.schemas as view_schemas","view_schemas.schema_id","views.schema_id").innerJoin("sys.columns as columns","columns.object_id","views.object_id").innerJoin("sys.types as types","types.system_type_id","columns.system_type_id").leftJoin("sys.schemas as type_schemas","type_schemas.schema_id","types.schema_id").select(["views.name as table_name","views.type as table_type","view_schemas.name as table_schema_name","columns.default_object_id as column_default_object_id","columns.generated_always_type_desc as column_generated_always_type","columns.is_computed as column_is_computed","columns.is_identity as column_is_identity","columns.is_nullable as column_is_nullable","columns.is_rowguidcol as column_is_rowguidcol","columns.name as column_name","types.is_nullable as type_is_nullable","types.name as type_name","type_schemas.name as type_schema_name"])).orderBy("table_schema_name").orderBy("table_name").orderBy("column_name").execute(),s={};for(const t of i){const i=`${t.table_schema_name}.${t.table_name}`;(s[i]=s[i]||e({columns:[],isView:"V "===t.table_type,name:t.table_name,schema:t.table_schema_name??void 0})).columns.push(e({dataType:t.type_name,dataTypeSchema:t.type_schema_name??void 0,hasDefaultValue:t.column_default_object_id>0||"NOT_APPLICABLE"!==t.column_generated_always_type||t.column_is_identity||t.column_is_computed||t.column_is_rowguidcol,isAutoIncrementing:t.column_is_identity,isNullable:t.column_is_nullable&&t.type_is_nullable,name:t.column_name}))}return Object.values(s)}async getMetadata(e){return{tables:await this.getTables(e)}}}class Ci extends _t{getCurrentParameterPlaceholder(){return`@${this.numParameters}`}compileColumnAlterations(e){const t={};for(const i of e)t[i.kind]||(t[i.kind]=[]),t[i.kind].push(i);let i=!0;t.AddColumnNode&&(this.append("add "),this.compileList(t.AddColumnNode),i=!1),t.AlterColumnNode&&(i||this.append(", "),this.compileList(t.AlterColumnNode)),t.DropColumnNode&&(i||this.append(", "),this.append("drop column "),this.compileList(t.DropColumnNode)),t.ModifyColumnNode&&(i||this.append(", "),this.compileList(t.ModifyColumnNode)),t.RenameColumnNode&&(i||this.append(", "),this.compileList(t.RenameColumnNode))}visitAddColumn(e){this.visitNode(e.column)}visitDropColumn(e){this.visitNode(e.column)}announcesNewColumnDataType(){return!1}}class Ti{#O;constructor(e){this.#O=e}createDriver(){return new Ni(this.#O)}createQueryCompiler(){return new Ci}createAdapter(){return new wi}createIntrospector(e){return new xi(e)}}class Ei{#s;constructor(e){this.#s=e}async getMigrations(){const e={},t=await this.#s.fs.readdir(this.#s.migrationFolder);for(const i of t)if(i.endsWith(".js")||i.endsWith(".ts")&&!i.endsWith(".d.ts")||i.endsWith(".mjs")||i.endsWith(".mts")&&!i.endsWith(".d.mts")){const t=await import(this.#s.path.join(this.#s.migrationFolder,i)),s=i.substring(0,i.lastIndexOf("."));Ii(t?.default)?e[s]=t.default:Ii(t)&&(e[s]=t)}return e}}function Ii(e){return T(e)&&C(e.up)}class _i extends u{#Ne;constructor(e){super(),this.#Ne=e}transformIdentifier(e){return e=super.transformIdentifier(e),{...e,name:this.#Ne(e.name)}}}function Oi(e){return e>="0"&&e<="9"}function Ai(e){const t=new Map;return i=>{let s=t.get(i);return s||(s=e(i),t.set(i,s)),s}}class ki{opt;#ve;#Ne;#be;constructor(e={}){this.opt=e,this.#ve=function({upperCase:e=!1}={}){return Ai((t=>{if(0===t.length)return t;e&&function(e){for(let t=1,i=e.length;t<i;++t){const i=e[t];if("_"!==i&&i!==i.toUpperCase())return!1}return!0}(t)&&(t=t.toLowerCase());let i=t[0];for(let e=1,s=t.length;e<s;++e){const s=t[e],n=t[e-1];"_"!==s&&(i+="_"===n?s.toUpperCase():s)}return i}))}(e),this.#Ne=function({upperCase:e=!1,underscoreBeforeDigits:t=!1,underscoreBetweenUppercaseLetters:i=!1}={}){return Ai((s=>{if(0===s.length)return s;const n=s.toUpperCase(),r=s.toLowerCase();let o=r[0];for(let e=1,a=s.length;e<a;++e){const a=s[e],d=s[e-1],c=n[e],p=n[e-1],h=r[e],l=r[e-1];t&&Oi(a)&&!Oi(d)?o+="_"+a:o+=a===c&&c!==h?i||d!==p||p===l?"_"+h:h:a}return e?o.toUpperCase():o}))}(e),this.#be=new _i(this.snakeCase.bind(this))}transformQuery(e){return this.#be.transformNode(e.node)}async transformResult(e){return e.result.rows&&Array.isArray(e.result.rows)?{...e.result,rows:e.result.rows.map((e=>this.mapRow(e)))}:e.result}mapRow(e){return Object.keys(e).reduce(((t,i)=>{let s=e[i];return Array.isArray(s)?s=s.map((e=>qi(e,this.opt)?this.mapRow(e):e)):qi(s,this.opt)&&(s=this.mapRow(s)),t[this.camelCase(i)]=s,t}),{})}snakeCase(e){return this.#Ne(e)}camelCase(e){return this.#ve(e)}}function qi(e,t){return G(e)&&!t?.maintainNestedObjectKeys}class Pi extends u{transformSelectQuery(e){return this.#xe(super.transformSelectQuery(e))}transformUpdateQuery(e){return this.#xe(super.transformUpdateQuery(e))}transformDeleteQuery(e){return this.#xe(super.transformDeleteQuery(e))}#xe(t){return t.joins&&0!==t.joins.length?e({...t,joins:this.#Ce(t.joins)}):t}#Ce(t){const i=[];for(let e=0;e<t.length;++e){let s=!1;for(let i=e+1;i<t.length;++i)if(H(t[e],t[i])){s=!0;break}s||i.push(t[e])}return e(i)}}class Li{#n=new Pi;transformQuery(e){return this.#n.transformNode(e.node)}transformResult(e){return Promise.resolve(e.result)}}class Wi{transformQuery(e){return e.node}async transformResult(e){return{...e.result,rows:Di(e.result.rows)}}}function Di(e){for(let t=0;t<e.length;++t)e[t]=Si(e[t]);return e}function Si(e){return W(e)?function(e){if(t=e,null!=t.match(/^[\[\{]/))try{return Si(JSON.parse(e))}catch(e){}var t;return e}(e):Array.isArray(e)?Di(e):G(e)?function(e){for(const t in e)e[t]=Si(e[t]);return e}(e):e}const Mi=e({is:e=>"ListNode"===e.kind,create:t=>e({kind:"ListNode",items:e(t)})});export{ce as AddColumnNode,_e as AddConstraintNode,qe as AlterColumnBuilder,ke as AlterColumnNode,Qe as AlterTableBuilder,Ue as AlterTableColumnAlteringBuilder,ee as AlterTableNode,Pe as AlteredColumnBuilder,ki as CamelCasePlugin,I as CaseBuilder,O as CaseNode,ue as CheckConstraintNode,ve as ColumnDefinitionBuilder,pe as ColumnDefinitionNode,s as ColumnNode,qt as CompiledQuery,Tt as ConnectionBuilder,Ve as CreateIndexBuilder,te as CreateIndexNode,$e as CreateSchemaBuilder,ie as CreateSchemaNode,je as CreateTableBuilder,ne as CreateTableNode,it as CreateTypeBuilder,tt as CreateTypeNode,Xe as CreateViewBuilder,Ge as CreateViewNode,Ft as DEFAULT_MIGRATION_LOCK_TABLE,Ut as DEFAULT_MIGRATION_TABLE,Ce as DataTypeNode,Li as DeduplicateJoinsPlugin,pt as DefaultConnectionProvider,_t as DefaultQueryCompiler,ht as DefaultQueryExecutor,ge as DefaultValueNode,Wt as DialectAdapterBase,he as DropColumnNode,Ae as DropConstraintNode,Ke as DropIndexBuilder,re as DropIndexNode,ze as DropSchemaBuilder,oe as DropSchemaNode,Ye as DropTableBuilder,de as DropTableNode,nt as DropTypeBuilder,st as DropTypeNode,et as DropViewBuilder,Ze as DropViewNode,Pt as DummyDriver,ct as DynamicModule,Ei as FileMigrationProvider,Ie as ForeignKeyConstraintBuilder,Ee as ForeignKeyConstraintNode,fe as GeneratedNode,t as IdentifierNode,P as InsertQueryNode,bt as Kysely,ft as LOG_LEVELS,Mi as ListNode,gt as Log,Vt as MIGRATION_LOCK_ID,Jt as Migrator,xe as ModifyColumnNode,wi as MssqlAdapter,Ti as MssqlDialect,Ni as MssqlDriver,xi as MssqlIntrospector,Ci as MssqlQueryCompiler,pi as MysqlAdapter,hi as MysqlDialect,si as MysqlDriver,di as MysqlIntrospector,oi as MysqlQueryCompiler,$t as NO_MIGRATIONS,se as ON_COMMIT_ACTIONS,me as ON_MODIFY_FOREIGN_ACTIONS,u as OperationNodeTransformer,It as OperationNodeVisitor,S as OperatorNode,q as ParensNode,Wi as ParseJSONResultsPlugin,ei as PostgresAdapter,yi as PostgresDialect,ui as PostgresDriver,Xt as PostgresIntrospector,Ht as PostgresQueryCompiler,Se as PrimaryConstraintNode,E as QueryCreator,m as QueryNode,p as RawNode,ye as ReferencesNode,le as RenameColumnNode,dt as SchemaModule,d as SelectAllNode,F as SelectQueryNode,L as SetOperationNode,yt as SingleConnectionProvider,zt as SqliteAdapter,Yt as SqliteDialect,Dt as SqliteDriver,Kt as SqliteIntrospector,Rt as SqliteQueryCompiler,wt as TRANSACTION_ISOLATION_LEVELS,xt as Transaction,Et as TransactionBuilder,Oe as UniqueConstraintNode,g as ValueListNode,r as ValueNode,v as WithSchemaPlugin,k as createFunctionModule,vt as isCompilable,Ct as isKyselyProps,n as isOperationNodeSource,J as sql};
